 LINE  | ADDRESS  | HEX DUMP                  | ASSEMBLY
-------|----------|---------------------------|----------------------------
     1 |          |                           |         CPU     8086
     2 |          |                           |         ORG     0h
     3 |          |                           | InterruptVectorTable:
     4 |          |                           |         ; Internal x86 Interrupts:
     5 | 00000000 | 00000000                  |         dd      0 ; Reserved (Div err)  ; Int 00h
     6 | 00000004 | 00000000                  |         dd      0 ; Reserved (Step)     ; Int 01h
     7 | 00000008 | 00000000                  |         dd      0 ; Reserved (NMI)      ; Int 02h
     8 | 0000000C | 00000000                  |         dd      0 ; Reserved (Break)    ; Int 03h
     9 | 00000010 | 00000000                  |         dd      0 ; Reserved (Overflow) ; Int 04h
    10 | 00000014 | 00000000                  |         dd      0                       ; Int 05h
    11 | 00000018 | 00000000                  |         dd      0                       ; Int 06h
    12 | 0000001C | 00000000                  |         dd      0                       ; Int 07h
    13 |          |                           |         ; Hardware Interrupts:
    14 | 00000020 | [6E0A0000]                |         dd      ISRReset ; Reset               ; Int 08h (IRQ 0)
    15 | 00000024 | [8F0A0000]                |         dd      ISRTick ; Tick                ; Int 09h (IRQ 1)
    16 | 00000028 | [B00A0000]                |         dd      ISRKeyboard ; Keyboard            ; Int 0Ah (IRQ 2)
    17 | 0000002C | 00000000                  |         dd      0 ; Simptris Game Over  ; Int 0Bh (IRQ 3)
    18 | 00000030 | 00000000                  |         dd      0 ; Simptris New Piece  ; Int 0Ch (IRQ 4)
    19 | 00000034 | 00000000                  |         dd      0 ; Simptris Received   ; Int 0Dh (IRQ 5)
    20 | 00000038 | 00000000                  |         dd      0 ; Simptris Touchdown  ; Int 0Eh (IRQ 6)
    21 | 0000003C | 00000000                  |         dd      0 ; Simptris Clear      ; Int 0Fh (IRQ 7)
    22 |          |                           |         ; Software Interrupts:
    23 | 00000040 | 00000000                  |         dd      0 ; Reserved (PC BIOS)  ; Int 10h
    24 | 00000044 | 00000000                  |         dd      0                       ; Int 11h
    25 | 00000048 | 00000000                  |         dd      0                       ; Int 12h
    26 | 0000004C | 00000000                  |         dd      0                       ; Int 13h
    27 | 00000050 | 00000000                  |         dd      0                       ; Int 14h
    28 | 00000054 | 00000000                  |         dd      0                       ; Int 15h
    29 | 00000058 | 00000000                  |         dd      0                       ; Int 16h
    30 | 0000005C | 00000000                  |         dd      0                       ; Int 17h
    31 | 00000060 | 00000000                  |         dd      0                       ; Int 18h
    32 | 00000064 | 00000000                  |         dd      0                       ; Int 19h
    33 | 00000068 | 00000000                  |         dd      0                       ; Int 1Ah
    34 | 0000006C | 00000000                  |         dd      0                       ; Int 1Bh
    35 | 00000070 | 00000000                  |         dd      0                       ; Int 1Ch
    36 | 00000074 | 00000000                  |         dd      0                       ; Int 1Dh
    37 | 00000078 | 00000000                  |         dd      0                       ; Int 1Eh
    38 | 0000007C | 00000000                  |         dd      0                       ; Int 1Fh
    39 | 00000080 | 00000000                  |         dd      0                       ; Int 20h
    40 | 00000084 | 00000000                  |         dd      0 ; Reserved (DOS)      ; Int 21h
    41 | 00000088 | 00000000                  |         dd      0 ; Simptris Services   ; Int 22h
    42 | 0000008C | 00000000                  |         dd      0                       ; Int 23h
    43 | 00000090 | 00000000                  |         dd      0                       ; Int 24h
    44 | 00000094 | 00000000                  |         dd      0                       ; Int 25h
    45 | 00000098 | 00000000                  |         dd      0                       ; Int 26h
    46 | 0000009C | 00000000                  |         dd      0                       ; Int 27h
    47 | 000000A0 | 00000000                  |         dd      0                       ; Int 28h
    48 | 000000A4 | 00000000                  |         dd      0                       ; Int 29h
    49 | 000000A8 | 00000000                  |         dd      0                       ; Int 2Ah
    50 | 000000AC | 00000000                  |         dd      0                       ; Int 2Bh
    51 | 000000B0 | 00000000                  |         dd      0                       ; Int 2Ch
    52 | 000000B4 | 00000000                  |         dd      0                       ; Int 2Dh
    53 | 000000B8 | 00000000                  |         dd      0                       ; Int 2Eh
    54 | 000000BC | 00000000                  |         dd      0                       ; Int 2Fh
    55 |          |                           | KeyBuffer:                              ; Address 0xC0
    56 | 000000C0 | 0000                      |         dw      0
    57 |          |                           | NewPieceType:                           ; Address 0xC2
    58 | 000000C2 | 0000                      |         dw      0
    59 |          |                           | NewPieceID:                             ; Address 0xC4
    60 | 000000C4 | 0000                      |         dw      0
    61 |          |                           | NewPieceOrientation:                    ; Address 0xC6
    62 | 000000C6 | 0000                      |         dw      0
    63 |          |                           | NewPieceColumn:                         ; Address 0xC8
    64 | 000000C8 | 0000                      |         dw      0
    65 |          |                           | TouchdownID:                            ; Address 0xCA
    66 | 000000CA | 0000                      | 	dw	0
    67 |          |                           | ScreenBitMap0:                          ; Address 0xCC
    68 | 000000CC | 0000                      |         dw      0
    69 |          |                           | ScreenBitMap1:
    70 | 000000CE | 0000                      |         dw      0
    71 |          |                           | ScreenBitMap2:
    72 | 000000D0 | 0000                      |         dw      0
    73 |          |                           | ScreenBitMap3:
    74 | 000000D2 | 0000                      |         dw      0
    75 |          |                           | ScreenBitMap4:
    76 | 000000D4 | 0000                      |         dw      0
    77 |          |                           | ScreenBitMap5:
    78 | 000000D6 | 0000                      |         dw      0
    79 | 000000D8 | 00<rept>                  | TIMES   100h-($-$$) db  0               ; Fill up to (but not including) address 100h with 0
    80 | 00000100 | E9DD18                    | 	jmp	main
    81 |          |                           | ; This file contains support routines for 32-bit on the 8086.
    82 |          |                           | ; It is intended for use code generated by the C86 compiler.
    83 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    84 |          |                           | SR_asldiv:			; l1 /= l2
    85 | 00000103 | 55                        | 	push	bp
    86 | 00000104 | 89E5                      | 	mov	bp,sp
    87 | 00000106 | 53                        | 	push	bx
    88 | 00000107 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
    89 | 0000010A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
    90 | 0000010D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
    91 | 00000110 | FF7702                    | 	push	word [bx+2]	; Push hi l1
    92 | 00000113 | FF37                      | 	push	word [bx]	; Push lo l1
    93 | 00000115 | E83D01                    | 	call	SR_ldiv
    94 | 00000118 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
    95 | 0000011B | 895702                    | 	mov	[bx+2],dx	; Store result
    96 | 0000011E | 8907                      | 	mov	[bx],ax
    97 | 00000120 | 5B                        | 	pop	bx
    98 | 00000121 | 5D                        | 	pop	bp
    99 | 00000122 | C3                        | 	ret
   100 |          |                           | SR_aslmod:			; l1 %= l2
   101 | 00000123 | 55                        | 	push	bp
   102 | 00000124 | 89E5                      | 	mov	bp,sp
   103 | 00000126 | 53                        | 	push	bx
   104 | 00000127 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   105 | 0000012A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   106 | 0000012D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   107 | 00000130 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   108 | 00000133 | FF37                      | 	push	word [bx]	; Push lo l1
   109 | 00000135 | E82C01                    | 	call	SR_lmod
   110 | 00000138 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   111 | 0000013B | 895702                    | 	mov	[bx+2],dx	; Store result
   112 | 0000013E | 8907                      | 	mov	[bx],ax
   113 | 00000140 | 5B                        | 	pop	bx
   114 | 00000141 | 5D                        | 	pop	bp
   115 | 00000142 | C3                        | 	ret
   116 |          |                           | SR_aslmul:			; l1 *= l2
   117 | 00000143 | 55                        | 	push	bp
   118 | 00000144 | 89E5                      | 	mov	bp,sp
   119 | 00000146 | 53                        | 	push	bx
   120 | 00000147 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   121 | 0000014A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   122 | 0000014D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   123 | 00000150 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   124 | 00000153 | FF37                      | 	push	word [bx]	; Push lo l1
   125 | 00000155 | E84002                    | 	call	SR_lmul
   126 | 00000158 | 83C408                    | 	add	sp,8
   127 | 0000015B | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   128 | 0000015E | 895702                    | 	mov	[bx+2],dx	; Store result
   129 | 00000161 | 8907                      | 	mov	[bx],ax
   130 | 00000163 | 5B                        | 	pop	bx
   131 | 00000164 | 5D                        | 	pop	bp
   132 | 00000165 | C3                        | 	ret
   133 |          |                           | SR_aslshl:			; l1 <<= l2
   134 | 00000166 | 55                        | 	push	bp
   135 | 00000167 | 89E5                      | 	mov	bp,sp
   136 | 00000169 | 53                        | 	push	bx
   137 | 0000016A | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   138 | 0000016D | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   139 | 00000170 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   140 | 00000173 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   141 | 00000176 | FF37                      | 	push	word [bx]	; Push lo l1
   142 | 00000178 | E88801                    | 	call	SR_lshl
   143 | 0000017B | 83C408                    | 	add	sp,8
   144 | 0000017E | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   145 | 00000181 | 895702                    | 	mov	[bx+2],dx	; Store result
   146 | 00000184 | 8907                      | 	mov	[bx],ax
   147 | 00000186 | 5B                        | 	pop	bx
   148 | 00000187 | 5D                        | 	pop	bp
   149 | 00000188 | C3                        | 	ret
   150 |          |                           | SR_aslshr:			; l1 >>= l2
   151 | 00000189 | 55                        | 	push	bp
   152 | 0000018A | 89E5                      | 	mov	bp,sp
   153 | 0000018C | 53                        | 	push	bx
   154 | 0000018D | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   155 | 00000190 | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   156 | 00000193 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   157 | 00000196 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   158 | 00000199 | FF37                      | 	push	word [bx]	; Push lo l1
   159 | 0000019B | E89701                    | 	call	SR_lshr
   160 | 0000019E | 83C408                    | 	add	sp,8
   161 | 000001A1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   162 | 000001A4 | 895702                    | 	mov	[bx+2],dx	; Store result
   163 | 000001A7 | 8907                      | 	mov	[bx],ax
   164 | 000001A9 | 5B                        | 	pop	bx
   165 | 000001AA | 5D                        | 	pop	bp
   166 | 000001AB | C3                        | 	ret
   167 |          |                           | 
   168 |          |                           | 
   169 |          |                           | SR_asuldiv:			; u1 /= u2
   170 | 000001AC | 55                        | 	push	bp
   171 | 000001AD | 89E5                      | 	mov	bp,sp
   172 | 000001AF | 53                        | 	push	bx
   173 | 000001B0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   174 | 000001B3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   175 | 000001B6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   176 | 000001B9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   177 | 000001BC | FF37                      | 	push	word [bx]	; Push lo u1
   178 | 000001BE | E89B00                    | 	call	SR_uldiv
   179 | 000001C1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   180 | 000001C4 | 895702                    | 	mov	[bx+2],dx	; Store result
   181 | 000001C7 | 8907                      | 	mov	[bx],ax
   182 | 000001C9 | 5B                        | 	pop	bx
   183 | 000001CA | 5D                        | 	pop	bp
   184 | 000001CB | C3                        | 	ret
   185 |          |                           | SR_asilmod:			; u1 %= u2
   186 | 000001CC | 55                        | 	push	bp
   187 | 000001CD | 89E5                      | 	mov	bp,sp
   188 | 000001CF | 53                        | 	push	bx
   189 | 000001D0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   190 | 000001D3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   191 | 000001D6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   192 | 000001D9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   193 | 000001DC | FF37                      | 	push	word [bx]	; Push lo u1
   194 | 000001DE | E88B00                    | 	call	SR_ilmod
   195 | 000001E1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   196 | 000001E4 | 895702                    | 	mov	[bx+2],dx	; Store result
   197 | 000001E7 | 8907                      | 	mov	[bx],ax
   198 | 000001E9 | 5B                        | 	pop	bx
   199 | 000001EA | 5D                        | 	pop	bp
   200 | 000001EB | C3                        | 	ret
   201 |          |                           | SR_asulmul:			; u1 *= u2
   202 | 000001EC | 55                        | 	push	bp
   203 | 000001ED | 89E5                      | 	mov	bp,sp
   204 | 000001EF | 53                        | 	push	bx
   205 | 000001F0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   206 | 000001F3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   207 | 000001F6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   208 | 000001F9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   209 | 000001FC | FF37                      | 	push	word [bx]	; Push lo u1
   210 | 000001FE | E89701                    | 	call	SR_ulmul
   211 | 00000201 | 83C408                    | 	add	sp,8
   212 | 00000204 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   213 | 00000207 | 895702                    | 	mov	[bx+2],dx	; Store result
   214 | 0000020A | 8907                      | 	mov	[bx],ax
   215 | 0000020C | 5B                        | 	pop	bx
   216 | 0000020D | 5D                        | 	pop	bp
   217 | 0000020E | C3                        | 	ret
   218 |          |                           | SR_asulshl:			; u1 << u2
   219 | 0000020F | 55                        | 	push	bp
   220 | 00000210 | 89E5                      | 	mov	bp,sp
   221 | 00000212 | 53                        | 	push	bx
   222 | 00000213 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   223 | 00000216 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   224 | 00000219 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   225 | 0000021C | FF7702                    | 	push	word [bx+2]	; Push hi u1
   226 | 0000021F | FF37                      | 	push	word [bx]	; Push lo u1
   227 | 00000221 | E8DF00                    | 	call	SR_ulshl
   228 | 00000224 | 83C408                    | 	add	sp,8
   229 | 00000227 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   230 | 0000022A | 895702                    | 	mov	[bx+2],dx	; Store result
   231 | 0000022D | 8907                      | 	mov	[bx],ax
   232 | 0000022F | 5B                        | 	pop	bx
   233 | 00000230 | 5D                        | 	pop	bp
   234 | 00000231 | C3                        | 	ret
   235 |          |                           | SR_asulshr:			; u1 >> u2
   236 | 00000232 | 55                        | 	push	bp
   237 | 00000233 | 89E5                      | 	mov	bp,sp
   238 | 00000235 | 53                        | 	push	bx
   239 | 00000236 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   240 | 00000239 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   241 | 0000023C | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   242 | 0000023F | FF7702                    | 	push	word [bx+2]	; Push hi u1
   243 | 00000242 | FF37                      | 	push	word [bx]	; Push lo u1
   244 | 00000244 | E81F01                    | 	call	SR_ulshr
   245 | 00000247 | 83C408                    | 	add	sp,8
   246 | 0000024A | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   247 | 0000024D | 895702                    | 	mov	[bx+2],dx	; Store result
   248 | 00000250 | 8907                      | 	mov	[bx],ax
   249 | 00000252 | 5B                        | 	pop	bx
   250 | 00000253 | 5D                        | 	pop	bp
   251 | 00000254 | C3                        | 	ret
   252 |          |                           | 
   253 |          |                           | 
   254 |          |                           | ; Main 32-bit routines begin here:
   255 |          |                           | 
   256 |          |                           | SR_ldiv:	; N_LDIV@
   257 | 00000255 | 59                        | 	pop    cx
   258 | 00000256 | 0E                        | 	push   cs
   259 | 00000257 | 51                        | 	push   cx
   260 |          |                           | 	; LDIV@
   261 | 00000258 | 31C9                      | 	xor    cx,cx
   262 | 0000025A | EB16                      | 	jmp    LSR_01
   263 |          |                           | SR_uldiv:	; N_LUDIV@
   264 | 0000025C | 59                        | 	pop    cx
   265 | 0000025D | 0E                        | 	push   cs
   266 | 0000025E | 51                        | 	push   cx
   267 |          |                           | 	; F_LUDIV@
   268 | 0000025F | B90100                    | 	mov    cx,0001
   269 | 00000262 | EB0E                      | 	jmp    LSR_01
   270 |          |                           | SR_lmod:	; N_LMOD@
   271 | 00000264 | 59                        | 	pop    cx
   272 | 00000265 | 0E                        | 	push   cs
   273 | 00000266 | 51                        | 	push   cx
   274 |          |                           | 	; F_LMOD@
   275 | 00000267 | B90200                    | 	mov    cx,0002
   276 | 0000026A | EB06                      | 	jmp    LSR_01
   277 |          |                           | SR_ilmod:	; N_LUMOD@
   278 | 0000026C | 59                        | 	pop    cx
   279 | 0000026D | 0E                        | 	push   cs
   280 | 0000026E | 51                        | 	push   cx
   281 |          |                           | 	; LUMOD@
   282 | 0000026F | B90300                    | 	mov    cx,0003
   283 |          |                           | LSR_01:
   284 | 00000272 | 55                        | 	push   bp
   285 | 00000273 | 56                        | 	push   si
   286 | 00000274 | 57                        | 	push   di
   287 | 00000275 | 89E5                      | 	mov    bp,sp
   288 | 00000277 | 89CF                      | 	mov    di,cx
   289 | 00000279 | 8B460A                    | 	mov    ax,[bp+0Ah]
   290 | 0000027C | 8B560C                    | 	mov    dx,[bp+0Ch]
   291 | 0000027F | 8B5E0E                    | 	mov    bx,[bp+0Eh]
   292 | 00000282 | 8B4E10                    | 	mov    cx,[bp+10h]
   293 | 00000285 | 09C9                      | 	or     cx,cx
   294 | 00000287 | 7508                      | 	jne    LSR_02
   295 | 00000289 | 09D2                      | 	or     dx,dx
   296 | 0000028B | 7469                      | 	je     LSR_10
   297 | 0000028D | 09DB                      | 	or     bx,bx
   298 | 0000028F | 7465                      | 	je     LSR_10
   299 |          |                           | LSR_02:
   300 | 00000291 | F7C70100                  | 	test   di,0001
   301 | 00000295 | 751C                      | 	jne    LSR_04
   302 | 00000297 | 09D2                      | 	or     dx,dx
   303 | 00000299 | 790A                      | 	jns    LSR_03
   304 | 0000029B | F7DA                      | 	neg    dx
   305 | 0000029D | F7D8                      | 	neg    ax
   306 | 0000029F | 83DA00                    | 	sbb    dx,0000
   307 | 000002A2 | 83CF0C                    | 	or     di,000Ch
   308 |          |                           | LSR_03:
   309 | 000002A5 | 09C9                      | 	or     cx,cx
   310 | 000002A7 | 790A                      | 	jns    LSR_04
   311 | 000002A9 | F7D9                      | 	neg    cx
   312 | 000002AB | F7DB                      | 	neg    bx
   313 | 000002AD | 83D900                    | 	sbb    cx,0000
   314 | 000002B0 | 83F704                    | 	xor    di,0004
   315 |          |                           | LSR_04:
   316 | 000002B3 | 89CD                      | 	mov    bp,cx
   317 | 000002B5 | B92000                    | 	mov    cx,0020h
   318 | 000002B8 | 57                        | 	push   di
   319 | 000002B9 | 31FF                      | 	xor    di,di
   320 | 000002BB | 31F6                      | 	xor    si,si
   321 |          |                           | LSR_05:
   322 | 000002BD | D1E0                      | 	shl    ax,1
   323 | 000002BF | D1D2                      | 	rcl    dx,1
   324 | 000002C1 | D1D6                      | 	rcl    si,1
   325 | 000002C3 | D1D7                      | 	rcl    di,1
   326 | 000002C5 | 39EF                      | 	cmp    di,bp
   327 | 000002C7 | 720B                      | 	jb     LSR_07
   328 | 000002C9 | 7704                      | 	ja     LSR_06
   329 | 000002CB | 39DE                      | 	cmp    si,bx
   330 | 000002CD | 7205                      | 	jb     LSR_07
   331 |          |                           | LSR_06:
   332 | 000002CF | 29DE                      | 	sub    si,bx
   333 | 000002D1 | 19EF                      | 	sbb    di,bp
   334 | 000002D3 | 40                        | 	inc    ax
   335 |          |                           | LSR_07:
   336 | 000002D4 | E2E7                      | 	loop   LSR_05
   337 | 000002D6 | 5B                        | 	pop    bx
   338 | 000002D7 | F7C30200                  | 	test   bx,0002
   339 | 000002DB | 7406                      | 	je     LSR_08
   340 | 000002DD | 89F0                      | 	mov    ax,si
   341 | 000002DF | 89FA                      | 	mov    dx,di
   342 | 000002E1 | D1EB                      | 	shr    bx,1
   343 |          |                           | LSR_08:
   344 | 000002E3 | F7C30400                  | 	test   bx,0004h
   345 | 000002E7 | 7407                      | 	je     LSR_09
   346 | 000002E9 | F7DA                      | 	neg    dx
   347 | 000002EB | F7D8                      | 	neg    ax
   348 | 000002ED | 83DA00                    | 	sbb    dx,0000
   349 |          |                           | LSR_09:
   350 | 000002F0 | 5F                        | 	pop    di
   351 | 000002F1 | 5E                        | 	pop    si
   352 | 000002F2 | 5D                        | 	pop    bp
   353 | 000002F3 | CA0800                    | 	retf   0008
   354 |          |                           | LSR_10:
   355 | 000002F6 | F7F3                      | 	div    bx
   356 | 000002F8 | F7C70200                  | 	test   di,0002
   357 | 000002FC | 7401                      | 	je     LSR_11
   358 | 000002FE | 92                        | 	xchg   dx,ax
   359 |          |                           | LSR_11:
   360 | 000002FF | 31D2                      | 	xor    dx,dx
   361 | 00000301 | EBED                      | 	jmp    LSR_09
   362 |          |                           | SR_lshl:	; N_LXLSH@
   363 |          |                           | SR_ulshl:
   364 |          |                           | 	; r = a << b
   365 | 00000303 | 5B                        | 	pop    bx
   366 | 00000304 | 0E                        | 	push   cs
   367 | 00000305 | 53                        | 	push   bx
   368 |          |                           | 
   369 | 00000306 | 55                        | 	push   bp
   370 | 00000307 | 89E5                      | 	mov    bp,sp
   371 |          |                           | 
   372 | 00000309 | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   373 |          |                           | 
   374 | 0000030A | 8B4606                    | 	mov    ax, [bp+6]	; pop loword(a)
   375 | 0000030D | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   376 | 00000310 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   377 |          |                           | 	
   378 |          |                           | 	; LXLSH@
   379 | 00000313 | 80F910                    | 	cmp    cl,10h
   380 | 00000316 | 7312                      | 	jnb    LSR_12
   381 | 00000318 | 89C3                      | 	mov    bx,ax
   382 | 0000031A | D3E0                      | 	shl    ax,cl
   383 | 0000031C | D3E2                      | 	shl    dx,cl
   384 | 0000031E | F6D9                      | 	neg    cl
   385 | 00000320 | 80C110                    | 	add    cl,10h
   386 | 00000323 | D3EB                      | 	shr    bx,cl
   387 | 00000325 | 09DA                      | 	or     dx,bx
   388 | 00000327 | 59                        | 	pop    cx
   389 | 00000328 | 5D                        | 	pop    bp
   390 | 00000329 | CB                        | 	retf
   391 |          |                           | LSR_12:
   392 | 0000032A | 80E910                    | 	sub    cl,10h
   393 | 0000032D | 92                        | 	xchg   dx,ax
   394 | 0000032E | 31C0                      | 	xor    ax,ax
   395 | 00000330 | D3E2                      | 	shl    dx,cl
   396 | 00000332 | 59                        | 	pop    cx
   397 | 00000333 | 5D                        | 	pop    bp
   398 | 00000334 | CB                        | 	retf
   399 |          |                           | SR_lshr:	; N_LXRSH@
   400 |          |                           | 	; r = a >> b
   401 | 00000335 | 5B                        | 	pop    bx
   402 | 00000336 | 0E                        | 	push   cs
   403 | 00000337 | 53                        | 	push   bx
   404 |          |                           | 
   405 | 00000338 | 55                        | 	push   bp
   406 | 00000339 | 89E5                      | 	mov    bp,sp
   407 |          |                           | 
   408 | 0000033B | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   409 |          |                           | 
   410 | 0000033C | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   411 | 0000033F | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   412 | 00000342 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   413 |          |                           | 	
   414 |          |                           | 	; LXRSH@
   415 | 00000345 | 80F910                    | 	cmp    cl,10h
   416 | 00000348 | 7312                      | 	jnb    LSR_13
   417 | 0000034A | 89D3                      | 	mov    bx,dx
   418 | 0000034C | D3E8                      | 	shr    ax,cl
   419 | 0000034E | D3FA                      | 	sar    dx,cl
   420 | 00000350 | F6D9                      | 	neg    cl
   421 | 00000352 | 80C110                    | 	add    cl,10h
   422 | 00000355 | D3E3                      | 	shl    bx,cl
   423 | 00000357 | 09D8                      | 	or     ax,bx
   424 | 00000359 | 59                        | 	pop    cx
   425 | 0000035A | 5D                        | 	pop    bp
   426 | 0000035B | CB                        | 	retf
   427 |          |                           | LSR_13:
   428 | 0000035C | 80E910                    | 	sub    cl,10h
   429 | 0000035F | 92                        | 	xchg   dx,ax
   430 | 00000360 | 99                        | 	cwd
   431 | 00000361 | D3F8                      | 	sar    ax,cl
   432 | 00000363 | 59                        | 	pop    cx
   433 | 00000364 | 5D                        | 	pop    bp
   434 | 00000365 | CB                        | 	retf
   435 |          |                           | SR_ulshr:	; N_LXURSH@
   436 |          |                           | 	; r = a >> b
   437 | 00000366 | 5B                        | 	pop    bx
   438 | 00000367 | 0E                        | 	push   cs
   439 | 00000368 | 53                        | 	push   bx
   440 |          |                           | 
   441 | 00000369 | 55                        | 	push   bp
   442 | 0000036A | 89E5                      | 	mov    bp,sp
   443 |          |                           | 
   444 | 0000036C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   445 |          |                           | 
   446 | 0000036D | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   447 | 00000370 | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   448 | 00000373 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   449 |          |                           | 	
   450 |          |                           | 	; LXURSH@
   451 | 00000376 | 80F910                    | 	cmp    cl,10h
   452 | 00000379 | 7312                      | 	jnb    LSR_14
   453 | 0000037B | 89D3                      | 	mov    bx,dx
   454 | 0000037D | D3E8                      | 	shr    ax,cl
   455 | 0000037F | D3EA                      | 	shr    dx,cl
   456 | 00000381 | F6D9                      | 	neg    cl
   457 | 00000383 | 80C110                    | 	add    cl,10h
   458 | 00000386 | D3E3                      | 	shl    bx,cl
   459 | 00000388 | 09D8                      | 	or     ax,bx
   460 | 0000038A | 59                        | 	pop    cx
   461 | 0000038B | 5D                        | 	pop    bp
   462 | 0000038C | CB                        | 	retf
   463 |          |                           | LSR_14:
   464 | 0000038D | 80E910                    | 	sub    cl,10h
   465 | 00000390 | 92                        | 	xchg   dx,ax
   466 | 00000391 | 31D2                      | 	xor    dx,dx
   467 | 00000393 | D3E8                      | 	shr    ax,cl
   468 | 00000395 | 59                        | 	pop    cx
   469 | 00000396 | 5D                        | 	pop    bp
   470 | 00000397 | CB                        | 	retf
   471 |          |                           | SR_lmul:	; N_LXMUL@
   472 |          |                           | SR_ulmul:
   473 |          |                           | 	; r = a * b
   474 | 00000398 | 55                        | 	push   bp
   475 | 00000399 | 56                        | 	push   si
   476 | 0000039A | 89E5                      | 	mov    bp,sp
   477 |          |                           | 
   478 | 0000039C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   479 | 0000039D | 53                        | 	push   bx
   480 |          |                           | 
   481 | 0000039E | 8B5E06                    |         mov    bx, [bp+6]	; pop loword(a)
   482 | 000003A1 | 8B4E08                    | 	mov    cx, [bp+8]	; pop hiword(a)
   483 | 000003A4 | 8B460A                    | 	mov    ax, [bp+10]	; pop loword(b)
   484 | 000003A7 | 8B560C                    | 	mov    dx, [bp+12]	; pop hiword(b)
   485 |          |                           | 	
   486 | 000003AA | 96                        | 	xchg   si,ax
   487 | 000003AB | 92                        | 	xchg   dx,ax
   488 | 000003AC | 85C0                      | 	test   ax,ax
   489 | 000003AE | 7402                      | 	je     LSR_15
   490 | 000003B0 | F7E3                      | 	mul    bx
   491 |          |                           | LSR_15:
   492 | 000003B2 | E305                      | 	jcxz   LSR_16
   493 | 000003B4 | 91                        | 	xchg   cx,ax
   494 | 000003B5 | F7E6                      | 	mul    si
   495 | 000003B7 | 01C8                      | 	add    ax,cx
   496 |          |                           | LSR_16:
   497 | 000003B9 | 96                        | 	xchg   si,ax
   498 | 000003BA | F7E3                      | 	mul    bx
   499 | 000003BC | 01F2                      | 	add    dx,si
   500 | 000003BE | 5B                        | 	pop    bx
   501 | 000003BF | 59                        | 	pop    cx
   502 | 000003C0 | 5E                        | 	pop    si
   503 | 000003C1 | 5D                        | 	pop    bp
   504 | 000003C2 | C3                        | 	ret
   505 |          |                           | 
   506 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from clib.c
   507 |          |                           | 	CPU	8086
   508 | 000003C3 | 90                        | 	ALIGN	2
   509 | 000003C4 | E91916                    | 	jmp	main	; Jump to program start
   510 |          |                           | new_line:
   511 | 000003C7 | 0D0A24                    | 	db	13,10,36
   512 |          |                           | 	ALIGN	2
   513 |          |                           | signalEOI:
   514 | 000003CA | EB08                      | 	jmp	L_clib_1
   515 |          |                           | L_clib_2:
   516 | 000003CC | B020                      | 	mov	al, 0x20
   517 | 000003CE | E620                      | 	out	0x20, al
   518 | 000003D0 | 89EC                      | 	mov	sp, bp
   519 | 000003D2 | 5D                        | 	pop	bp
   520 | 000003D3 | C3                        | 	ret
   521 |          |                           | L_clib_1:
   522 | 000003D4 | 55                        | 	push	bp
   523 | 000003D5 | 89E5                      | 	mov	bp, sp
   524 | 000003D7 | EBF3                      | 	jmp	L_clib_2
   525 | 000003D9 | 90                        | 	ALIGN	2
   526 |          |                           | exit:
   527 | 000003DA | EB0B                      | 	jmp	L_clib_4
   528 |          |                           | L_clib_5:
   529 | 000003DC | B44C                      | 	mov	ah, 4Ch
   530 | 000003DE | 8A4604                    | 	mov	al, [bp+4]
   531 | 000003E1 | CD21                      | 	int	21h
   532 | 000003E3 | 89EC                      | 	mov	sp, bp
   533 | 000003E5 | 5D                        | 	pop	bp
   534 | 000003E6 | C3                        | 	ret
   535 |          |                           | L_clib_4:
   536 | 000003E7 | 55                        | 	push	bp
   537 | 000003E8 | 89E5                      | 	mov	bp, sp
   538 | 000003EA | EBF0                      | 	jmp	L_clib_5
   539 |          |                           | 	ALIGN	2
   540 |          |                           | print:
   541 | 000003EC | EB11                      | 	jmp	L_clib_7
   542 |          |                           | L_clib_8:
   543 | 000003EE | B440                      | 	mov	ah, 40h
   544 | 000003F0 | BB0100                    | 	mov	bx, 1
   545 | 000003F3 | 8B4E06                    | 	mov	cx, [bp+6]
   546 | 000003F6 | 8B5604                    | 	mov	dx, [bp+4]
   547 | 000003F9 | CD21                      | 	int	21h
   548 | 000003FB | 89EC                      | 	mov	sp, bp
   549 | 000003FD | 5D                        | 	pop	bp
   550 | 000003FE | C3                        | 	ret
   551 |          |                           | L_clib_7:
   552 | 000003FF | 55                        | 	push	bp
   553 | 00000400 | 89E5                      | 	mov	bp, sp
   554 | 00000402 | EBEA                      | 	jmp	L_clib_8
   555 |          |                           | 	ALIGN	2
   556 |          |                           | printChar:
   557 | 00000404 | EB0B                      | 	jmp	L_clib_10
   558 |          |                           | L_clib_11:
   559 | 00000406 | B402                      | 	mov	ah, 2
   560 | 00000408 | 8A5604                    | 	mov	dl, [bp+4]
   561 | 0000040B | CD21                      | 	int	21h
   562 | 0000040D | 89EC                      | 	mov	sp, bp
   563 | 0000040F | 5D                        | 	pop	bp
   564 | 00000410 | C3                        | 	ret
   565 |          |                           | L_clib_10:
   566 | 00000411 | 55                        | 	push	bp
   567 | 00000412 | 89E5                      | 	mov	bp, sp
   568 | 00000414 | EBF0                      | 	jmp	L_clib_11
   569 |          |                           | 	ALIGN	2
   570 |          |                           | printNewLine:
   571 | 00000416 | EB0B                      | 	jmp	L_clib_13
   572 |          |                           | L_clib_14:
   573 | 00000418 | B409                      | 	mov	ah, 9
   574 | 0000041A | BA[C703]                  | 	mov	dx, new_line
   575 | 0000041D | CD21                      | 	int	21h
   576 | 0000041F | 89EC                      | 	mov	sp, bp
   577 | 00000421 | 5D                        | 	pop	bp
   578 | 00000422 | C3                        | 	ret
   579 |          |                           | L_clib_13:
   580 | 00000423 | 55                        | 	push	bp
   581 | 00000424 | 89E5                      | 	mov	bp, sp
   582 | 00000426 | EBF0                      | 	jmp	L_clib_14
   583 |          |                           | 	ALIGN	2
   584 |          |                           | printString:
   585 | 00000428 | EB1C                      | 	jmp	L_clib_16
   586 |          |                           | L_clib_17:
   587 | 0000042A | 31F6                      | 	xor	si,si
   588 | 0000042C | 8B5E04                    | 	mov	bx, [bp+4]
   589 | 0000042F | EB01                      | 	jmp	printString2
   590 |          |                           | 	printString1:
   591 | 00000431 | 46                        | 	inc	si
   592 |          |                           | 	printString2:
   593 | 00000432 | 803800                    | 	cmp	byte [bx+si],0
   594 | 00000435 | 75FA                      | 	jne	printString1
   595 | 00000437 | 89DA                      | 	mov	dx, bx
   596 | 00000439 | 89F1                      | 	mov	cx, si
   597 | 0000043B | B440                      | 	mov	ah, 40h
   598 | 0000043D | BB0100                    | 	mov	bx, 1
   599 | 00000440 | CD21                      | 	int	21h
   600 | 00000442 | 89EC                      | 	mov	sp, bp
   601 | 00000444 | 5D                        | 	pop	bp
   602 | 00000445 | C3                        | 	ret
   603 |          |                           | L_clib_16:
   604 | 00000446 | 55                        | 	push	bp
   605 | 00000447 | 89E5                      | 	mov	bp, sp
   606 | 00000449 | 51                        | 	push	cx
   607 | 0000044A | EBDE                      | 	jmp	L_clib_17
   608 |          |                           | 	ALIGN	2
   609 |          |                           | printInt:
   610 | 0000044C | E99500                    | 	jmp	L_clib_19
   611 |          |                           | L_clib_20:
   612 | 0000044F | C746FE0000                | 	mov	word [bp-2], 0
   613 | 00000454 | C746FC1027                | 	mov	word [bp-4], 10000
   614 | 00000459 | 837E0400                  | 	cmp	word [bp+4], 0
   615 | 0000045D | 7D0F                      | 	jge	L_clib_21
   616 | 0000045F | C646F62D                  | 	mov	byte [bp-10], 45
   617 | 00000463 | FF46FE                    | 	inc	word [bp-2]
   618 | 00000466 | 8B4604                    | 	mov	ax, word [bp+4]
   619 | 00000469 | F7D8                      | 	neg	ax
   620 | 0000046B | 894604                    | 	mov	word [bp+4], ax
   621 |          |                           | L_clib_21:
   622 | 0000046E | 8B4604                    | 	mov	ax, word [bp+4]
   623 | 00000471 | 85C0                      | 	test	ax, ax
   624 | 00000473 | 7507                      | 	jne	L_clib_22
   625 | 00000475 | C746FC0100                | 	mov	word [bp-4], 1
   626 | 0000047A | EB19                      | 	jmp	L_clib_23
   627 |          |                           | L_clib_22:
   628 | 0000047C | EB0C                      | 	jmp	L_clib_25
   629 |          |                           | L_clib_24:
   630 | 0000047E | 8B46FC                    | 	mov	ax, word [bp-4]
   631 | 00000481 | 99                        | 	cwd
   632 | 00000482 | B90A00                    | 	mov	cx, 10
   633 | 00000485 | F7F9                      | 	idiv	cx
   634 | 00000487 | 8946FC                    | 	mov	word [bp-4], ax
   635 |          |                           | L_clib_25:
   636 | 0000048A | 8B4604                    | 	mov	ax, word [bp+4]
   637 | 0000048D | 99                        | 	cwd
   638 | 0000048E | F77EFC                    | 	idiv	word [bp-4]
   639 | 00000491 | 85C0                      | 	test	ax, ax
   640 | 00000493 | 74E9                      | 	je	L_clib_24
   641 |          |                           | L_clib_26:
   642 |          |                           | L_clib_23:
   643 | 00000495 | EB36                      | 	jmp	L_clib_28
   644 |          |                           | L_clib_27:
   645 | 00000497 | 8B4604                    | 	mov	ax, word [bp+4]
   646 | 0000049A | 31D2                      | 	xor	dx, dx
   647 | 0000049C | F776FC                    | 	div	word [bp-4]
   648 | 0000049F | 0430                      | 	add	al, 48
   649 | 000004A1 | 8B76FE                    | 	mov	si, word [bp-2]
   650 | 000004A4 | 8D56F6                    | 	lea	dx, [bp-10]
   651 | 000004A7 | 01D6                      | 	add	si, dx
   652 | 000004A9 | 8804                      | 	mov	byte [si], al
   653 | 000004AB | FF46FE                    | 	inc	word [bp-2]
   654 | 000004AE | 8B4604                    | 	mov	ax, word [bp+4]
   655 | 000004B1 | 31D2                      | 	xor	dx, dx
   656 | 000004B3 | F776FC                    | 	div	word [bp-4]
   657 | 000004B6 | 89D0                      | 	mov	ax, dx
   658 | 000004B8 | 894604                    | 	mov	word [bp+4], ax
   659 | 000004BB | 8B46FC                    | 	mov	ax, word [bp-4]
   660 | 000004BE | 99                        | 	cwd
   661 | 000004BF | B90A00                    | 	mov	cx, 10
   662 | 000004C2 | F7F9                      | 	idiv	cx
   663 | 000004C4 | 8946FC                    | 	mov	word [bp-4], ax
   664 | 000004C7 | 8B46FC                    | 	mov	ax, word [bp-4]
   665 | 000004CA | 8946FC                    | 	mov	word [bp-4], ax
   666 |          |                           | L_clib_28:
   667 | 000004CD | 837EFC00                  | 	cmp	word [bp-4], 0
   668 | 000004D1 | 7FC4                      | 	jg	L_clib_27
   669 |          |                           | L_clib_29:
   670 | 000004D3 | FF76FE                    | 	push	word [bp-2]
   671 | 000004D6 | 8D46F6                    | 	lea	ax, [bp-10]
   672 | 000004D9 | 50                        | 	push	ax
   673 | 000004DA | E80FFF                    | 	call	print
   674 | 000004DD | 83C404                    | 	add	sp, 4
   675 | 000004E0 | 89EC                      | 	mov	sp, bp
   676 | 000004E2 | 5D                        | 	pop	bp
   677 | 000004E3 | C3                        | 	ret
   678 |          |                           | L_clib_19:
   679 | 000004E4 | 55                        | 	push	bp
   680 | 000004E5 | 89E5                      | 	mov	bp, sp
   681 | 000004E7 | 83EC0A                    | 	sub	sp, 10
   682 | 000004EA | E962FF                    | 	jmp	L_clib_20
   683 | 000004ED | 90                        | 	ALIGN	2
   684 |          |                           | printLong:
   685 | 000004EE | E9D200                    | 	jmp	L_clib_31
   686 |          |                           | L_clib_32:
   687 | 000004F1 | C746FE0000                | 	mov	word [bp-2], 0
   688 | 000004F6 | C746FA00CA                | 	mov	word [bp-6], 51712
   689 | 000004FB | C746FC9A3B                | 	mov	word [bp-4], 15258
   690 | 00000500 | 837E0600                  | 	cmp	word [bp+6], 0
   691 | 00000504 | 7F22                      | 	jg	L_clib_33
   692 | 00000506 | 7C06                      | 	jl	L_clib_34
   693 | 00000508 | 837E0400                  | 	cmp	word [bp+4], 0
   694 | 0000050C | 731A                      | 	jae	L_clib_33
   695 |          |                           | L_clib_34:
   696 | 0000050E | C646EF2D                  | 	mov	byte [bp-17], 45
   697 | 00000512 | FF46FE                    | 	inc	word [bp-2]
   698 | 00000515 | 8B4604                    | 	mov	ax, word [bp+4]
   699 | 00000518 | 8B5606                    | 	mov	dx, word [bp+6]
   700 | 0000051B | F7D8                      | 	neg	ax
   701 | 0000051D | 83D200                    | 	adc	dx, 0
   702 | 00000520 | F7DA                      | 	neg	dx
   703 | 00000522 | 894604                    | 	mov	word [bp+4], ax
   704 | 00000525 | 895606                    | 	mov	word [bp+6], dx
   705 |          |                           | L_clib_33:
   706 | 00000528 | 8B4604                    | 	mov	ax, word [bp+4]
   707 | 0000052B | 8B5606                    | 	mov	dx, word [bp+6]
   708 | 0000052E | 09C2                      | 	or	dx, ax
   709 | 00000530 | 750C                      | 	jne	L_clib_35
   710 | 00000532 | C746FA0100                | 	mov	word [bp-6], 1
   711 | 00000537 | C746FC0000                | 	mov	word [bp-4], 0
   712 | 0000053C | EB23                      | 	jmp	L_clib_36
   713 |          |                           | L_clib_35:
   714 | 0000053E | EB0E                      | 	jmp	L_clib_38
   715 |          |                           | L_clib_37:
   716 | 00000540 | B80A00                    | 	mov	ax, 10
   717 | 00000543 | 31D2                      | 	xor	dx, dx
   718 | 00000545 | 52                        | 	push	dx
   719 | 00000546 | 50                        | 	push	ax
   720 | 00000547 | 8D46FA                    | 	lea	ax, [bp-6]
   721 | 0000054A | 50                        | 	push	ax
   722 | 0000054B | E8B5FB                    | 	call	SR_asldiv
   723 |          |                           | L_clib_38:
   724 | 0000054E | FF76FC                    | 	push	word [bp-4]
   725 | 00000551 | FF76FA                    | 	push	word [bp-6]
   726 | 00000554 | FF7606                    | 	push	word [bp+6]
   727 | 00000557 | FF7604                    | 	push	word [bp+4]
   728 | 0000055A | E8F8FC                    | 	call	SR_ldiv
   729 | 0000055D | 09C2                      | 	or	dx, ax
   730 | 0000055F | 74DF                      | 	je	L_clib_37
   731 |          |                           | L_clib_39:
   732 |          |                           | L_clib_36:
   733 | 00000561 | EB41                      | 	jmp	L_clib_41
   734 |          |                           | L_clib_40:
   735 | 00000563 | FF76FC                    | 	push	word [bp-4]
   736 | 00000566 | FF76FA                    | 	push	word [bp-6]
   737 | 00000569 | FF7606                    | 	push	word [bp+6]
   738 | 0000056C | FF7604                    | 	push	word [bp+4]
   739 | 0000056F | E8EAFC                    | 	call	SR_uldiv
   740 | 00000572 | 0430                      | 	add	al, 48
   741 | 00000574 | 8B76FE                    | 	mov	si, word [bp-2]
   742 | 00000577 | 8D56EF                    | 	lea	dx, [bp-17]
   743 | 0000057A | 01D6                      | 	add	si, dx
   744 | 0000057C | 8804                      | 	mov	byte [si], al
   745 | 0000057E | FF46FE                    | 	inc	word [bp-2]
   746 | 00000581 | FF76FC                    | 	push	word [bp-4]
   747 | 00000584 | FF76FA                    | 	push	word [bp-6]
   748 | 00000587 | FF7606                    | 	push	word [bp+6]
   749 | 0000058A | FF7604                    | 	push	word [bp+4]
   750 | 0000058D | E8D4FC                    | 	call	SR_lmod
   751 | 00000590 | 894604                    | 	mov	word [bp+4], ax
   752 | 00000593 | 895606                    | 	mov	word [bp+6], dx
   753 | 00000596 | B80A00                    | 	mov	ax, 10
   754 | 00000599 | 31D2                      | 	xor	dx, dx
   755 | 0000059B | 52                        | 	push	dx
   756 | 0000059C | 50                        | 	push	ax
   757 | 0000059D | 8D46FA                    | 	lea	ax, [bp-6]
   758 | 000005A0 | 50                        | 	push	ax
   759 | 000005A1 | E85FFB                    | 	call	SR_asldiv
   760 |          |                           | L_clib_41:
   761 | 000005A4 | 837EFC00                  | 	cmp	word [bp-4], 0
   762 | 000005A8 | 7FB9                      | 	jg	L_clib_40
   763 | 000005AA | 7506                      | 	jne	L_clib_43
   764 | 000005AC | 837EFA00                  | 	cmp	word [bp-6], 0
   765 | 000005B0 | 77B1                      | 	ja	L_clib_40
   766 |          |                           | L_clib_43:
   767 |          |                           | L_clib_42:
   768 | 000005B2 | FF76FE                    | 	push	word [bp-2]
   769 | 000005B5 | 8D46EF                    | 	lea	ax, [bp-17]
   770 | 000005B8 | 50                        | 	push	ax
   771 | 000005B9 | E830FE                    | 	call	print
   772 | 000005BC | 83C404                    | 	add	sp, 4
   773 | 000005BF | 89EC                      | 	mov	sp, bp
   774 | 000005C1 | 5D                        | 	pop	bp
   775 | 000005C2 | C3                        | 	ret
   776 |          |                           | L_clib_31:
   777 | 000005C3 | 55                        | 	push	bp
   778 | 000005C4 | 89E5                      | 	mov	bp, sp
   779 | 000005C6 | 83EC12                    | 	sub	sp, 18
   780 | 000005C9 | E925FF                    | 	jmp	L_clib_32
   781 |          |                           | 	ALIGN	2
   782 |          |                           | printUInt:
   783 | 000005CC | EB7C                      | 	jmp	L_clib_45
   784 |          |                           | L_clib_46:
   785 | 000005CE | C746FE0000                | 	mov	word [bp-2], 0
   786 | 000005D3 | C746FC1027                | 	mov	word [bp-4], 10000
   787 | 000005D8 | 8B4604                    | 	mov	ax, word [bp+4]
   788 | 000005DB | 85C0                      | 	test	ax, ax
   789 | 000005DD | 7507                      | 	jne	L_clib_47
   790 | 000005DF | C746FC0100                | 	mov	word [bp-4], 1
   791 | 000005E4 | EB1B                      | 	jmp	L_clib_48
   792 |          |                           | L_clib_47:
   793 | 000005E6 | EB0D                      | 	jmp	L_clib_50
   794 |          |                           | L_clib_49:
   795 | 000005E8 | 8B46FC                    | 	mov	ax, word [bp-4]
   796 | 000005EB | 31D2                      | 	xor	dx, dx
   797 | 000005ED | B90A00                    | 	mov	cx, 10
   798 | 000005F0 | F7F1                      | 	div	cx
   799 | 000005F2 | 8946FC                    | 	mov	word [bp-4], ax
   800 |          |                           | L_clib_50:
   801 | 000005F5 | 8B4604                    | 	mov	ax, word [bp+4]
   802 | 000005F8 | 31D2                      | 	xor	dx, dx
   803 | 000005FA | F776FC                    | 	div	word [bp-4]
   804 | 000005FD | 85C0                      | 	test	ax, ax
   805 | 000005FF | 74E7                      | 	je	L_clib_49
   806 |          |                           | L_clib_51:
   807 |          |                           | L_clib_48:
   808 | 00000601 | EB2F                      | 	jmp	L_clib_53
   809 |          |                           | L_clib_52:
   810 | 00000603 | 8B4604                    | 	mov	ax, word [bp+4]
   811 | 00000606 | 31D2                      | 	xor	dx, dx
   812 | 00000608 | F776FC                    | 	div	word [bp-4]
   813 | 0000060B | 0430                      | 	add	al, 48
   814 | 0000060D | 8B76FE                    | 	mov	si, word [bp-2]
   815 | 00000610 | 8D56F6                    | 	lea	dx, [bp-10]
   816 | 00000613 | 01D6                      | 	add	si, dx
   817 | 00000615 | 8804                      | 	mov	byte [si], al
   818 | 00000617 | FF46FE                    | 	inc	word [bp-2]
   819 | 0000061A | 8B4604                    | 	mov	ax, word [bp+4]
   820 | 0000061D | 31D2                      | 	xor	dx, dx
   821 | 0000061F | F776FC                    | 	div	word [bp-4]
   822 | 00000622 | 895604                    | 	mov	word [bp+4], dx
   823 | 00000625 | 8B46FC                    | 	mov	ax, word [bp-4]
   824 | 00000628 | 31D2                      | 	xor	dx, dx
   825 | 0000062A | B90A00                    | 	mov	cx, 10
   826 | 0000062D | F7F1                      | 	div	cx
   827 | 0000062F | 8946FC                    | 	mov	word [bp-4], ax
   828 |          |                           | L_clib_53:
   829 | 00000632 | 8B46FC                    | 	mov	ax, word [bp-4]
   830 | 00000635 | 85C0                      | 	test	ax, ax
   831 | 00000637 | 75CA                      | 	jne	L_clib_52
   832 |          |                           | L_clib_54:
   833 | 00000639 | FF76FE                    | 	push	word [bp-2]
   834 | 0000063C | 8D46F6                    | 	lea	ax, [bp-10]
   835 | 0000063F | 50                        | 	push	ax
   836 | 00000640 | E8A9FD                    | 	call	print
   837 | 00000643 | 83C404                    | 	add	sp, 4
   838 | 00000646 | 89EC                      | 	mov	sp, bp
   839 | 00000648 | 5D                        | 	pop	bp
   840 | 00000649 | C3                        | 	ret
   841 |          |                           | L_clib_45:
   842 | 0000064A | 55                        | 	push	bp
   843 | 0000064B | 89E5                      | 	mov	bp, sp
   844 | 0000064D | 83EC0A                    | 	sub	sp, 10
   845 | 00000650 | E97BFF                    | 	jmp	L_clib_46
   846 | 00000653 | 90                        | 	ALIGN	2
   847 |          |                           | printULong:
   848 | 00000654 | E99E00                    | 	jmp	L_clib_56
   849 |          |                           | L_clib_57:
   850 | 00000657 | C746FE0000                | 	mov	word [bp-2], 0
   851 | 0000065C | C746FA00CA                | 	mov	word [bp-6], 51712
   852 | 00000661 | C746FC9A3B                | 	mov	word [bp-4], 15258
   853 | 00000666 | 8B4604                    | 	mov	ax, word [bp+4]
   854 | 00000669 | 8B5606                    | 	mov	dx, word [bp+6]
   855 | 0000066C | 09C2                      | 	or	dx, ax
   856 | 0000066E | 750C                      | 	jne	L_clib_58
   857 | 00000670 | C746FA0100                | 	mov	word [bp-6], 1
   858 | 00000675 | C746FC0000                | 	mov	word [bp-4], 0
   859 | 0000067A | EB23                      | 	jmp	L_clib_59
   860 |          |                           | L_clib_58:
   861 | 0000067C | EB0E                      | 	jmp	L_clib_61
   862 |          |                           | L_clib_60:
   863 | 0000067E | B80A00                    | 	mov	ax, 10
   864 | 00000681 | 31D2                      | 	xor	dx, dx
   865 | 00000683 | 52                        | 	push	dx
   866 | 00000684 | 50                        | 	push	ax
   867 | 00000685 | 8D46FA                    | 	lea	ax, [bp-6]
   868 | 00000688 | 50                        | 	push	ax
   869 | 00000689 | E820FB                    | 	call	SR_asuldiv
   870 |          |                           | L_clib_61:
   871 | 0000068C | FF76FC                    | 	push	word [bp-4]
   872 | 0000068F | FF76FA                    | 	push	word [bp-6]
   873 | 00000692 | FF7606                    | 	push	word [bp+6]
   874 | 00000695 | FF7604                    | 	push	word [bp+4]
   875 | 00000698 | E8C1FB                    | 	call	SR_uldiv
   876 | 0000069B | 09C2                      | 	or	dx, ax
   877 | 0000069D | 74DF                      | 	je	L_clib_60
   878 |          |                           | L_clib_62:
   879 |          |                           | L_clib_59:
   880 | 0000069F | EB39                      | 	jmp	L_clib_64
   881 |          |                           | L_clib_63:
   882 | 000006A1 | FF76FC                    | 	push	word [bp-4]
   883 | 000006A4 | FF76FA                    | 	push	word [bp-6]
   884 | 000006A7 | FF7606                    | 	push	word [bp+6]
   885 | 000006AA | FF7604                    | 	push	word [bp+4]
   886 | 000006AD | E8ACFB                    | 	call	SR_uldiv
   887 | 000006B0 | 0430                      | 	add	al, 48
   888 | 000006B2 | 8B76FE                    | 	mov	si, word [bp-2]
   889 | 000006B5 | 8D56EF                    | 	lea	dx, [bp-17]
   890 | 000006B8 | 01D6                      | 	add	si, dx
   891 | 000006BA | 8804                      | 	mov	byte [si], al
   892 | 000006BC | FF46FE                    | 	inc	word [bp-2]
   893 | 000006BF | FF76FC                    | 	push	word [bp-4]
   894 | 000006C2 | FF76FA                    | 	push	word [bp-6]
   895 | 000006C5 | 8D4604                    | 	lea	ax, [bp+4]
   896 | 000006C8 | 50                        | 	push	ax
   897 | 000006C9 | E800FB                    | 	call	SR_asilmod
   898 | 000006CC | B80A00                    | 	mov	ax, 10
   899 | 000006CF | 31D2                      | 	xor	dx, dx
   900 | 000006D1 | 52                        | 	push	dx
   901 | 000006D2 | 50                        | 	push	ax
   902 | 000006D3 | 8D46FA                    | 	lea	ax, [bp-6]
   903 | 000006D6 | 50                        | 	push	ax
   904 | 000006D7 | E8D2FA                    | 	call	SR_asuldiv
   905 |          |                           | L_clib_64:
   906 | 000006DA | 8B46FA                    | 	mov	ax, word [bp-6]
   907 | 000006DD | 8B56FC                    | 	mov	dx, word [bp-4]
   908 | 000006E0 | 09C2                      | 	or	dx, ax
   909 | 000006E2 | 75BD                      | 	jne	L_clib_63
   910 |          |                           | L_clib_65:
   911 | 000006E4 | FF76FE                    | 	push	word [bp-2]
   912 | 000006E7 | 8D46EF                    | 	lea	ax, [bp-17]
   913 | 000006EA | 50                        | 	push	ax
   914 | 000006EB | E8FEFC                    | 	call	print
   915 | 000006EE | 83C404                    | 	add	sp, 4
   916 | 000006F1 | 89EC                      | 	mov	sp, bp
   917 | 000006F3 | 5D                        | 	pop	bp
   918 | 000006F4 | C3                        | 	ret
   919 |          |                           | L_clib_56:
   920 | 000006F5 | 55                        | 	push	bp
   921 | 000006F6 | 89E5                      | 	mov	bp, sp
   922 | 000006F8 | 83EC12                    | 	sub	sp, 18
   923 | 000006FB | E959FF                    | 	jmp	L_clib_57
   924 |          |                           | 	ALIGN	2
   925 |          |                           | printByte:
   926 | 000006FE | EB61                      | 	jmp	L_clib_67
   927 |          |                           | L_clib_68:
   928 | 00000700 | 8A4604                    | 	mov	al, byte [bp+4]
   929 | 00000703 | 98                        | 	cbw
   930 | 00000704 | B90400                    | 	mov	cx, 4
   931 | 00000707 | D3F8                      | 	sar	ax, cl
   932 | 00000709 | 83E00F                    | 	and	ax, 15
   933 | 0000070C | 8846FF                    | 	mov	byte [bp-1], al
   934 | 0000070F | 807EFF09                  | 	cmp	byte [bp-1], 9
   935 | 00000713 | 7E0C                      | 	jle	L_clib_69
   936 | 00000715 | 8A46FF                    | 	mov	al, byte [bp-1]
   937 | 00000718 | 98                        | 	cbw
   938 | 00000719 | 83E80A                    | 	sub	ax, 10
   939 | 0000071C | 83C041                    | 	add	ax, 65
   940 | 0000071F | EB07                      | 	jmp	L_clib_70
   941 |          |                           | L_clib_69:
   942 | 00000721 | 8A46FF                    | 	mov	al, byte [bp-1]
   943 | 00000724 | 98                        | 	cbw
   944 | 00000725 | 83C030                    | 	add	ax, 48
   945 |          |                           | L_clib_70:
   946 | 00000728 | 8846FD                    | 	mov	byte [bp-3], al
   947 | 0000072B | 8A4604                    | 	mov	al, byte [bp+4]
   948 | 0000072E | 240F                      | 	and	al, 15
   949 | 00000730 | 8846FF                    | 	mov	byte [bp-1], al
   950 | 00000733 | 807EFF09                  | 	cmp	byte [bp-1], 9
   951 | 00000737 | 7E0C                      | 	jle	L_clib_71
   952 | 00000739 | 8A46FF                    | 	mov	al, byte [bp-1]
   953 | 0000073C | 98                        | 	cbw
   954 | 0000073D | 83E80A                    | 	sub	ax, 10
   955 | 00000740 | 83C041                    | 	add	ax, 65
   956 | 00000743 | EB07                      | 	jmp	L_clib_72
   957 |          |                           | L_clib_71:
   958 | 00000745 | 8A46FF                    | 	mov	al, byte [bp-1]
   959 | 00000748 | 98                        | 	cbw
   960 | 00000749 | 83C030                    | 	add	ax, 48
   961 |          |                           | L_clib_72:
   962 | 0000074C | 8846FE                    | 	mov	byte [bp-2], al
   963 | 0000074F | B80200                    | 	mov	ax, 2
   964 | 00000752 | 50                        | 	push	ax
   965 | 00000753 | 8D46FD                    | 	lea	ax, [bp-3]
   966 | 00000756 | 50                        | 	push	ax
   967 | 00000757 | E892FC                    | 	call	print
   968 | 0000075A | 83C404                    | 	add	sp, 4
   969 | 0000075D | 89EC                      | 	mov	sp, bp
   970 | 0000075F | 5D                        | 	pop	bp
   971 | 00000760 | C3                        | 	ret
   972 |          |                           | L_clib_67:
   973 | 00000761 | 55                        | 	push	bp
   974 | 00000762 | 89E5                      | 	mov	bp, sp
   975 | 00000764 | 83EC04                    | 	sub	sp, 4
   976 | 00000767 | EB97                      | 	jmp	L_clib_68
   977 | 00000769 | 90                        | 	ALIGN	2
   978 |          |                           | printWord:
   979 | 0000076A | EB59                      | 	jmp	L_clib_74
   980 |          |                           | L_clib_75:
   981 | 0000076C | C746FE0300                | 	mov	word [bp-2], 3
   982 | 00000771 | EB3A                      | 	jmp	L_clib_77
   983 |          |                           | L_clib_76:
   984 | 00000773 | 8B4604                    | 	mov	ax, word [bp+4]
   985 | 00000776 | 83E00F                    | 	and	ax, 15
   986 | 00000779 | 8846FD                    | 	mov	byte [bp-3], al
   987 | 0000077C | 807EFD09                  | 	cmp	byte [bp-3], 9
   988 | 00000780 | 7E0C                      | 	jle	L_clib_80
   989 | 00000782 | 8A46FD                    | 	mov	al, byte [bp-3]
   990 | 00000785 | 98                        | 	cbw
   991 | 00000786 | 83E80A                    | 	sub	ax, 10
   992 | 00000789 | 83C041                    | 	add	ax, 65
   993 | 0000078C | EB07                      | 	jmp	L_clib_81
   994 |          |                           | L_clib_80:
   995 | 0000078E | 8A46FD                    | 	mov	al, byte [bp-3]
   996 | 00000791 | 98                        | 	cbw
   997 | 00000792 | 83C030                    | 	add	ax, 48
   998 |          |                           | L_clib_81:
   999 | 00000795 | 8B76FE                    | 	mov	si, word [bp-2]
  1000 | 00000798 | 8D56F9                    | 	lea	dx, [bp-7]
  1001 | 0000079B | 01D6                      | 	add	si, dx
  1002 | 0000079D | 8804                      | 	mov	byte [si], al
  1003 | 0000079F | 8B4604                    | 	mov	ax, word [bp+4]
  1004 | 000007A2 | B90400                    | 	mov	cx, 4
  1005 | 000007A5 | D3F8                      | 	sar	ax, cl
  1006 | 000007A7 | 894604                    | 	mov	word [bp+4], ax
  1007 |          |                           | L_clib_79:
  1008 | 000007AA | FF4EFE                    | 	dec	word [bp-2]
  1009 |          |                           | L_clib_77:
  1010 | 000007AD | 837EFE00                  | 	cmp	word [bp-2], 0
  1011 | 000007B1 | 7DC0                      | 	jge	L_clib_76
  1012 |          |                           | L_clib_78:
  1013 | 000007B3 | B80400                    | 	mov	ax, 4
  1014 | 000007B6 | 50                        | 	push	ax
  1015 | 000007B7 | 8D46F9                    | 	lea	ax, [bp-7]
  1016 | 000007BA | 50                        | 	push	ax
  1017 | 000007BB | E82EFC                    | 	call	print
  1018 | 000007BE | 83C404                    | 	add	sp, 4
  1019 | 000007C1 | 89EC                      | 	mov	sp, bp
  1020 | 000007C3 | 5D                        | 	pop	bp
  1021 | 000007C4 | C3                        | 	ret
  1022 |          |                           | L_clib_74:
  1023 | 000007C5 | 55                        | 	push	bp
  1024 | 000007C6 | 89E5                      | 	mov	bp, sp
  1025 | 000007C8 | 83EC08                    | 	sub	sp, 8
  1026 | 000007CB | EB9F                      | 	jmp	L_clib_75
  1027 | 000007CD | 90                        | 	ALIGN	2
  1028 |          |                           | printDWord:
  1029 | 000007CE | E9AC00                    | 	jmp	L_clib_83
  1030 |          |                           | L_clib_84:
  1031 | 000007D1 | 8D4604                    | 	lea	ax, [bp+4]
  1032 | 000007D4 | 89C6                      | 	mov	si, ax
  1033 | 000007D6 | 8B04                      | 	mov	ax, word [si]
  1034 | 000007D8 | 8946FA                    | 	mov	word [bp-6], ax
  1035 | 000007DB | 8D4604                    | 	lea	ax, [bp+4]
  1036 | 000007DE | 89C6                      | 	mov	si, ax
  1037 | 000007E0 | 83C602                    | 	add	si, 2
  1038 | 000007E3 | 8B04                      | 	mov	ax, word [si]
  1039 | 000007E5 | 8946F8                    | 	mov	word [bp-8], ax
  1040 | 000007E8 | C746FE0300                | 	mov	word [bp-2], 3
  1041 | 000007ED | EB76                      | 	jmp	L_clib_86
  1042 |          |                           | L_clib_85:
  1043 | 000007EF | 8B46FA                    | 	mov	ax, word [bp-6]
  1044 | 000007F2 | 83E00F                    | 	and	ax, 15
  1045 | 000007F5 | 8846FD                    | 	mov	byte [bp-3], al
  1046 | 000007F8 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1047 | 000007FC | 7E0C                      | 	jle	L_clib_89
  1048 | 000007FE | 8A46FD                    | 	mov	al, byte [bp-3]
  1049 | 00000801 | 98                        | 	cbw
  1050 | 00000802 | 83E80A                    | 	sub	ax, 10
  1051 | 00000805 | 83C041                    | 	add	ax, 65
  1052 | 00000808 | EB07                      | 	jmp	L_clib_90
  1053 |          |                           | L_clib_89:
  1054 | 0000080A | 8A46FD                    | 	mov	al, byte [bp-3]
  1055 | 0000080D | 98                        | 	cbw
  1056 | 0000080E | 83C030                    | 	add	ax, 48
  1057 |          |                           | L_clib_90:
  1058 | 00000811 | 8B56FE                    | 	mov	dx, word [bp-2]
  1059 | 00000814 | 83C204                    | 	add	dx, 4
  1060 | 00000817 | 89D6                      | 	mov	si, dx
  1061 | 00000819 | 8D56F0                    | 	lea	dx, [bp-16]
  1062 | 0000081C | 01D6                      | 	add	si, dx
  1063 | 0000081E | 8804                      | 	mov	byte [si], al
  1064 | 00000820 | 8B46FA                    | 	mov	ax, word [bp-6]
  1065 | 00000823 | B90400                    | 	mov	cx, 4
  1066 | 00000826 | D3F8                      | 	sar	ax, cl
  1067 | 00000828 | 8946FA                    | 	mov	word [bp-6], ax
  1068 | 0000082B | 8B46F8                    | 	mov	ax, word [bp-8]
  1069 | 0000082E | 83E00F                    | 	and	ax, 15
  1070 | 00000831 | 8846FD                    | 	mov	byte [bp-3], al
  1071 | 00000834 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1072 | 00000838 | 7E0C                      | 	jle	L_clib_91
  1073 | 0000083A | 8A46FD                    | 	mov	al, byte [bp-3]
  1074 | 0000083D | 98                        | 	cbw
  1075 | 0000083E | 83E80A                    | 	sub	ax, 10
  1076 | 00000841 | 83C041                    | 	add	ax, 65
  1077 | 00000844 | EB07                      | 	jmp	L_clib_92
  1078 |          |                           | L_clib_91:
  1079 | 00000846 | 8A46FD                    | 	mov	al, byte [bp-3]
  1080 | 00000849 | 98                        | 	cbw
  1081 | 0000084A | 83C030                    | 	add	ax, 48
  1082 |          |                           | L_clib_92:
  1083 | 0000084D | 8B76FE                    | 	mov	si, word [bp-2]
  1084 | 00000850 | 8D56F0                    | 	lea	dx, [bp-16]
  1085 | 00000853 | 01D6                      | 	add	si, dx
  1086 | 00000855 | 8804                      | 	mov	byte [si], al
  1087 | 00000857 | 8B46F8                    | 	mov	ax, word [bp-8]
  1088 | 0000085A | B90400                    | 	mov	cx, 4
  1089 | 0000085D | D3F8                      | 	sar	ax, cl
  1090 | 0000085F | 8946F8                    | 	mov	word [bp-8], ax
  1091 |          |                           | L_clib_88:
  1092 | 00000862 | FF4EFE                    | 	dec	word [bp-2]
  1093 |          |                           | L_clib_86:
  1094 | 00000865 | 837EFE00                  | 	cmp	word [bp-2], 0
  1095 | 00000869 | 7D84                      | 	jge	L_clib_85
  1096 |          |                           | L_clib_87:
  1097 | 0000086B | B80800                    | 	mov	ax, 8
  1098 | 0000086E | 50                        | 	push	ax
  1099 | 0000086F | 8D46F0                    | 	lea	ax, [bp-16]
  1100 | 00000872 | 50                        | 	push	ax
  1101 | 00000873 | E876FB                    | 	call	print
  1102 | 00000876 | 83C404                    | 	add	sp, 4
  1103 | 00000879 | 89EC                      | 	mov	sp, bp
  1104 | 0000087B | 5D                        | 	pop	bp
  1105 | 0000087C | C3                        | 	ret
  1106 |          |                           | L_clib_83:
  1107 | 0000087D | 55                        | 	push	bp
  1108 | 0000087E | 89E5                      | 	mov	bp, sp
  1109 | 00000880 | 83EC10                    | 	sub	sp, 16
  1110 | 00000883 | E94BFF                    | 	jmp	L_clib_84
  1111 |          |                           | 
  1112 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from myinth.i
  1113 |          |                           | 	CPU	8086
  1114 |          |                           | 	ALIGN	2
  1115 | 00000886 | E95711                    | 	jmp	main	; Jump to program start
  1116 | 00000889 | 90                        | 	ALIGN	2
  1117 |          |                           | handleReset:
  1118 |          |                           | 	; >>>>> Line:	12
  1119 |          |                           | 	; >>>>> void handleReset() { 
  1120 | 0000088A | EB0D                      | 	jmp	L_myinth_1
  1121 |          |                           | L_myinth_2:
  1122 |          |                           | 	; >>>>> Line:	13
  1123 |          |                           | 	; >>>>> exit(0); 
  1124 | 0000088C | 30C0                      | 	xor	al, al
  1125 | 0000088E | 50                        | 	push	ax
  1126 | 0000088F | E848FB                    | 	call	exit
  1127 | 00000892 | 83C402                    | 	add	sp, 2
  1128 | 00000895 | 89EC                      | 	mov	sp, bp
  1129 | 00000897 | 5D                        | 	pop	bp
  1130 | 00000898 | C3                        | 	ret
  1131 |          |                           | L_myinth_1:
  1132 | 00000899 | 55                        | 	push	bp
  1133 | 0000089A | 89E5                      | 	mov	bp, sp
  1134 | 0000089C | EBEE                      | 	jmp	L_myinth_2
  1135 |          |                           | 	ALIGN	2
  1136 |          |                           | L_myinth_4:
  1137 | 0000089E | 0000                      | 	DW	0
  1138 |          |                           | L_myinth_5:
  1139 | 000008A0 | 0000                      | 	DW	0
  1140 |          |                           | L_myinth_7:
  1141 | 000008A2 | 5449434B2000              | 	DB	"TICK ",0
  1142 |          |                           | L_myinth_6:
  1143 | 000008A8 | 20205469636B495352-       | 	DB	"  TickISR: queue overflow! ",0xA,0
  1144 | 000008B1 | 3A207175657565206F-       | ...
  1145 | 000008BA | 766572666C6F772120-       | ...
  1146 | 000008C3 | 0A00                      | ...
  1147 | 000008C5 | 90                        | 	ALIGN	2
  1148 |          |                           | handleTick:
  1149 |          |                           | 	; >>>>> Line:	17
  1150 |          |                           | 	; >>>>> void handleTick() { 
  1151 | 000008C6 | E9D400                    | 	jmp	L_myinth_8
  1152 |          |                           | L_myinth_9:
  1153 |          |                           | 	; >>>>> Line:	23
  1154 |          |                           | 	; >>>>> ++YK 
  1155 | 000008C9 | FF06[4413]                | 	inc	word [YKTickNum]
  1156 |          |                           | 	; >>>>> Line:	26
  1157 |          |                           | 	; >>>>> MsgArray[next].tick = YKTickNum; 
  1158 | 000008CD | A1[9E08]                  | 	mov	ax, word [L_myinth_4]
  1159 | 000008D0 | D1E0                      | 	shl	ax, 1
  1160 | 000008D2 | D1E0                      | 	shl	ax, 1
  1161 | 000008D4 | 89C6                      | 	mov	si, ax
  1162 | 000008D6 | 81C6[1A1A]                | 	add	si, MsgArray
  1163 | 000008DA | A1[4413]                  | 	mov	ax, word [YKTickNum]
  1164 | 000008DD | 8904                      | 	mov	word [si], ax
  1165 |          |                           | 	; >>>>> Line:	27
  1166 |          |                           | 	; >>>>> data = (data + 89) % 100; 
  1167 | 000008DF | A1[A008]                  | 	mov	ax, word [L_myinth_5]
  1168 | 000008E2 | 83C059                    | 	add	ax, 89
  1169 | 000008E5 | 99                        | 	cwd
  1170 | 000008E6 | B96400                    | 	mov	cx, 100
  1171 | 000008E9 | F7F9                      | 	idiv	cx
  1172 | 000008EB | 89D0                      | 	mov	ax, dx
  1173 | 000008ED | A3[A008]                  | 	mov	word [L_myinth_5], ax
  1174 |          |                           | 	; >>>>> Line:	28
  1175 |          |                           | 	; >>>>> MsgArray[next].data = data; 
  1176 | 000008F0 | A1[9E08]                  | 	mov	ax, word [L_myinth_4]
  1177 | 000008F3 | D1E0                      | 	shl	ax, 1
  1178 | 000008F5 | D1E0                      | 	shl	ax, 1
  1179 | 000008F7 | 05[1A1A]                  | 	add	ax, MsgArray
  1180 | 000008FA | 89C6                      | 	mov	si, ax
  1181 | 000008FC | 83C602                    | 	add	si, 2
  1182 | 000008FF | A1[A008]                  | 	mov	ax, word [L_myinth_5]
  1183 | 00000902 | 8904                      | 	mov	word [si], ax
  1184 |          |                           | 	; >>>>> Line:	29
  1185 |          |                           | 	; >>>>> if (YKQPost(MsgQPtr, (void *) &(MsgArray[next])) == 0) 
  1186 | 00000904 | A1[9E08]                  | 	mov	ax, word [L_myinth_4]
  1187 | 00000907 | D1E0                      | 	shl	ax, 1
  1188 | 00000909 | D1E0                      | 	shl	ax, 1
  1189 | 0000090B | 05[1A1A]                  | 	add	ax, MsgArray
  1190 | 0000090E | 50                        | 	push	ax
  1191 | 0000090F | FF36[8026]                | 	push	word [MsgQPtr]
  1192 | 00000913 | E88C09                    | 	call	YKQPost
  1193 | 00000916 | 83C404                    | 	add	sp, 4
  1194 | 00000919 | 85C0                      | 	test	ax, ax
  1195 | 0000091B | 750C                      | 	jne	L_myinth_10
  1196 |          |                           | 	; >>>>> Line:	30
  1197 |          |                           | 	; >>>>> printString("  TickISR: queue overflow! \n"); 
  1198 | 0000091D | B8[A808]                  | 	mov	ax, L_myinth_6
  1199 | 00000920 | 50                        | 	push	ax
  1200 | 00000921 | E804FB                    | 	call	printString
  1201 | 00000924 | 83C402                    | 	add	sp, 2
  1202 | 00000927 | EB12                      | 	jmp	L_myinth_11
  1203 |          |                           | L_myinth_10:
  1204 |          |                           | 	; >>>>> Line:	31
  1205 |          |                           | 	; >>>>> else if (++next >= 20) 
  1206 | 00000929 | A1[9E08]                  | 	mov	ax, word [L_myinth_4]
  1207 | 0000092C | 40                        | 	inc	ax
  1208 | 0000092D | A3[9E08]                  | 	mov	word [L_myinth_4], ax
  1209 | 00000930 | 83F814                    | 	cmp	ax, 20
  1210 | 00000933 | 7C06                      | 	jl	L_myinth_12
  1211 |          |                           | 	; >>>>> Line:	32
  1212 |          |                           | 	; >>>>> next = 0; 
  1213 | 00000935 | C706[9E08]0000            | 	mov	word [L_myinth_4], 0
  1214 |          |                           | L_myinth_12:
  1215 |          |                           | L_myinth_11:
  1216 |          |                           | 	; >>>>> Line:	36
  1217 |          |                           | 	; >>>>> printString("TICK "); 
  1218 | 0000093B | B8[A208]                  | 	mov	ax, L_myinth_7
  1219 | 0000093E | 50                        | 	push	ax
  1220 | 0000093F | E8E6FA                    | 	call	printString
  1221 | 00000942 | 83C402                    | 	add	sp, 2
  1222 |          |                           | 	; >>>>> Line:	37
  1223 |          |                           | 	; >>>>> printInt(YKTickNum); 
  1224 | 00000945 | FF36[4413]                | 	push	word [YKTickNum]
  1225 | 00000949 | E800FB                    | 	call	printInt
  1226 | 0000094C | 83C402                    | 	add	sp, 2
  1227 |          |                           | 	; >>>>> Line:	38
  1228 |          |                           | 	; >>>>> printNewLine(); 
  1229 | 0000094F | E8C4FA                    | 	call	printNewLine
  1230 |          |                           | 	; >>>>> Line:	39
  1231 |          |                           | 	; >>>>> current = YKBlockList; 
  1232 | 00000952 | A1[4C13]                  | 	mov	ax, word [YKBlockList]
  1233 | 00000955 | 8946FE                    | 	mov	word [bp-2], ax
  1234 |          |                           | 	; >>>>> Line:	50
  1235 |          |                           | 	; >>>>> while ( current ) 
  1236 | 00000958 | EB38                      | 	jmp	L_myinth_14
  1237 |          |                           | L_myinth_13:
  1238 |          |                           | 	; >>>>> Line:	52
  1239 |          |                           | 	; >>>>> if ( current->state == DELAYED ) 
  1240 | 0000095A | 8B76FE                    | 	mov	si, word [bp-2]
  1241 | 0000095D | 83C61E                    | 	add	si, 30
  1242 | 00000960 | 833C01                    | 	cmp	word [si], 1
  1243 | 00000963 | 7522                      | 	jne	L_myinth_16
  1244 |          |                           | 	; >>>>> Line:	54
  1245 |          |                           | 	; >>>>> current->delay--; 
  1246 | 00000965 | 8B76FE                    | 	mov	si, word [bp-2]
  1247 | 00000968 | 83C620                    | 	add	si, 32
  1248 | 0000096B | FF0C                      | 	dec	word [si]
  1249 |          |                           | 	; >>>>> Line:	55
  1250 |          |                           | 	; >>>>> if ( !current->delay ) 
  1251 | 0000096D | 8B76FE                    | 	mov	si, word [bp-2]
  1252 | 00000970 | 83C620                    | 	add	si, 32
  1253 | 00000973 | 8B04                      | 	mov	ax, word [si]
  1254 | 00000975 | 85C0                      | 	test	ax, ax
  1255 | 00000977 | 750E                      | 	jne	L_myinth_17
  1256 |          |                           | 	; >>>>> Line:	57
  1257 |          |                           | 	; >>>>> current = YKUnblockTask( cu 
  1258 | 00000979 | FF76FE                    | 	push	word [bp-2]
  1259 | 0000097C | E81106                    | 	call	YKUnblockTask
  1260 | 0000097F | 83C402                    | 	add	sp, 2
  1261 | 00000982 | 8946FE                    | 	mov	word [bp-2], ax
  1262 |          |                           | 	; >>>>> Line:	58
  1263 |          |                           | 	; >>>>> continue; 
  1264 | 00000985 | EB0B                      | 	jmp	L_myinth_14
  1265 |          |                           | L_myinth_17:
  1266 |          |                           | L_myinth_16:
  1267 |          |                           | 	; >>>>> Line:	61
  1268 |          |                           | 	; >>>>> current = current->next; 
  1269 | 00000987 | 8B76FE                    | 	mov	si, word [bp-2]
  1270 | 0000098A | 83C628                    | 	add	si, 40
  1271 | 0000098D | 8B04                      | 	mov	ax, word [si]
  1272 | 0000098F | 8946FE                    | 	mov	word [bp-2], ax
  1273 |          |                           | L_myinth_14:
  1274 | 00000992 | 8B46FE                    | 	mov	ax, word [bp-2]
  1275 | 00000995 | 85C0                      | 	test	ax, ax
  1276 | 00000997 | 75C1                      | 	jne	L_myinth_13
  1277 |          |                           | L_myinth_15:
  1278 |          |                           | L_myinth_18:
  1279 |          |                           | 	; >>>>> Line:	65
  1280 |          |                           | 	; >>>>> return; 
  1281 | 00000999 | 89EC                      | 	mov	sp, bp
  1282 | 0000099B | 5D                        | 	pop	bp
  1283 | 0000099C | C3                        | 	ret
  1284 |          |                           | L_myinth_8:
  1285 | 0000099D | 55                        | 	push	bp
  1286 | 0000099E | 89E5                      | 	mov	bp, sp
  1287 | 000009A0 | 51                        | 	push	cx
  1288 | 000009A1 | E925FF                    | 	jmp	L_myinth_9
  1289 |          |                           | L_myinth_23:
  1290 | 000009A4 | 292049474E4F524544-       | 	DB	") IGNORED",0
  1291 | 000009AD | 00                        | ...
  1292 |          |                           | L_myinth_22:
  1293 | 000009AE | 4B4559505245535320-       | 	DB	"KEYPRESS (",0
  1294 | 000009B7 | 2800                      | ...
  1295 |          |                           | L_myinth_21:
  1296 | 000009B9 | 44454C415920434F4D-       | 	DB	"DELAY COMPLETE",0
  1297 | 000009C2 | 504C45544500              | ...
  1298 |          |                           | L_myinth_20:
  1299 | 000009C8 | 44454C4159204B4559-       | 	DB	"DELAY KEY PRESSED",0
  1300 | 000009D1 | 205052455353454400        | ...
  1301 |          |                           | 	ALIGN	2
  1302 |          |                           | handleKeyboard:
  1303 |          |                           | 	; >>>>> Line:	69
  1304 |          |                           | 	; >>>>> void handleKeyboard() { 
  1305 | 000009DA | E98A00                    | 	jmp	L_myinth_24
  1306 |          |                           | L_myinth_25:
  1307 |          |                           | 	; >>>>> Line:	71
  1308 |          |                           | 	; >>>>> GlobalFlag = 1; 
  1309 | 000009DD | C746FE0000                | 	mov	word [bp-2], 0
  1310 |          |                           | 	; >>>>> Line:	71
  1311 |          |                           | 	; >>>>> GlobalFlag = 1; 
  1312 | 000009E2 | C706[6A26]0100            | 	mov	word [GlobalFlag], 1
  1313 |          |                           | 	; >>>>> Line:	73
  1314 |          |                           | 	; >>>>> if (KeyBuffer == 24178) 
  1315 | 000009E8 | 813E[C000]725E            | 	cmp	word [KeyBuffer], 24178
  1316 | 000009EE | 750B                      | 	jne	L_myinth_26
  1317 |          |                           | 	; >>>>> Line:	74
  1318 |          |                           | 	; >>>>> exit(0); 
  1319 | 000009F0 | 30C0                      | 	xor	al, al
  1320 | 000009F2 | 50                        | 	push	ax
  1321 | 000009F3 | E8E4F9                    | 	call	exit
  1322 | 000009F6 | 83C402                    | 	add	sp, 2
  1323 | 000009F9 | EB68                      | 	jmp	L_myinth_27
  1324 |          |                           | L_myinth_26:
  1325 |          |                           | 	; >>>>> Line:	75
  1326 |          |                           | 	; >>>>> else if (KeyBuffer == 'd') { 
  1327 | 000009FB | 833E[C000]64              | 	cmp	word [KeyBuffer], 100
  1328 | 00000A00 | 7530                      | 	jne	L_myinth_28
  1329 |          |                           | 	; >>>>> Line:	76
  1330 |          |                           | 	; >>>>> printNewLine(); 
  1331 | 00000A02 | E811FA                    | 	call	printNewLine
  1332 |          |                           | 	; >>>>> Line:	77
  1333 |          |                           | 	; >>>>> printString("DELAY KEY PRESSED"); 
  1334 | 00000A05 | B8[C809]                  | 	mov	ax, L_myinth_20
  1335 | 00000A08 | 50                        | 	push	ax
  1336 | 00000A09 | E81CFA                    | 	call	printString
  1337 | 00000A0C | 83C402                    | 	add	sp, 2
  1338 |          |                           | 	; >>>>> Line:	78
  1339 |          |                           | 	; >>>>> for (i = 0; i < 10000; ++i){} 
  1340 | 00000A0F | C746FE0000                | 	mov	word [bp-2], 0
  1341 | 00000A14 | EB03                      | 	jmp	L_myinth_30
  1342 |          |                           | L_myinth_29:
  1343 |          |                           | L_myinth_32:
  1344 |          |                           | 	; >>>>> Line:	78
  1345 |          |                           | 	; >>>>> for (i = 0; i < 10000; ++i){} 
  1346 | 00000A16 | FF46FE                    | 	inc	word [bp-2]
  1347 |          |                           | L_myinth_30:
  1348 | 00000A19 | 817EFE1027                | 	cmp	word [bp-2], 10000
  1349 | 00000A1E | 7CF6                      | 	jl	L_myinth_29
  1350 |          |                           | L_myinth_31:
  1351 |          |                           | 	; >>>>> Line:	79
  1352 |          |                           | 	; >>>>> printNewLine(); 
  1353 | 00000A20 | E8F3F9                    | 	call	printNewLine
  1354 |          |                           | 	; >>>>> Line:	80
  1355 |          |                           | 	; >>>>> printString("DELAY COMPLETE"); 
  1356 | 00000A23 | B8[B909]                  | 	mov	ax, L_myinth_21
  1357 | 00000A26 | 50                        | 	push	ax
  1358 | 00000A27 | E8FEF9                    | 	call	printString
  1359 | 00000A2A | 83C402                    | 	add	sp, 2
  1360 |          |                           | 	; >>>>> Line:	81
  1361 |          |                           | 	; >>>>> printNewLine(); 
  1362 | 00000A2D | E8E6F9                    | 	call	printNewLine
  1363 | 00000A30 | EB31                      | 	jmp	L_myinth_33
  1364 |          |                           | L_myinth_28:
  1365 |          |                           | 	; >>>>> Line:	83
  1366 |          |                           | 	; >>>>> else if (KeyBuffer == 24180) { 
  1367 | 00000A32 | 813E[C000]745E            | 	cmp	word [KeyBuffer], 24180
  1368 | 00000A38 | 7505                      | 	jne	L_myinth_34
  1369 |          |                           | 	; >>>>> Line:	84
  1370 |          |                           | 	; >>>>> handleTick(); 
  1371 | 00000A3A | E889FE                    | 	call	handleTick
  1372 | 00000A3D | EB24                      | 	jmp	L_myinth_35
  1373 |          |                           | L_myinth_34:
  1374 |          |                           | 	; >>>>> Line:	87
  1375 |          |                           | 	; >>>>> printNewLine(); 
  1376 | 00000A3F | E8D4F9                    | 	call	printNewLine
  1377 |          |                           | 	; >>>>> Line:	88
  1378 |          |                           | 	; >>>>> printString("KEYPRESS ("); 
  1379 | 00000A42 | B8[AE09]                  | 	mov	ax, L_myinth_22
  1380 | 00000A45 | 50                        | 	push	ax
  1381 | 00000A46 | E8DFF9                    | 	call	printString
  1382 | 00000A49 | 83C402                    | 	add	sp, 2
  1383 |          |                           | 	; >>>>> Line:	89
  1384 |          |                           | 	; >>>>> printChar(KeyBuffer); 
  1385 | 00000A4C | FF36[C000]                | 	push	word [KeyBuffer]
  1386 | 00000A50 | E8B1F9                    | 	call	printChar
  1387 | 00000A53 | 83C402                    | 	add	sp, 2
  1388 |          |                           | 	; >>>>> Line:	90
  1389 |          |                           | 	; >>>>> printString(") IGNORED"); 
  1390 | 00000A56 | B8[A409]                  | 	mov	ax, L_myinth_23
  1391 | 00000A59 | 50                        | 	push	ax
  1392 | 00000A5A | E8CBF9                    | 	call	printString
  1393 | 00000A5D | 83C402                    | 	add	sp, 2
  1394 |          |                           | 	; >>>>> Line:	91
  1395 |          |                           | 	; >>>>> printNewLine(); 
  1396 | 00000A60 | E8B3F9                    | 	call	printNewLine
  1397 |          |                           | L_myinth_35:
  1398 |          |                           | L_myinth_33:
  1399 |          |                           | L_myinth_27:
  1400 |          |                           | L_myinth_36:
  1401 |          |                           | 	; >>>>> Line:	93
  1402 |          |                           | 	; >>>>> return; 
  1403 | 00000A63 | 89EC                      | 	mov	sp, bp
  1404 | 00000A65 | 5D                        | 	pop	bp
  1405 | 00000A66 | C3                        | 	ret
  1406 |          |                           | L_myinth_24:
  1407 | 00000A67 | 55                        | 	push	bp
  1408 | 00000A68 | 89E5                      | 	mov	bp, sp
  1409 | 00000A6A | 51                        | 	push	cx
  1410 | 00000A6B | E96FFF                    | 	jmp	L_myinth_25
  1411 |          |                           | ISRReset:
  1412 |          |                           |     ; Save the context of whatever was running by pushing all registers onto the stack,
  1413 |          |                           |     ; except SP, SS, CS, IP, and the flags.
  1414 | 00000A6E | 50                        |     push ax
  1415 | 00000A6F | 53                        |     push bx
  1416 | 00000A70 | 51                        |     push cx
  1417 | 00000A71 | 52                        |     push dx
  1418 | 00000A72 | 55                        |     push bp
  1419 | 00000A73 | 56                        |     push si
  1420 | 00000A74 | 57                        |     push di
  1421 | 00000A75 | 1E                        |     push ds
  1422 | 00000A76 | 06                        |     push es
  1423 | 00000A77 | E86406                    | 	call YKEnterISR
  1424 |          |                           |     ; enable interrupts
  1425 | 00000A7A | FB                        |     sti
  1426 |          |                           |     ; call interrupt handler
  1427 | 00000A7B | E80CFE                    |     call handleReset
  1428 |          |                           |     ; disable interrupts
  1429 | 00000A7E | FA                        |     cli
  1430 |          |                           |     ; Signal PIC that handler has finished
  1431 | 00000A7F | E848F9                    |     call signalEOI
  1432 | 00000A82 | E86906                    | 	call YKExitISR
  1433 |          |                           |     ; restore context
  1434 | 00000A85 | 07                        |     pop es
  1435 | 00000A86 | 1F                        |     pop ds
  1436 | 00000A87 | 5F                        |     pop di
  1437 | 00000A88 | 5E                        |     pop si
  1438 | 00000A89 | 5D                        |     pop bp
  1439 | 00000A8A | 5A                        |     pop dx
  1440 | 00000A8B | 59                        |     pop cx
  1441 | 00000A8C | 5B                        |     pop bx
  1442 | 00000A8D | 58                        |     pop ax
  1443 |          |                           |     ; return from interrupt
  1444 | 00000A8E | CF                        |     iret
  1445 |          |                           | 
  1446 |          |                           | ISRTick:
  1447 |          |                           |     ; Save the context of whatever was running by pushing all registers onto the stack,
  1448 |          |                           |     ; except SP, SS, CS, IP, and the flags.
  1449 | 00000A8F | 50                        |     push ax
  1450 | 00000A90 | 53                        |     push bx
  1451 | 00000A91 | 51                        |     push cx
  1452 | 00000A92 | 52                        |     push dx
  1453 | 00000A93 | 55                        |     push bp
  1454 | 00000A94 | 56                        |     push si
  1455 | 00000A95 | 57                        |     push di
  1456 | 00000A96 | 1E                        |     push ds
  1457 | 00000A97 | 06                        |     push es
  1458 | 00000A98 | E84306                    | 	call YKEnterISR
  1459 |          |                           |     ; enable interrupts
  1460 | 00000A9B | FB                        |     sti
  1461 |          |                           |     ; call interrupt handler
  1462 | 00000A9C | E827FE                    |     call handleTick
  1463 |          |                           |     ; disable interrupts
  1464 | 00000A9F | FA                        |     cli
  1465 |          |                           |     ; Signal PIC that handler has finished
  1466 | 00000AA0 | E827F9                    |     call signalEOI
  1467 | 00000AA3 | E84806                    | 	call YKExitISR
  1468 |          |                           |     ; restore context
  1469 | 00000AA6 | 07                        |     pop es
  1470 | 00000AA7 | 1F                        |     pop ds
  1471 | 00000AA8 | 5F                        |     pop di
  1472 | 00000AA9 | 5E                        |     pop si
  1473 | 00000AAA | 5D                        |     pop bp
  1474 | 00000AAB | 5A                        |     pop dx
  1475 | 00000AAC | 59                        |     pop cx
  1476 | 00000AAD | 5B                        |     pop bx
  1477 | 00000AAE | 58                        |     pop ax
  1478 |          |                           |     ; return from interrupt
  1479 | 00000AAF | CF                        |     iret
  1480 |          |                           | 
  1481 |          |                           | ISRKeyboard:
  1482 |          |                           |     ; Save the context of whatever was running by pushing all registers onto the stack,
  1483 |          |                           |     ; except SP, SS, CS, IP, and the flags.
  1484 | 00000AB0 | 50                        |     push ax
  1485 | 00000AB1 | 53                        |     push bx
  1486 | 00000AB2 | 51                        |     push cx
  1487 | 00000AB3 | 52                        |     push dx
  1488 | 00000AB4 | 55                        |     push bp
  1489 | 00000AB5 | 56                        |     push si
  1490 | 00000AB6 | 57                        |     push di
  1491 | 00000AB7 | 1E                        |     push ds
  1492 | 00000AB8 | 06                        |     push es
  1493 | 00000AB9 | E82206                    | 	call YKEnterISR
  1494 |          |                           |     ; enable interrupts
  1495 | 00000ABC | FB                        |     sti
  1496 |          |                           |     ; call interrupt handler
  1497 | 00000ABD | E81AFF                    |     call handleKeyboard
  1498 |          |                           |     ; disable interrupts
  1499 | 00000AC0 | FA                        |     cli
  1500 |          |                           |     ; Signal PIC that handler has finished
  1501 | 00000AC1 | E806F9                    |     call signalEOI
  1502 | 00000AC4 | E82706                    | 	call YKExitISR
  1503 |          |                           |     ; restore context
  1504 | 00000AC7 | 07                        |     pop es
  1505 | 00000AC8 | 1F                        |     pop ds
  1506 | 00000AC9 | 5F                        |     pop di
  1507 | 00000ACA | 5E                        |     pop si
  1508 | 00000ACB | 5D                        |     pop bp
  1509 | 00000ACC | 5A                        |     pop dx
  1510 | 00000ACD | 59                        |     pop cx
  1511 | 00000ACE | 5B                        |     pop bx
  1512 | 00000ACF | 58                        |     pop ax
  1513 |          |                           |     ; return from interrupt
  1514 | 00000AD0 | CF                        |     iret
  1515 |          |                           | 
  1516 |          |                           | 
  1517 |          |                           | 
  1518 |          |                           | 
  1519 |          |                           | YKDispatcher:
  1520 |          |                           | ; increment context switch count
  1521 | 00000AD1 | FF06[4013]                |     inc word [YKCtxSwCount]
  1522 |          |                           | ; save context of YKCurrTask
  1523 | 00000AD5 | FA                        |     cli
  1524 | 00000AD6 | 55                        |     push bp
  1525 | 00000AD7 | 8B2E[4C14]                |     mov bp, word [YKCurrTask]        ; get tcb block address
  1526 | 00000ADB | 85ED                      |     test bp,bp
  1527 | 00000ADD | 743F                      |     je YKDispatcher_1
  1528 | 00000ADF | 894600                    |     mov word [bp],ax                ; save ax
  1529 | 00000AE2 | 895E02                    |     mov word [bp+2],bx              ; save bx
  1530 | 00000AE5 | 894E04                    |     mov word [bp+4],cx
  1531 | 00000AE8 | 895606                    |     mov word [bp+6],dx
  1532 | 00000AEB | 89760E                    |     mov word [bp+14],si             ; save si
  1533 | 00000AEE | 89EE                      |     mov si, bp                      ; put tcb block address in si 
  1534 | 00000AF0 | 5D                        |     pop bp                          ; restore bp
  1535 | 00000AF1 | 8B4602                    |     mov ax,[bp+2]                   ; get return address
  1536 | 00000AF4 | 894408                    |     mov word [si+8],ax              ; save ip
  1537 | 00000AF7 | 89E8                      |     mov ax,bp                       ; get bp
  1538 | 00000AF9 | 83C004                    |     add ax,4                        ; get where sp should be
  1539 | 00000AFC | 89440A                    |     mov word [si+10],ax             ; save sp
  1540 | 00000AFF | 8B4600                    |     mov ax,[bp]                     ; get the old bp
  1541 | 00000B02 | 89440C                    |     mov word [si+12],ax             ; save bp
  1542 | 00000B05 | 897C10                    |     mov word [si+16],di
  1543 | 00000B08 | 8C4C12                    |     mov word [si+18],cs
  1544 | 00000B0B | 8C5414                    |     mov word [si+20],ss
  1545 | 00000B0E | 8C5C16                    |     mov word [si+22],ds
  1546 | 00000B11 | 8C4418                    |     mov word [si+24],es
  1547 | 00000B14 | 89F0                      |     mov ax,si
  1548 | 00000B16 | 83C01C                    |     add ax, 28
  1549 | 00000B19 | 89C4                      |     mov sp,ax                       ; set sp to get ready to push flags
  1550 | 00000B1B | 9C                        |     pushf                           ; push flags (sp-2 <= flags)
  1551 | 00000B1C | EB01                      |     jmp YKDispatcher_2
  1552 |          |                           | YKDispatcher_1:
  1553 | 00000B1E | 5D                        |     pop bp
  1554 |          |                           | YKDispatcher_2:
  1555 | 00000B1F | A1[4A13]                  |     mov ax, word [YKRdyList]        ; save readylist address
  1556 | 00000B22 | A3[4C14]                  |     mov word [YKCurrTask],ax        ; YKCurrTask = YKRdyList
  1557 |          |                           | ; Restore context of YKRdyList
  1558 |          |                           |     ;mov ax, word [YKRdyList]       ; restore ax last
  1559 | 00000B25 | 8B2E[4A13]                |     mov bp, word [YKRdyList]
  1560 | 00000B29 | 8B4600                    |     mov ax, word [bp]
  1561 | 00000B2C | 8B5E02                    |     mov bx, word [bp+2]
  1562 | 00000B2F | 8B4E04                    |     mov cx, word [bp+4]
  1563 | 00000B32 | 8B5606                    |     mov dx, word [bp+6]
  1564 |          |                           |     ; YKRdyList+8 is ip
  1565 | 00000B35 | 8B660A                    |     mov sp, word [bp+10]
  1566 | 00000B38 | 8B760E                    |     mov si, word [bp+14]
  1567 | 00000B3B | 8B7E10                    |     mov di, word [bp+16]
  1568 |          |                           |     ;mov cs, word [ax+18] ; this is naughty
  1569 | 00000B3E | 8E5614                    |     mov ss, word [bp+20]
  1570 | 00000B41 | 8E5E16                    |     mov ds, word [bp+22]
  1571 | 00000B44 | 8E4618                    |     mov es, word [bp+24]
  1572 | 00000B47 | FF761A                    |     push word [bp+26]     ; push flags
  1573 | 00000B4A | FF7612                    |     push word [bp+18]     ; push cs
  1574 | 00000B4D | FF7608                    |     push word [bp+8]      ; push ip
  1575 | 00000B50 | 8B6E0C                    |     mov bp, word [bp+12]
  1576 | 00000B53 | CF                        |     iret
  1577 |          |                           | 
  1578 |          |                           | 
  1579 |          |                           | YKEnterMutex:
  1580 | 00000B54 | FA                        |     cli
  1581 | 00000B55 | C3                        |     ret
  1582 |          |                           | 
  1583 |          |                           | YKExitMutex:
  1584 | 00000B56 | FB                        |     sti
  1585 | 00000B57 | C3                        |     ret
  1586 |          |                           |    
  1587 |          |                           | 
  1588 |          |                           | 
  1589 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from yakc.i
  1590 |          |                           | 	CPU	8086
  1591 |          |                           | 	ALIGN	2
  1592 | 00000B58 | E9850E                    | 	jmp	main	; Jump to program start
  1593 | 00000B5B | 90                        | 	ALIGN	2
  1594 |          |                           | YKIdleTask:
  1595 |          |                           | 	; >>>>> Line:	22
  1596 |          |                           | 	; >>>>> void YKIdleTask(void) { 
  1597 | 00000B5C | EB15                      | 	jmp	L_yakc_1
  1598 |          |                           | L_yakc_2:
  1599 |          |                           | 	; >>>>> Line:	24
  1600 |          |                           | 	; >>>>> while(1){ 
  1601 | 00000B5E | EB0D                      | 	jmp	L_yakc_4
  1602 |          |                           | L_yakc_3:
  1603 |          |                           | 	; >>>>> Line:	25
  1604 |          |                           | 	; >>>>> ++dummy; 
  1605 | 00000B60 | FF46FE                    | 	inc	word [bp-2]
  1606 |          |                           | 	; >>>>> Line:	26
  1607 |          |                           | 	; >>>>> --dummy; 
  1608 | 00000B63 | FF4EFE                    | 	dec	word [bp-2]
  1609 |          |                           | 	; >>>>> Line:	27
  1610 |          |                           | 	; >>>>> ++dummy; 
  1611 | 00000B66 | FF46FE                    | 	inc	word [bp-2]
  1612 |          |                           | 	; >>>>> Line:	28
  1613 |          |                           | 	; >>>>> ++YKIdleCount; 
  1614 | 00000B69 | FF06[4213]                | 	inc	word [YKIdleCount]
  1615 |          |                           | L_yakc_4:
  1616 | 00000B6D | EBF1                      | 	jmp	L_yakc_3
  1617 |          |                           | L_yakc_5:
  1618 | 00000B6F | 89EC                      | 	mov	sp, bp
  1619 | 00000B71 | 5D                        | 	pop	bp
  1620 | 00000B72 | C3                        | 	ret
  1621 |          |                           | L_yakc_1:
  1622 | 00000B73 | 55                        | 	push	bp
  1623 | 00000B74 | 89E5                      | 	mov	bp, sp
  1624 | 00000B76 | 51                        | 	push	cx
  1625 | 00000B77 | EBE5                      | 	jmp	L_yakc_2
  1626 | 00000B79 | 90                        | 	ALIGN	2
  1627 |          |                           | YKInitialize:
  1628 |          |                           | 	; >>>>> Line:	32
  1629 |          |                           | 	; >>>>> void YKInitialize(void) { 
  1630 | 00000B7A | EB6F                      | 	jmp	L_yakc_7
  1631 |          |                           | L_yakc_8:
  1632 |          |                           | 	; >>>>> Line:	37
  1633 |          |                           | 	; >>>>> YKCtxSwCount = 0; 
  1634 | 00000B7C | C746FA6400                | 	mov	word [bp-6], 100
  1635 |          |                           | 	; >>>>> Line:	37
  1636 |          |                           | 	; >>>>> YKCtxSwCount = 0; 
  1637 | 00000B81 | C706[4013]0000            | 	mov	word [YKCtxSwCount], 0
  1638 |          |                           | 	; >>>>> Line:	38
  1639 |          |                           | 	; >>>>> YKTickNum = 0; 
  1640 | 00000B87 | C706[4413]0000            | 	mov	word [YKTickNum], 0
  1641 |          |                           | 	; >>>>> Line:	39
  1642 |          |                           | 	; >>>>> YKIdleCount = 0; 
  1643 | 00000B8D | C706[4213]0000            | 	mov	word [YKIdleCount], 0
  1644 |          |                           | 	; >>>>> Line:	40
  1645 |          |                           | 	; >>>>> YKISRDepth = 0; 
  1646 | 00000B93 | C706[4613]0000            | 	mov	word [YKISRDepth], 0
  1647 |          |                           | 	; >>>>> Line:	41
  1648 |          |                           | 	; >>>>> YKRunFlag = 0; 
  1649 | 00000B99 | C706[4813]0000            | 	mov	word [YKRunFlag], 0
  1650 |          |                           | 	; >>>>> Line:	42
  1651 |          |                           | 	; >>>>> YKBlockList = 0; 
  1652 | 00000B9F | C706[4C13]0000            | 	mov	word [YKBlockList], 0
  1653 |          |                           | 	; >>>>> Line:	43
  1654 |          |                           | 	; >>>>> YKRdyList = 0; 
  1655 | 00000BA5 | C706[4A13]0000            | 	mov	word [YKRdyList], 0
  1656 |          |                           | 	; >>>>> Line:	44
  1657 |          |                           | 	; >>>>> YKCurrTask = 0; 
  1658 | 00000BAB | C706[4C14]0000            | 	mov	word [YKCurrTask], 0
  1659 |          |                           | 	; >>>>> Line:	45
  1660 |          |                           | 	; >>>>> idle_task_p = YKIdleTask; 
  1661 | 00000BB1 | C746FE[5C0B]              | 	mov	word [bp-2], YKIdleTask
  1662 |          |                           | 	; >>>>> Line:	46
  1663 |          |                           | 	; >>>>> idle_task_stack_p = Y 
  1664 | 00000BB6 | C746FC[4C16]              | 	mov	word [bp-4], (YKIdleTaskStack--510)
  1665 |          |                           | 	; >>>>> Line:	47
  1666 |          |                           | 	; >>>>> lowest_priority = 100; 
  1667 | 00000BBB | C746FA6400                | 	mov	word [bp-6], 100
  1668 |          |                           | 	; >>>>> Line:	48
  1669 |          |                           | 	; >>>>> YKErrorFlag = 0; 
  1670 | 00000BC0 | C706[6416]0000            | 	mov	word [YKErrorFlag], 0
  1671 |          |                           | 	; >>>>> Line:	51
  1672 |          |                           | 	; >>>>> YKAvailSEMList = YKSEMArray; 
  1673 | 00000BC6 | C706[5616][4E16]          | 	mov	word [YKAvailSEMList], YKSEMArray
  1674 |          |                           | 	; >>>>> Line:	53
  1675 |          |                           | 	; >>>>> YKQAvailQList = YKQArray; 
  1676 | 00000BCC | C706[6216][5816]          | 	mov	word [YKQAvailQList], YKQArray
  1677 |          |                           | 	; >>>>> Line:	56
  1678 |          |                           | 	; >>>>> YKAvailTCBList = YKTCBArray; 
  1679 | 00000BD2 | C706[4E13][5013]          | 	mov	word [YKAvailTCBList], YKTCBArray
  1680 |          |                           | 	; >>>>> Line:	57
  1681 |          |                           | 	; >>>>> YKNewTask(idle_task_p, idle_task_stack_p, lowest_priority); 
  1682 | 00000BD8 | FF76FA                    | 	push	word [bp-6]
  1683 | 00000BDB | FF76FC                    | 	push	word [bp-4]
  1684 | 00000BDE | FF76FE                    | 	push	word [bp-2]
  1685 | 00000BE1 | E81000                    | 	call	YKNewTask
  1686 | 00000BE4 | 83C406                    | 	add	sp, 6
  1687 | 00000BE7 | 89EC                      | 	mov	sp, bp
  1688 | 00000BE9 | 5D                        | 	pop	bp
  1689 | 00000BEA | C3                        | 	ret
  1690 |          |                           | L_yakc_7:
  1691 | 00000BEB | 55                        | 	push	bp
  1692 | 00000BEC | 89E5                      | 	mov	bp, sp
  1693 | 00000BEE | 83EC06                    | 	sub	sp, 6
  1694 | 00000BF1 | EB89                      | 	jmp	L_yakc_8
  1695 | 00000BF3 | 90                        | 	ALIGN	2
  1696 |          |                           | YKNewTask:
  1697 |          |                           | 	; >>>>> Line:	64
  1698 |          |                           | 	; >>>>> void YKNewTask(void (* task)(void), void *taskStack, unsigned char priority) { 
  1699 | 00000BF4 | E9E300                    | 	jmp	L_yakc_10
  1700 |          |                           | L_yakc_11:
  1701 |          |                           | 	; >>>>> Line:	66
  1702 |          |                           | 	; >>>>> YKAvailTCBList++; 
  1703 | 00000BF7 | A1[4E13]                  | 	mov	ax, word [YKAvailTCBList]
  1704 | 00000BFA | 8946FE                    | 	mov	word [bp-2], ax
  1705 |          |                           | 	; >>>>> Line:	66
  1706 |          |                           | 	; >>>>> YKAvailTCBList++; 
  1707 | 00000BFD | 8306[4E13]2A              | 	add	word [YKAvailTCBList], 42
  1708 |          |                           | 	; >>>>> Line:	67
  1709 |          |                           | 	; >>>>> cur_tcb->ax = 0; 
  1710 | 00000C02 | 8B76FE                    | 	mov	si, word [bp-2]
  1711 | 00000C05 | C7040000                  | 	mov	word [si], 0
  1712 |          |                           | 	; >>>>> Line:	68
  1713 |          |                           | 	; >>>>> cur_tcb->bx = 0; 
  1714 | 00000C09 | 8B76FE                    | 	mov	si, word [bp-2]
  1715 | 00000C0C | 83C602                    | 	add	si, 2
  1716 | 00000C0F | C7040000                  | 	mov	word [si], 0
  1717 |          |                           | 	; >>>>> Line:	69
  1718 |          |                           | 	; >>>>> cur_tcb->cx = 0; 
  1719 | 00000C13 | 8B76FE                    | 	mov	si, word [bp-2]
  1720 | 00000C16 | 83C604                    | 	add	si, 4
  1721 | 00000C19 | C7040000                  | 	mov	word [si], 0
  1722 |          |                           | 	; >>>>> Line:	70
  1723 |          |                           | 	; >>>>> cur_tcb->dx = 0; 
  1724 | 00000C1D | 8B76FE                    | 	mov	si, word [bp-2]
  1725 | 00000C20 | 83C606                    | 	add	si, 6
  1726 | 00000C23 | C7040000                  | 	mov	word [si], 0
  1727 |          |                           | 	; >>>>> Line:	71
  1728 |          |                           | 	; >>>>> cur_tcb->ip = task; 
  1729 | 00000C27 | 8B76FE                    | 	mov	si, word [bp-2]
  1730 | 00000C2A | 83C608                    | 	add	si, 8
  1731 | 00000C2D | 8B4604                    | 	mov	ax, word [bp+4]
  1732 | 00000C30 | 8904                      | 	mov	word [si], ax
  1733 |          |                           | 	; >>>>> Line:	72
  1734 |          |                           | 	; >>>>> cur_tcb->sp = ta 
  1735 | 00000C32 | 8B76FE                    | 	mov	si, word [bp-2]
  1736 | 00000C35 | 83C60A                    | 	add	si, 10
  1737 | 00000C38 | 8B4606                    | 	mov	ax, word [bp+6]
  1738 | 00000C3B | 8904                      | 	mov	word [si], ax
  1739 |          |                           | 	; >>>>> Line:	73
  1740 |          |                           | 	; >>>>> cur_tcb->bp = taskStack; 
  1741 | 00000C3D | 8B76FE                    | 	mov	si, word [bp-2]
  1742 | 00000C40 | 83C60C                    | 	add	si, 12
  1743 | 00000C43 | 8B4606                    | 	mov	ax, word [bp+6]
  1744 | 00000C46 | 8904                      | 	mov	word [si], ax
  1745 |          |                           | 	; >>>>> Line:	74
  1746 |          |                           | 	; >>>>> cur_tcb->si = 0; 
  1747 | 00000C48 | 8B76FE                    | 	mov	si, word [bp-2]
  1748 | 00000C4B | 83C60E                    | 	add	si, 14
  1749 | 00000C4E | C7040000                  | 	mov	word [si], 0
  1750 |          |                           | 	; >>>>> Line:	75
  1751 |          |                           | 	; >>>>> cur_tcb->di = 0; 
  1752 | 00000C52 | 8B76FE                    | 	mov	si, word [bp-2]
  1753 | 00000C55 | 83C610                    | 	add	si, 16
  1754 | 00000C58 | C7040000                  | 	mov	word [si], 0
  1755 |          |                           | 	; >>>>> Line:	76
  1756 |          |                           | 	; >>>>> cur_tcb->cs = 0; 
  1757 | 00000C5C | 8B76FE                    | 	mov	si, word [bp-2]
  1758 | 00000C5F | 83C612                    | 	add	si, 18
  1759 | 00000C62 | C7040000                  | 	mov	word [si], 0
  1760 |          |                           | 	; >>>>> Line:	77
  1761 |          |                           | 	; >>>>> cur_tcb->ss = 0; 
  1762 | 00000C66 | 8B76FE                    | 	mov	si, word [bp-2]
  1763 | 00000C69 | 83C614                    | 	add	si, 20
  1764 | 00000C6C | C7040000                  | 	mov	word [si], 0
  1765 |          |                           | 	; >>>>> Line:	78
  1766 |          |                           | 	; >>>>> cur_tcb->ds = 0; 
  1767 | 00000C70 | 8B76FE                    | 	mov	si, word [bp-2]
  1768 | 00000C73 | 83C616                    | 	add	si, 22
  1769 | 00000C76 | C7040000                  | 	mov	word [si], 0
  1770 |          |                           | 	; >>>>> Line:	79
  1771 |          |                           | 	; >>>>> cur_tcb->es = 0; 
  1772 | 00000C7A | 8B76FE                    | 	mov	si, word [bp-2]
  1773 | 00000C7D | 83C618                    | 	add	si, 24
  1774 | 00000C80 | C7040000                  | 	mov	word [si], 0
  1775 |          |                           | 	; >>>>> Line:	80
  1776 |          |                           | 	; >>>>> cur_tcb->flags = 512; 
  1777 | 00000C84 | 8B76FE                    | 	mov	si, word [bp-2]
  1778 | 00000C87 | 83C61A                    | 	add	si, 26
  1779 | 00000C8A | C7040002                  | 	mov	word [si], 512
  1780 |          |                           | 	; >>>>> Line:	81
  1781 |          |                           | 	; >>>>> cur_tcb->priority = priority; 
  1782 | 00000C8E | 8A4608                    | 	mov	al, byte [bp+8]
  1783 | 00000C91 | 30E4                      | 	xor	ah, ah
  1784 | 00000C93 | 8B76FE                    | 	mov	si, word [bp-2]
  1785 | 00000C96 | 83C61C                    | 	add	si, 28
  1786 | 00000C99 | 8904                      | 	mov	word [si], ax
  1787 |          |                           | 	; >>>>> Line:	82
  1788 |          |                           | 	; >>>>> cur_tcb->state = READY; 
  1789 | 00000C9B | 8B76FE                    | 	mov	si, word [bp-2]
  1790 | 00000C9E | 83C61E                    | 	add	si, 30
  1791 | 00000CA1 | C7040000                  | 	mov	word [si], 0
  1792 |          |                           | 	; >>>>> Line:	83
  1793 |          |                           | 	; >>>>> cur_tcb->delay = 0; 
  1794 | 00000CA5 | 8B76FE                    | 	mov	si, word [bp-2]
  1795 | 00000CA8 | 83C620                    | 	add	si, 32
  1796 | 00000CAB | C7040000                  | 	mov	word [si], 0
  1797 |          |                           | 	; >>>>> Line:	84
  1798 |          |                           | 	; >>>>> cur_tcb->prev = 0; 
  1799 | 00000CAF | 8B76FE                    | 	mov	si, word [bp-2]
  1800 | 00000CB2 | 83C626                    | 	add	si, 38
  1801 | 00000CB5 | C7040000                  | 	mov	word [si], 0
  1802 |          |                           | 	; >>>>> Line:	85
  1803 |          |                           | 	; >>>>> cur_tcb->next = 0; 
  1804 | 00000CB9 | 8B76FE                    | 	mov	si, word [bp-2]
  1805 | 00000CBC | 83C628                    | 	add	si, 40
  1806 | 00000CBF | C7040000                  | 	mov	word [si], 0
  1807 |          |                           | 	; >>>>> Line:	86
  1808 |          |                           | 	; >>>>> YKAddReadyTask(cur_tcb); 
  1809 | 00000CC3 | FF76FE                    | 	push	word [bp-2]
  1810 | 00000CC6 | E82F01                    | 	call	YKAddReadyTask
  1811 | 00000CC9 | 83C402                    | 	add	sp, 2
  1812 |          |                           | 	; >>>>> Line:	88
  1813 |          |                           | 	; >>>>> if (YKRunFlag) { 
  1814 | 00000CCC | A1[4813]                  | 	mov	ax, word [YKRunFlag]
  1815 | 00000CCF | 85C0                      | 	test	ax, ax
  1816 | 00000CD1 | 7403                      | 	je	L_yakc_12
  1817 |          |                           | 	; >>>>> Line:	89
  1818 |          |                           | 	; >>>>> YKScheduler(); 
  1819 | 00000CD3 | E80A01                    | 	call	YKScheduler
  1820 |          |                           | L_yakc_12:
  1821 | 00000CD6 | 89EC                      | 	mov	sp, bp
  1822 | 00000CD8 | 5D                        | 	pop	bp
  1823 | 00000CD9 | C3                        | 	ret
  1824 |          |                           | L_yakc_10:
  1825 | 00000CDA | 55                        | 	push	bp
  1826 | 00000CDB | 89E5                      | 	mov	bp, sp
  1827 | 00000CDD | 51                        | 	push	cx
  1828 | 00000CDE | E916FF                    | 	jmp	L_yakc_11
  1829 | 00000CE1 | 90                        | 	ALIGN	2
  1830 |          |                           | YKRun:
  1831 |          |                           | 	; >>>>> Line:	93
  1832 |          |                           | 	; >>>>> void YKRun(void) { 
  1833 | 00000CE2 | EB0D                      | 	jmp	L_yakc_14
  1834 |          |                           | L_yakc_15:
  1835 |          |                           | 	; >>>>> Line:	94
  1836 |          |                           | 	; >>>>> YKRunFlag = 1; 
  1837 | 00000CE4 | C706[4813]0100            | 	mov	word [YKRunFlag], 1
  1838 |          |                           | 	; >>>>> Line:	95
  1839 |          |                           | 	; >>>>> YKScheduler(); 
  1840 | 00000CEA | E8F300                    | 	call	YKScheduler
  1841 | 00000CED | 89EC                      | 	mov	sp, bp
  1842 | 00000CEF | 5D                        | 	pop	bp
  1843 | 00000CF0 | C3                        | 	ret
  1844 |          |                           | L_yakc_14:
  1845 | 00000CF1 | 55                        | 	push	bp
  1846 | 00000CF2 | 89E5                      | 	mov	bp, sp
  1847 | 00000CF4 | EBEE                      | 	jmp	L_yakc_15
  1848 |          |                           | 	ALIGN	2
  1849 |          |                           | print_ready_list:
  1850 |          |                           | 	; >>>>> Line:	99
  1851 |          |                           | 	; >>>>> { 
  1852 | 00000CF6 | EB3A                      | 	jmp	L_yakc_17
  1853 |          |                           | L_yakc_18:
  1854 |          |                           | 	; >>>>> Line:	102
  1855 |          |                           | 	; >>>>> while( iter ) 
  1856 | 00000CF8 | C746FE0000                | 	mov	word [bp-2], 0
  1857 | 00000CFD | A1[4A13]                  | 	mov	ax, word [YKRdyList]
  1858 | 00000D00 | 8946FC                    | 	mov	word [bp-4], ax
  1859 |          |                           | 	; >>>>> Line:	102
  1860 |          |                           | 	; >>>>> while( iter ) 
  1861 | 00000D03 | EB1F                      | 	jmp	L_yakc_20
  1862 |          |                           | L_yakc_19:
  1863 |          |                           | 	; >>>>> Line:	104
  1864 |          |                           | 	; >>>>> printInt( iter->priority ); 
  1865 | 00000D05 | 8B76FC                    | 	mov	si, word [bp-4]
  1866 | 00000D08 | 83C61C                    | 	add	si, 28
  1867 | 00000D0B | FF34                      | 	push	word [si]
  1868 | 00000D0D | E83CF7                    | 	call	printInt
  1869 | 00000D10 | 83C402                    | 	add	sp, 2
  1870 |          |                           | 	; >>>>> Line:	105
  1871 |          |                           | 	; >>>>> printNewLine(); 
  1872 | 00000D13 | E800F7                    | 	call	printNewLine
  1873 |          |                           | 	; >>>>> Line:	106
  1874 |          |                           | 	; >>>>> iter = iter->next; 
  1875 | 00000D16 | 8B76FC                    | 	mov	si, word [bp-4]
  1876 | 00000D19 | 83C628                    | 	add	si, 40
  1877 | 00000D1C | 8B04                      | 	mov	ax, word [si]
  1878 | 00000D1E | 8946FC                    | 	mov	word [bp-4], ax
  1879 |          |                           | 	; >>>>> Line:	107
  1880 |          |                           | 	; >>>>> ++count; 
  1881 | 00000D21 | FF46FE                    | 	inc	word [bp-2]
  1882 |          |                           | L_yakc_20:
  1883 | 00000D24 | 8B46FC                    | 	mov	ax, word [bp-4]
  1884 | 00000D27 | 85C0                      | 	test	ax, ax
  1885 | 00000D29 | 75DA                      | 	jne	L_yakc_19
  1886 |          |                           | L_yakc_21:
  1887 |          |                           | 	; >>>>> Line:	109
  1888 |          |                           | 	; >>>>> return count; 
  1889 | 00000D2B | 8B46FE                    | 	mov	ax, word [bp-2]
  1890 |          |                           | L_yakc_22:
  1891 | 00000D2E | 89EC                      | 	mov	sp, bp
  1892 | 00000D30 | 5D                        | 	pop	bp
  1893 | 00000D31 | C3                        | 	ret
  1894 |          |                           | L_yakc_17:
  1895 | 00000D32 | 55                        | 	push	bp
  1896 | 00000D33 | 89E5                      | 	mov	bp, sp
  1897 | 00000D35 | 83EC04                    | 	sub	sp, 4
  1898 | 00000D38 | EBBE                      | 	jmp	L_yakc_18
  1899 |          |                           | L_yakc_25:
  1900 | 00000D3A | 2053656D6170686F72-       | 	DB	" Semaphore: ",0
  1901 | 00000D43 | 653A2000                  | ...
  1902 |          |                           | L_yakc_24:
  1903 | 00000D47 | 2044656C61793A2000        | 	DB	" Delay: ",0
  1904 |          |                           | 	ALIGN	2
  1905 |          |                           | print_delay_list:
  1906 |          |                           | 	; >>>>> Line:	113
  1907 |          |                           | 	; >>>>> { 
  1908 | 00000D50 | E98400                    | 	jmp	L_yakc_26
  1909 |          |                           | L_yakc_27:
  1910 |          |                           | 	; >>>>> Line:	116
  1911 |          |                           | 	; >>>>> while( iter ) 
  1912 | 00000D53 | C746FE0000                | 	mov	word [bp-2], 0
  1913 | 00000D58 | A1[4C13]                  | 	mov	ax, word [YKBlockList]
  1914 | 00000D5B | 8946FC                    | 	mov	word [bp-4], ax
  1915 |          |                           | 	; >>>>> Line:	116
  1916 |          |                           | 	; >>>>> while( iter ) 
  1917 | 00000D5E | EB69                      | 	jmp	L_yakc_29
  1918 |          |                           | L_yakc_28:
  1919 |          |                           | 	; >>>>> Line:	118
  1920 |          |                           | 	; >>>>> printInt( iter->priority ); 
  1921 | 00000D60 | 8B76FC                    | 	mov	si, word [bp-4]
  1922 | 00000D63 | 83C61C                    | 	add	si, 28
  1923 | 00000D66 | FF34                      | 	push	word [si]
  1924 | 00000D68 | E8E1F6                    | 	call	printInt
  1925 | 00000D6B | 83C402                    | 	add	sp, 2
  1926 |          |                           | 	; >>>>> Line:	119
  1927 |          |                           | 	; >>>>> if (iter->state == DELAYED) { 
  1928 | 00000D6E | 8B76FC                    | 	mov	si, word [bp-4]
  1929 | 00000D71 | 83C61E                    | 	add	si, 30
  1930 | 00000D74 | 833C01                    | 	cmp	word [si], 1
  1931 | 00000D77 | 751A                      | 	jne	L_yakc_31
  1932 |          |                           | 	; >>>>> Line:	120
  1933 |          |                           | 	; >>>>> printString( " Delay: " ); 
  1934 | 00000D79 | B8[470D]                  | 	mov	ax, L_yakc_24
  1935 | 00000D7C | 50                        | 	push	ax
  1936 | 00000D7D | E8A8F6                    | 	call	printString
  1937 | 00000D80 | 83C402                    | 	add	sp, 2
  1938 |          |                           | 	; >>>>> Line:	121
  1939 |          |                           | 	; >>>>> printInt( iter->delay ); 
  1940 | 00000D83 | 8B76FC                    | 	mov	si, word [bp-4]
  1941 | 00000D86 | 83C620                    | 	add	si, 32
  1942 | 00000D89 | FF34                      | 	push	word [si]
  1943 | 00000D8B | E8BEF6                    | 	call	printInt
  1944 | 00000D8E | 83C402                    | 	add	sp, 2
  1945 | 00000D91 | EB25                      | 	jmp	L_yakc_32
  1946 |          |                           | L_yakc_31:
  1947 |          |                           | 	; >>>>> Line:	123
  1948 |          |                           | 	; >>>>> else if (iter->state == SEMAPHORE) { 
  1949 | 00000D93 | 8B76FC                    | 	mov	si, word [bp-4]
  1950 | 00000D96 | 83C61E                    | 	add	si, 30
  1951 | 00000D99 | 833C02                    | 	cmp	word [si], 2
  1952 | 00000D9C | 751A                      | 	jne	L_yakc_33
  1953 |          |                           | 	; >>>>> Line:	124
  1954 |          |                           | 	; >>>>> printString( " Semaphore: " ); 
  1955 | 00000D9E | B8[3A0D]                  | 	mov	ax, L_yakc_25
  1956 | 00000DA1 | 50                        | 	push	ax
  1957 | 00000DA2 | E883F6                    | 	call	printString
  1958 | 00000DA5 | 83C402                    | 	add	sp, 2
  1959 |          |                           | 	; >>>>> Line:	125
  1960 |          |                           | 	; >>>>> printInt( iter->semaphore->value  
  1961 | 00000DA8 | 8B76FC                    | 	mov	si, word [bp-4]
  1962 | 00000DAB | 83C622                    | 	add	si, 34
  1963 | 00000DAE | 8B34                      | 	mov	si, word [si]
  1964 | 00000DB0 | FF34                      | 	push	word [si]
  1965 | 00000DB2 | E897F6                    | 	call	printInt
  1966 | 00000DB5 | 83C402                    | 	add	sp, 2
  1967 |          |                           | L_yakc_33:
  1968 |          |                           | L_yakc_32:
  1969 |          |                           | 	; >>>>> Line:	127
  1970 |          |                           | 	; >>>>> printNewLine(); 
  1971 | 00000DB8 | E85BF6                    | 	call	printNewLine
  1972 |          |                           | 	; >>>>> Line:	128
  1973 |          |                           | 	; >>>>> iter = iter->next; 
  1974 | 00000DBB | 8B76FC                    | 	mov	si, word [bp-4]
  1975 | 00000DBE | 83C628                    | 	add	si, 40
  1976 | 00000DC1 | 8B04                      | 	mov	ax, word [si]
  1977 | 00000DC3 | 8946FC                    | 	mov	word [bp-4], ax
  1978 |          |                           | 	; >>>>> Line:	129
  1979 |          |                           | 	; >>>>> ++count; 
  1980 | 00000DC6 | FF46FE                    | 	inc	word [bp-2]
  1981 |          |                           | L_yakc_29:
  1982 | 00000DC9 | 8B46FC                    | 	mov	ax, word [bp-4]
  1983 | 00000DCC | 85C0                      | 	test	ax, ax
  1984 | 00000DCE | 7590                      | 	jne	L_yakc_28
  1985 |          |                           | L_yakc_30:
  1986 |          |                           | 	; >>>>> Line:	131
  1987 |          |                           | 	; >>>>> return count; 
  1988 | 00000DD0 | 8B46FE                    | 	mov	ax, word [bp-2]
  1989 |          |                           | L_yakc_34:
  1990 | 00000DD3 | 89EC                      | 	mov	sp, bp
  1991 | 00000DD5 | 5D                        | 	pop	bp
  1992 | 00000DD6 | C3                        | 	ret
  1993 |          |                           | L_yakc_26:
  1994 | 00000DD7 | 55                        | 	push	bp
  1995 | 00000DD8 | 89E5                      | 	mov	bp, sp
  1996 | 00000DDA | 83EC04                    | 	sub	sp, 4
  1997 | 00000DDD | E973FF                    | 	jmp	L_yakc_27
  1998 |          |                           | 	ALIGN	2
  1999 |          |                           | YKScheduler:
  2000 |          |                           | 	; >>>>> Line:	134
  2001 |          |                           | 	; >>>>> void YKScheduler(void) { 
  2002 | 00000DE0 | EB10                      | 	jmp	L_yakc_36
  2003 |          |                           | L_yakc_37:
  2004 |          |                           | 	; >>>>> Line:	135
  2005 |          |                           | 	; >>>>> if (YKCurrTask != YKRdyList) { 
  2006 | 00000DE2 | A1[4A13]                  | 	mov	ax, word [YKRdyList]
  2007 | 00000DE5 | 3B06[4C14]                | 	cmp	ax, word [YKCurrTask]
  2008 | 00000DE9 | 7403                      | 	je	L_yakc_38
  2009 |          |                           | 	; >>>>> Line:	156
  2010 |          |                           | 	; >>>>> YKDispatcher(); 
  2011 | 00000DEB | E8E3FC                    | 	call	YKDispatcher
  2012 |          |                           | L_yakc_38:
  2013 | 00000DEE | 89EC                      | 	mov	sp, bp
  2014 | 00000DF0 | 5D                        | 	pop	bp
  2015 | 00000DF1 | C3                        | 	ret
  2016 |          |                           | L_yakc_36:
  2017 | 00000DF2 | 55                        | 	push	bp
  2018 | 00000DF3 | 89E5                      | 	mov	bp, sp
  2019 | 00000DF5 | EBEB                      | 	jmp	L_yakc_37
  2020 | 00000DF7 | 90                        | 	ALIGN	2
  2021 |          |                           | YKAddReadyTask:
  2022 |          |                           | 	; >>>>> Line:	161
  2023 |          |                           | 	; >>>>> void YKAddReadyTask(tcb_t *cur_tcb) { 
  2024 | 00000DF8 | E99100                    | 	jmp	L_yakc_40
  2025 |          |                           | L_yakc_41:
  2026 |          |                           | 	; >>>>> Line:	164
  2027 |          |                           | 	; >>>>> if(YKRdyList == 0) { 
  2028 | 00000DFB | A1[4A13]                  | 	mov	ax, word [YKRdyList]
  2029 | 00000DFE | 85C0                      | 	test	ax, ax
  2030 | 00000E00 | 7508                      | 	jne	L_yakc_42
  2031 |          |                           | 	; >>>>> Line:	165
  2032 |          |                           | 	; >>>>> YKRdyList = cur_tcb; 
  2033 | 00000E02 | 8B4604                    | 	mov	ax, word [bp+4]
  2034 | 00000E05 | A3[4A13]                  | 	mov	word [YKRdyList], ax
  2035 | 00000E08 | EB7E                      | 	jmp	L_yakc_43
  2036 |          |                           | L_yakc_42:
  2037 |          |                           | 	; >>>>> Line:	168
  2038 |          |                           | 	; >>>>> iter = YKRdyList; 
  2039 | 00000E0A | A1[4A13]                  | 	mov	ax, word [YKRdyList]
  2040 | 00000E0D | 8946FC                    | 	mov	word [bp-4], ax
  2041 |          |                           | 	; >>>>> Line:	169
  2042 |          |                           | 	; >>>>> moved_to_top = 1; 
  2043 | 00000E10 | C746FE0100                | 	mov	word [bp-2], 1
  2044 |          |                           | 	; >>>>> Line:	170
  2045 |          |                           | 	; >>>>> while (cur_tcb->priority > iter->priority) { 
  2046 | 00000E15 | EB10                      | 	jmp	L_yakc_45
  2047 |          |                           | L_yakc_44:
  2048 |          |                           | 	; >>>>> Line:	171
  2049 |          |                           | 	; >>>>> iter = iter->next; 
  2050 | 00000E17 | 8B76FC                    | 	mov	si, word [bp-4]
  2051 | 00000E1A | 83C628                    | 	add	si, 40
  2052 | 00000E1D | 8B04                      | 	mov	ax, word [si]
  2053 | 00000E1F | 8946FC                    | 	mov	word [bp-4], ax
  2054 |          |                           | 	; >>>>> Line:	172
  2055 |          |                           | 	; >>>>> moved_to_top = 
  2056 | 00000E22 | C746FE0000                | 	mov	word [bp-2], 0
  2057 |          |                           | L_yakc_45:
  2058 | 00000E27 | 8B7604                    | 	mov	si, word [bp+4]
  2059 | 00000E2A | 83C61C                    | 	add	si, 28
  2060 | 00000E2D | 8B7EFC                    | 	mov	di, word [bp-4]
  2061 | 00000E30 | 83C71C                    | 	add	di, 28
  2062 | 00000E33 | 8B05                      | 	mov	ax, word [di]
  2063 | 00000E35 | 3B04                      | 	cmp	ax, word [si]
  2064 | 00000E37 | 7CDE                      | 	jl	L_yakc_44
  2065 |          |                           | L_yakc_46:
  2066 |          |                           | 	; >>>>> Line:	174
  2067 |          |                           | 	; >>>>> cur_tcb->next = iter; 
  2068 | 00000E39 | 8B7604                    | 	mov	si, word [bp+4]
  2069 | 00000E3C | 83C628                    | 	add	si, 40
  2070 | 00000E3F | 8B46FC                    | 	mov	ax, word [bp-4]
  2071 | 00000E42 | 8904                      | 	mov	word [si], ax
  2072 |          |                           | 	; >>>>> Line:	175
  2073 |          |                           | 	; >>>>> if (iter->prev) 
  2074 | 00000E44 | 8B76FC                    | 	mov	si, word [bp-4]
  2075 | 00000E47 | 83C626                    | 	add	si, 38
  2076 | 00000E4A | 8B04                      | 	mov	ax, word [si]
  2077 | 00000E4C | 85C0                      | 	test	ax, ax
  2078 | 00000E4E | 7410                      | 	je	L_yakc_47
  2079 |          |                           | 	; >>>>> Line:	176
  2080 |          |                           | 	; >>>>> iter->prev->next = cur_tcb; 
  2081 | 00000E50 | 8B76FC                    | 	mov	si, word [bp-4]
  2082 | 00000E53 | 83C626                    | 	add	si, 38
  2083 | 00000E56 | 8B34                      | 	mov	si, word [si]
  2084 | 00000E58 | 83C628                    | 	add	si, 40
  2085 | 00000E5B | 8B4604                    | 	mov	ax, word [bp+4]
  2086 | 00000E5E | 8904                      | 	mov	word [si], ax
  2087 |          |                           | L_yakc_47:
  2088 |          |                           | 	; >>>>> Line:	178
  2089 |          |                           | 	; >>>>> cur_tcb->prev = iter->prev; 
  2090 | 00000E60 | 8B76FC                    | 	mov	si, word [bp-4]
  2091 | 00000E63 | 83C626                    | 	add	si, 38
  2092 | 00000E66 | 8B7E04                    | 	mov	di, word [bp+4]
  2093 | 00000E69 | 83C726                    | 	add	di, 38
  2094 | 00000E6C | 8B04                      | 	mov	ax, word [si]
  2095 | 00000E6E | 8905                      | 	mov	word [di], ax
  2096 |          |                           | 	; >>>>> Line:	179
  2097 |          |                           | 	; >>>>> iter->prev = cur_tcb; 
  2098 | 00000E70 | 8B76FC                    | 	mov	si, word [bp-4]
  2099 | 00000E73 | 83C626                    | 	add	si, 38
  2100 | 00000E76 | 8B4604                    | 	mov	ax, word [bp+4]
  2101 | 00000E79 | 8904                      | 	mov	word [si], ax
  2102 |          |                           | 	; >>>>> Line:	181
  2103 |          |                           | 	; >>>>> if (moved_to_top) 
  2104 | 00000E7B | 8B46FE                    | 	mov	ax, word [bp-2]
  2105 | 00000E7E | 85C0                      | 	test	ax, ax
  2106 | 00000E80 | 7406                      | 	je	L_yakc_48
  2107 |          |                           | 	; >>>>> Line:	182
  2108 |          |                           | 	; >>>>> YKRdyList = cur_tcb; 
  2109 | 00000E82 | 8B4604                    | 	mov	ax, word [bp+4]
  2110 | 00000E85 | A3[4A13]                  | 	mov	word [YKRdyList], ax
  2111 |          |                           | L_yakc_48:
  2112 |          |                           | L_yakc_43:
  2113 |          |                           | L_yakc_49:
  2114 |          |                           | 	; >>>>> Line:	184
  2115 |          |                           | 	; >>>>> return; 
  2116 | 00000E88 | 89EC                      | 	mov	sp, bp
  2117 | 00000E8A | 5D                        | 	pop	bp
  2118 | 00000E8B | C3                        | 	ret
  2119 |          |                           | L_yakc_40:
  2120 | 00000E8C | 55                        | 	push	bp
  2121 | 00000E8D | 89E5                      | 	mov	bp, sp
  2122 | 00000E8F | 83EC04                    | 	sub	sp, 4
  2123 | 00000E92 | E966FF                    | 	jmp	L_yakc_41
  2124 | 00000E95 | 90                        | 	ALIGN	2
  2125 |          |                           | YKBlockTask:
  2126 |          |                           | 	; >>>>> Line:	187
  2127 |          |                           | 	; >>>>> void YKBlockTask(){ 
  2128 | 00000E96 | E9F000                    | 	jmp	L_yakc_51
  2129 |          |                           | L_yakc_52:
  2130 |          |                           | 	; >>>>> Line:	189
  2131 |          |                           | 	; >>>>> YKRdyList = YKCurrTask->next; 
  2132 | 00000E99 | 8B36[4C14]                | 	mov	si, word [YKCurrTask]
  2133 | 00000E9D | 83C628                    | 	add	si, 40
  2134 | 00000EA0 | 8B04                      | 	mov	ax, word [si]
  2135 | 00000EA2 | A3[4A13]                  | 	mov	word [YKRdyList], ax
  2136 |          |                           | 	; >>>>> Line:	190
  2137 |          |                           | 	; >>>>> YKRdyList->prev = 0; 
  2138 | 00000EA5 | 8B36[4A13]                | 	mov	si, word [YKRdyList]
  2139 | 00000EA9 | 83C626                    | 	add	si, 38
  2140 | 00000EAC | C7040000                  | 	mov	word [si], 0
  2141 |          |                           | 	; >>>>> Line:	193
  2142 |          |                           | 	; >>>>> if (YKBlockList == 0) { 
  2143 | 00000EB0 | A1[4C13]                  | 	mov	ax, word [YKBlockList]
  2144 | 00000EB3 | 85C0                      | 	test	ax, ax
  2145 | 00000EB5 | 7514                      | 	jne	L_yakc_53
  2146 |          |                           | 	; >>>>> Line:	194
  2147 |          |                           | 	; >>>>> YKBlockList = YKCurrTask; 
  2148 | 00000EB7 | A1[4C14]                  | 	mov	ax, word [YKCurrTask]
  2149 | 00000EBA | A3[4C13]                  | 	mov	word [YKBlockList], ax
  2150 |          |                           | 	; >>>>> Line:	195
  2151 |          |                           | 	; >>>>> YKBlockList->next = 0; 
  2152 | 00000EBD | 8B36[4C13]                | 	mov	si, word [YKBlockList]
  2153 | 00000EC1 | 83C628                    | 	add	si, 40
  2154 | 00000EC4 | C7040000                  | 	mov	word [si], 0
  2155 | 00000EC8 | E9BA00                    | 	jmp	L_yakc_54
  2156 |          |                           | L_yakc_53:
  2157 |          |                           | 	; >>>>> Line:	197
  2158 |          |                           | 	; >>>>> else if ( YKBlockList->priority > YKCurrTask->priority ) 
  2159 | 00000ECB | 8B36[4C13]                | 	mov	si, word [YKBlockList]
  2160 | 00000ECF | 83C61C                    | 	add	si, 28
  2161 | 00000ED2 | 8B3E[4C14]                | 	mov	di, word [YKCurrTask]
  2162 | 00000ED6 | 83C71C                    | 	add	di, 28
  2163 | 00000ED9 | 8B05                      | 	mov	ax, word [di]
  2164 | 00000EDB | 3B04                      | 	cmp	ax, word [si]
  2165 | 00000EDD | 7D2B                      | 	jge	L_yakc_55
  2166 |          |                           | 	; >>>>> Line:	199
  2167 |          |                           | 	; >>>>> YKCurrTask->nex 
  2168 | 00000EDF | 8B36[4C14]                | 	mov	si, word [YKCurrTask]
  2169 | 00000EE3 | 83C628                    | 	add	si, 40
  2170 | 00000EE6 | A1[4C13]                  | 	mov	ax, word [YKBlockList]
  2171 | 00000EE9 | 8904                      | 	mov	word [si], ax
  2172 |          |                           | 	; >>>>> Line:	200
  2173 |          |                           | 	; >>>>> YKBlockList->prev = YKCurrTask; 
  2174 | 00000EEB | 8B36[4C13]                | 	mov	si, word [YKBlockList]
  2175 | 00000EEF | 83C626                    | 	add	si, 38
  2176 | 00000EF2 | A1[4C14]                  | 	mov	ax, word [YKCurrTask]
  2177 | 00000EF5 | 8904                      | 	mov	word [si], ax
  2178 |          |                           | 	; >>>>> Line:	201
  2179 |          |                           | 	; >>>>> YKCurrTask->prev = 0; 
  2180 | 00000EF7 | 8B36[4C14]                | 	mov	si, word [YKCurrTask]
  2181 | 00000EFB | 83C626                    | 	add	si, 38
  2182 | 00000EFE | C7040000                  | 	mov	word [si], 0
  2183 |          |                           | 	; >>>>> Line:	202
  2184 |          |                           | 	; >>>>> YKBlockList = YKCurrTask; 
  2185 | 00000F02 | A1[4C14]                  | 	mov	ax, word [YKCurrTask]
  2186 | 00000F05 | A3[4C13]                  | 	mov	word [YKBlockList], ax
  2187 | 00000F08 | EB7B                      | 	jmp	L_yakc_56
  2188 |          |                           | L_yakc_55:
  2189 |          |                           | 	; >>>>> Line:	207
  2190 |          |                           | 	; >>>>> while ( iter->next && YKCurrTask->priority > iter->next->priority ) { 
  2191 | 00000F0A | A1[4C13]                  | 	mov	ax, word [YKBlockList]
  2192 | 00000F0D | 8946FE                    | 	mov	word [bp-2], ax
  2193 |          |                           | 	; >>>>> Line:	207
  2194 |          |                           | 	; >>>>> while ( iter->next && YKCurrTask->priority > iter->next->priority ) { 
  2195 | 00000F10 | EB0B                      | 	jmp	L_yakc_58
  2196 |          |                           | L_yakc_57:
  2197 |          |                           | 	; >>>>> Line:	208
  2198 |          |                           | 	; >>>>> iter = iter->next; 
  2199 | 00000F12 | 8B76FE                    | 	mov	si, word [bp-2]
  2200 | 00000F15 | 83C628                    | 	add	si, 40
  2201 | 00000F18 | 8B04                      | 	mov	ax, word [si]
  2202 | 00000F1A | 8946FE                    | 	mov	word [bp-2], ax
  2203 |          |                           | L_yakc_58:
  2204 | 00000F1D | 8B76FE                    | 	mov	si, word [bp-2]
  2205 | 00000F20 | 83C628                    | 	add	si, 40
  2206 | 00000F23 | 8B04                      | 	mov	ax, word [si]
  2207 | 00000F25 | 85C0                      | 	test	ax, ax
  2208 | 00000F27 | 7418                      | 	je	L_yakc_60
  2209 | 00000F29 | 8B76FE                    | 	mov	si, word [bp-2]
  2210 | 00000F2C | 83C628                    | 	add	si, 40
  2211 | 00000F2F | 8B34                      | 	mov	si, word [si]
  2212 | 00000F31 | 83C61C                    | 	add	si, 28
  2213 | 00000F34 | 8B3E[4C14]                | 	mov	di, word [YKCurrTask]
  2214 | 00000F38 | 83C71C                    | 	add	di, 28
  2215 | 00000F3B | 8B05                      | 	mov	ax, word [di]
  2216 | 00000F3D | 3B04                      | 	cmp	ax, word [si]
  2217 | 00000F3F | 7FD1                      | 	jg	L_yakc_57
  2218 |          |                           | L_yakc_60:
  2219 |          |                           | L_yakc_59:
  2220 |          |                           | 	; >>>>> Line:	211
  2221 |          |                           | 	; >>>>> YKCurrTask->next = iter->next; 
  2222 | 00000F41 | 8B76FE                    | 	mov	si, word [bp-2]
  2223 | 00000F44 | 83C628                    | 	add	si, 40
  2224 | 00000F47 | 8B3E[4C14]                | 	mov	di, word [YKCurrTask]
  2225 | 00000F4B | 83C728                    | 	add	di, 40
  2226 | 00000F4E | 8B04                      | 	mov	ax, word [si]
  2227 | 00000F50 | 8905                      | 	mov	word [di], ax
  2228 |          |                           | 	; >>>>> Line:	212
  2229 |          |                           | 	; >>>>> if (iter->next) 
  2230 | 00000F52 | 8B76FE                    | 	mov	si, word [bp-2]
  2231 | 00000F55 | 83C628                    | 	add	si, 40
  2232 | 00000F58 | 8B04                      | 	mov	ax, word [si]
  2233 | 00000F5A | 85C0                      | 	test	ax, ax
  2234 | 00000F5C | 7410                      | 	je	L_yakc_61
  2235 |          |                           | 	; >>>>> Line:	213
  2236 |          |                           | 	; >>>>> iter->next->prev = YKCurrTask; 
  2237 | 00000F5E | 8B76FE                    | 	mov	si, word [bp-2]
  2238 | 00000F61 | 83C628                    | 	add	si, 40
  2239 | 00000F64 | 8B34                      | 	mov	si, word [si]
  2240 | 00000F66 | 83C626                    | 	add	si, 38
  2241 | 00000F69 | A1[4C14]                  | 	mov	ax, word [YKCurrTask]
  2242 | 00000F6C | 8904                      | 	mov	word [si], ax
  2243 |          |                           | L_yakc_61:
  2244 |          |                           | 	; >>>>> Line:	215
  2245 |          |                           | 	; >>>>> YKCurrTask->prev = iter; 
  2246 | 00000F6E | 8B36[4C14]                | 	mov	si, word [YKCurrTask]
  2247 | 00000F72 | 83C626                    | 	add	si, 38
  2248 | 00000F75 | 8B46FE                    | 	mov	ax, word [bp-2]
  2249 | 00000F78 | 8904                      | 	mov	word [si], ax
  2250 |          |                           | 	; >>>>> Line:	216
  2251 |          |                           | 	; >>>>> iter->next = YKCurrTask; 
  2252 | 00000F7A | 8B76FE                    | 	mov	si, word [bp-2]
  2253 | 00000F7D | 83C628                    | 	add	si, 40
  2254 | 00000F80 | A1[4C14]                  | 	mov	ax, word [YKCurrTask]
  2255 | 00000F83 | 8904                      | 	mov	word [si], ax
  2256 |          |                           | L_yakc_56:
  2257 |          |                           | L_yakc_54:
  2258 | 00000F85 | 89EC                      | 	mov	sp, bp
  2259 | 00000F87 | 5D                        | 	pop	bp
  2260 | 00000F88 | C3                        | 	ret
  2261 |          |                           | L_yakc_51:
  2262 | 00000F89 | 55                        | 	push	bp
  2263 | 00000F8A | 89E5                      | 	mov	bp, sp
  2264 | 00000F8C | 51                        | 	push	cx
  2265 | 00000F8D | E909FF                    | 	jmp	L_yakc_52
  2266 |          |                           | 	ALIGN	2
  2267 |          |                           | YKUnblockTask:
  2268 |          |                           | 	; >>>>> Line:	221
  2269 |          |                           | 	; >>>>> { 
  2270 | 00000F90 | EB7F                      | 	jmp	L_yakc_63
  2271 |          |                           | L_yakc_64:
  2272 |          |                           | 	; >>>>> Line:	224
  2273 |          |                           | 	; >>>>> temp = 
  2274 | 00000F92 | 8B7604                    | 	mov	si, word [bp+4]
  2275 | 00000F95 | 83C626                    | 	add	si, 38
  2276 | 00000F98 | 8B04                      | 	mov	ax, word [si]
  2277 | 00000F9A | 8946FE                    | 	mov	word [bp-2], ax
  2278 |          |                           | 	; >>>>> Line:	225
  2279 |          |                           | 	; >>>>> if ( temp ) temp->next = task->next; 
  2280 | 00000F9D | 8B46FE                    | 	mov	ax, word [bp-2]
  2281 | 00000FA0 | 85C0                      | 	test	ax, ax
  2282 | 00000FA2 | 7412                      | 	je	L_yakc_65
  2283 |          |                           | 	; >>>>> Line:	225
  2284 |          |                           | 	; >>>>> if ( temp ) temp->next = task->next; 
  2285 | 00000FA4 | 8B7604                    | 	mov	si, word [bp+4]
  2286 | 00000FA7 | 83C628                    | 	add	si, 40
  2287 | 00000FAA | 8B7EFE                    | 	mov	di, word [bp-2]
  2288 | 00000FAD | 83C728                    | 	add	di, 40
  2289 | 00000FB0 | 8B04                      | 	mov	ax, word [si]
  2290 | 00000FB2 | 8905                      | 	mov	word [di], ax
  2291 | 00000FB4 | EB0B                      | 	jmp	L_yakc_66
  2292 |          |                           | L_yakc_65:
  2293 |          |                           | 	; >>>>> Line:	226
  2294 |          |                           | 	; >>>>> else YKBlockList = task->next; 
  2295 | 00000FB6 | 8B7604                    | 	mov	si, word [bp+4]
  2296 | 00000FB9 | 83C628                    | 	add	si, 40
  2297 | 00000FBC | 8B04                      | 	mov	ax, word [si]
  2298 | 00000FBE | A3[4C13]                  | 	mov	word [YKBlockList], ax
  2299 |          |                           | L_yakc_66:
  2300 |          |                           | 	; >>>>> Line:	228
  2301 |          |                           | 	; >>>>> temp = task->next; 
  2302 | 00000FC1 | 8B7604                    | 	mov	si, word [bp+4]
  2303 | 00000FC4 | 83C628                    | 	add	si, 40
  2304 | 00000FC7 | 8B04                      | 	mov	ax, word [si]
  2305 | 00000FC9 | 8946FE                    | 	mov	word [bp-2], ax
  2306 |          |                           | 	; >>>>> Line:	229
  2307 |          |                           | 	; >>>>> if ( temp ) temp->prev = task->prev; 
  2308 | 00000FCC | 8B46FE                    | 	mov	ax, word [bp-2]
  2309 | 00000FCF | 85C0                      | 	test	ax, ax
  2310 | 00000FD1 | 7410                      | 	je	L_yakc_67
  2311 |          |                           | 	; >>>>> Line:	229
  2312 |          |                           | 	; >>>>> if ( temp ) temp->prev = task->prev; 
  2313 | 00000FD3 | 8B7604                    | 	mov	si, word [bp+4]
  2314 | 00000FD6 | 83C626                    | 	add	si, 38
  2315 | 00000FD9 | 8B7EFE                    | 	mov	di, word [bp-2]
  2316 | 00000FDC | 83C726                    | 	add	di, 38
  2317 | 00000FDF | 8B04                      | 	mov	ax, word [si]
  2318 | 00000FE1 | 8905                      | 	mov	word [di], ax
  2319 |          |                           | L_yakc_67:
  2320 |          |                           | 	; >>>>> Line:	231
  2321 |          |                           | 	; >>>>> task->prev = 0; 
  2322 | 00000FE3 | 8B7604                    | 	mov	si, word [bp+4]
  2323 | 00000FE6 | 83C626                    | 	add	si, 38
  2324 | 00000FE9 | C7040000                  | 	mov	word [si], 0
  2325 |          |                           | 	; >>>>> Line:	232
  2326 |          |                           | 	; >>>>> task->next = 0; 
  2327 | 00000FED | 8B7604                    | 	mov	si, word [bp+4]
  2328 | 00000FF0 | 83C628                    | 	add	si, 40
  2329 | 00000FF3 | C7040000                  | 	mov	word [si], 0
  2330 |          |                           | 	; >>>>> Line:	233
  2331 |          |                           | 	; >>>>> task->state = READY; 
  2332 | 00000FF7 | 8B7604                    | 	mov	si, word [bp+4]
  2333 | 00000FFA | 83C61E                    | 	add	si, 30
  2334 | 00000FFD | C7040000                  | 	mov	word [si], 0
  2335 |          |                           | 	; >>>>> Line:	234
  2336 |          |                           | 	; >>>>> YKAddReadyTask( task ); 
  2337 | 00001001 | FF7604                    | 	push	word [bp+4]
  2338 | 00001004 | E8F1FD                    | 	call	YKAddReadyTask
  2339 | 00001007 | 83C402                    | 	add	sp, 2
  2340 |          |                           | 	; >>>>> Line:	235
  2341 |          |                           | 	; >>>>> return temp; 
  2342 | 0000100A | 8B46FE                    | 	mov	ax, word [bp-2]
  2343 |          |                           | L_yakc_68:
  2344 | 0000100D | 89EC                      | 	mov	sp, bp
  2345 | 0000100F | 5D                        | 	pop	bp
  2346 | 00001010 | C3                        | 	ret
  2347 |          |                           | L_yakc_63:
  2348 | 00001011 | 55                        | 	push	bp
  2349 | 00001012 | 89E5                      | 	mov	bp, sp
  2350 | 00001014 | 51                        | 	push	cx
  2351 | 00001015 | E97AFF                    | 	jmp	L_yakc_64
  2352 |          |                           | 	ALIGN	2
  2353 |          |                           | YKBlockSEM2Ready:
  2354 |          |                           | 	; >>>>> Line:	238
  2355 |          |                           | 	; >>>>> void YKBlockSEM2Ready(YKSEM* semaphore){ 
  2356 | 00001018 | EB43                      | 	jmp	L_yakc_70
  2357 |          |                           | L_yakc_71:
  2358 |          |                           | 	; >>>>> Line:	240
  2359 |          |                           | 	; >>>>> current = YKBlockList; 
  2360 | 0000101A | A1[4C13]                  | 	mov	ax, word [YKBlockList]
  2361 | 0000101D | 8946FE                    | 	mov	word [bp-2], ax
  2362 |          |                           | 	; >>>>> Line:	242
  2363 |          |                           | 	; >>>>> while ( current ) 
  2364 | 00001020 | EB30                      | 	jmp	L_yakc_73
  2365 |          |                           | L_yakc_72:
  2366 |          |                           | 	; >>>>> Line:	244
  2367 |          |                           | 	; >>>>> if ( current->semaphore == semaphore ) 
  2368 | 00001022 | 8B76FE                    | 	mov	si, word [bp-2]
  2369 | 00001025 | 83C622                    | 	add	si, 34
  2370 | 00001028 | 8B4604                    | 	mov	ax, word [bp+4]
  2371 | 0000102B | 3B04                      | 	cmp	ax, word [si]
  2372 | 0000102D | 7518                      | 	jne	L_yakc_75
  2373 |          |                           | 	; >>>>> Line:	246
  2374 |          |                           | 	; >>>>> current->semaphore = 0; 
  2375 | 0000102F | 8B76FE                    | 	mov	si, word [bp-2]
  2376 | 00001032 | 83C622                    | 	add	si, 34
  2377 | 00001035 | C7040000                  | 	mov	word [si], 0
  2378 |          |                           | 	; >>>>> Line:	247
  2379 |          |                           | 	; >>>>> current = YKUnblockTask( current ); 
  2380 | 00001039 | FF76FE                    | 	push	word [bp-2]
  2381 | 0000103C | E851FF                    | 	call	YKUnblockTask
  2382 | 0000103F | 83C402                    | 	add	sp, 2
  2383 | 00001042 | 8946FE                    | 	mov	word [bp-2], ax
  2384 |          |                           | 	; >>>>> Line:	248
  2385 |          |                           | 	; >>>>> continue; 
  2386 | 00001045 | EB0B                      | 	jmp	L_yakc_73
  2387 |          |                           | L_yakc_75:
  2388 |          |                           | 	; >>>>> Line:	250
  2389 |          |                           | 	; >>>>> current = current- 
  2390 | 00001047 | 8B76FE                    | 	mov	si, word [bp-2]
  2391 | 0000104A | 83C628                    | 	add	si, 40
  2392 | 0000104D | 8B04                      | 	mov	ax, word [si]
  2393 | 0000104F | 8946FE                    | 	mov	word [bp-2], ax
  2394 |          |                           | L_yakc_73:
  2395 | 00001052 | 8B46FE                    | 	mov	ax, word [bp-2]
  2396 | 00001055 | 85C0                      | 	test	ax, ax
  2397 | 00001057 | 75C9                      | 	jne	L_yakc_72
  2398 |          |                           | L_yakc_74:
  2399 |          |                           | L_yakc_76:
  2400 |          |                           | 	; >>>>> Line:	253
  2401 |          |                           | 	; >>>>> return; 
  2402 | 00001059 | 89EC                      | 	mov	sp, bp
  2403 | 0000105B | 5D                        | 	pop	bp
  2404 | 0000105C | C3                        | 	ret
  2405 |          |                           | L_yakc_70:
  2406 | 0000105D | 55                        | 	push	bp
  2407 | 0000105E | 89E5                      | 	mov	bp, sp
  2408 | 00001060 | 51                        | 	push	cx
  2409 | 00001061 | EBB7                      | 	jmp	L_yakc_71
  2410 | 00001063 | 90                        | 	ALIGN	2
  2411 |          |                           | YKBlockQ2Ready:
  2412 |          |                           | 	; >>>>> Line:	256
  2413 |          |                           | 	; >>>>> void YKBlockQ2Ready(YKQ* queue){ 
  2414 | 00001064 | EB43                      | 	jmp	L_yakc_78
  2415 |          |                           | L_yakc_79:
  2416 |          |                           | 	; >>>>> Line:	258
  2417 |          |                           | 	; >>>>> current = YKBlockList; 
  2418 | 00001066 | A1[4C13]                  | 	mov	ax, word [YKBlockList]
  2419 | 00001069 | 8946FE                    | 	mov	word [bp-2], ax
  2420 |          |                           | 	; >>>>> Line:	260
  2421 |          |                           | 	; >>>>> while ( current ) 
  2422 | 0000106C | EB30                      | 	jmp	L_yakc_81
  2423 |          |                           | L_yakc_80:
  2424 |          |                           | 	; >>>>> Line:	262
  2425 |          |                           | 	; >>>>> if ( current->queue == queue ) 
  2426 | 0000106E | 8B76FE                    | 	mov	si, word [bp-2]
  2427 | 00001071 | 83C624                    | 	add	si, 36
  2428 | 00001074 | 8B4604                    | 	mov	ax, word [bp+4]
  2429 | 00001077 | 3B04                      | 	cmp	ax, word [si]
  2430 | 00001079 | 7518                      | 	jne	L_yakc_83
  2431 |          |                           | 	; >>>>> Line:	264
  2432 |          |                           | 	; >>>>> current->queue = 0; 
  2433 | 0000107B | 8B76FE                    | 	mov	si, word [bp-2]
  2434 | 0000107E | 83C624                    | 	add	si, 36
  2435 | 00001081 | C7040000                  | 	mov	word [si], 0
  2436 |          |                           | 	; >>>>> Line:	265
  2437 |          |                           | 	; >>>>> current = YKUnblockTask( current ); 
  2438 | 00001085 | FF76FE                    | 	push	word [bp-2]
  2439 | 00001088 | E805FF                    | 	call	YKUnblockTask
  2440 | 0000108B | 83C402                    | 	add	sp, 2
  2441 | 0000108E | 8946FE                    | 	mov	word [bp-2], ax
  2442 |          |                           | 	; >>>>> Line:	266
  2443 |          |                           | 	; >>>>> continue; 
  2444 | 00001091 | EB0B                      | 	jmp	L_yakc_81
  2445 |          |                           | L_yakc_83:
  2446 |          |                           | 	; >>>>> Line:	268
  2447 |          |                           | 	; >>>>> current = current->next; 
  2448 | 00001093 | 8B76FE                    | 	mov	si, word [bp-2]
  2449 | 00001096 | 83C628                    | 	add	si, 40
  2450 | 00001099 | 8B04                      | 	mov	ax, word [si]
  2451 | 0000109B | 8946FE                    | 	mov	word [bp-2], ax
  2452 |          |                           | L_yakc_81:
  2453 | 0000109E | 8B46FE                    | 	mov	ax, word [bp-2]
  2454 | 000010A1 | 85C0                      | 	test	ax, ax
  2455 | 000010A3 | 75C9                      | 	jne	L_yakc_80
  2456 |          |                           | L_yakc_82:
  2457 |          |                           | L_yakc_84:
  2458 |          |                           | 	; >>>>> Line:	270
  2459 |          |                           | 	; >>>>> return; 
  2460 | 000010A5 | 89EC                      | 	mov	sp, bp
  2461 | 000010A7 | 5D                        | 	pop	bp
  2462 | 000010A8 | C3                        | 	ret
  2463 |          |                           | L_yakc_78:
  2464 | 000010A9 | 55                        | 	push	bp
  2465 | 000010AA | 89E5                      | 	mov	bp, sp
  2466 | 000010AC | 51                        | 	push	cx
  2467 | 000010AD | EBB7                      | 	jmp	L_yakc_79
  2468 | 000010AF | 90                        | 	ALIGN	2
  2469 |          |                           | YKDelayTask:
  2470 |          |                           | 	; >>>>> Line:	273
  2471 |          |                           | 	; >>>>> void YKDelayTask(unsigned count) { 
  2472 | 000010B0 | EB27                      | 	jmp	L_yakc_86
  2473 |          |                           | L_yakc_87:
  2474 |          |                           | 	; >>>>> Line:	275
  2475 |          |                           | 	; >>>>> YKCurrTask->delay = count; 
  2476 | 000010B2 | 8B36[4C14]                | 	mov	si, word [YKCurrTask]
  2477 | 000010B6 | 83C620                    | 	add	si, 32
  2478 | 000010B9 | 8B4604                    | 	mov	ax, word [bp+4]
  2479 | 000010BC | 8904                      | 	mov	word [si], ax
  2480 |          |                           | 	; >>>>> Line:	276
  2481 |          |                           | 	; >>>>> YKCurrTask->state = DELAYED; 
  2482 | 000010BE | 8B36[4C14]                | 	mov	si, word [YKCurrTask]
  2483 | 000010C2 | 83C61E                    | 	add	si, 30
  2484 | 000010C5 | C7040100                  | 	mov	word [si], 1
  2485 |          |                           | 	; >>>>> Line:	279
  2486 |          |                           | 	; >>>>> YKEnterMutex(); 
  2487 | 000010C9 | E888FA                    | 	call	YKEnterMutex
  2488 |          |                           | 	; >>>>> Line:	280
  2489 |          |                           | 	; >>>>> YKBlockTask(); 
  2490 | 000010CC | E8C7FD                    | 	call	YKBlockTask
  2491 |          |                           | 	; >>>>> Line:	281
  2492 |          |                           | 	; >>>>> YKExitMutex(); 
  2493 | 000010CF | E884FA                    | 	call	YKExitMutex
  2494 |          |                           | 	; >>>>> Line:	284
  2495 |          |                           | 	; >>>>> YKScheduler(); 
  2496 | 000010D2 | E80BFD                    | 	call	YKScheduler
  2497 | 000010D5 | 89EC                      | 	mov	sp, bp
  2498 | 000010D7 | 5D                        | 	pop	bp
  2499 | 000010D8 | C3                        | 	ret
  2500 |          |                           | L_yakc_86:
  2501 | 000010D9 | 55                        | 	push	bp
  2502 | 000010DA | 89E5                      | 	mov	bp, sp
  2503 | 000010DC | EBD4                      | 	jmp	L_yakc_87
  2504 |          |                           | 	ALIGN	2
  2505 |          |                           | YKEnterISR:
  2506 |          |                           | 	; >>>>> Line:	287
  2507 |          |                           | 	; >>>>> void YKEnterISR(void) { 
  2508 | 000010DE | EB08                      | 	jmp	L_yakc_89
  2509 |          |                           | L_yakc_90:
  2510 |          |                           | 	; >>>>> Line:	288
  2511 |          |                           | 	; >>>>> ++YKISRDep 
  2512 | 000010E0 | FF06[4613]                | 	inc	word [YKISRDepth]
  2513 | 000010E4 | 89EC                      | 	mov	sp, bp
  2514 | 000010E6 | 5D                        | 	pop	bp
  2515 | 000010E7 | C3                        | 	ret
  2516 |          |                           | L_yakc_89:
  2517 | 000010E8 | 55                        | 	push	bp
  2518 | 000010E9 | 89E5                      | 	mov	bp, sp
  2519 | 000010EB | EBF3                      | 	jmp	L_yakc_90
  2520 | 000010ED | 90                        | 	ALIGN	2
  2521 |          |                           | YKExitISR:
  2522 |          |                           | 	; >>>>> Line:	290
  2523 |          |                           | 	; >>>>> void YKExitISR(void) { 
  2524 | 000010EE | EB12                      | 	jmp	L_yakc_92
  2525 |          |                           | L_yakc_93:
  2526 |          |                           | 	; >>>>> Line:	291
  2527 |          |                           | 	; >>>>> --YKISRDepth; 
  2528 | 000010F0 | FF0E[4613]                | 	dec	word [YKISRDepth]
  2529 |          |                           | 	; >>>>> Line:	296
  2530 |          |                           | 	; >>>>> if (YKISRDepth == 0) { 
  2531 | 000010F4 | A1[4613]                  | 	mov	ax, word [YKISRDepth]
  2532 | 000010F7 | 85C0                      | 	test	ax, ax
  2533 | 000010F9 | 7503                      | 	jne	L_yakc_94
  2534 |          |                           | 	; >>>>> Line:	297
  2535 |          |                           | 	; >>>>> YKScheduler(); 
  2536 | 000010FB | E8E2FC                    | 	call	YKScheduler
  2537 |          |                           | L_yakc_94:
  2538 | 000010FE | 89EC                      | 	mov	sp, bp
  2539 | 00001100 | 5D                        | 	pop	bp
  2540 | 00001101 | C3                        | 	ret
  2541 |          |                           | L_yakc_92:
  2542 | 00001102 | 55                        | 	push	bp
  2543 | 00001103 | 89E5                      | 	mov	bp, sp
  2544 | 00001105 | EBE9                      | 	jmp	L_yakc_93
  2545 | 00001107 | 90                        | 	ALIGN	2
  2546 |          |                           | YKSemCreate:
  2547 |          |                           | 	; >>>>> Line:	301
  2548 |          |                           | 	; >>>>> YKSEM* YKSemCreate(int initialValue) { 
  2549 | 00001108 | EB1B                      | 	jmp	L_yakc_96
  2550 |          |                           | L_yakc_97:
  2551 |          |                           | 	; >>>>> Line:	303
  2552 |          |                           | 	; >>>>> YKAvailSEMList->value = initialValue; 
  2553 | 0000110A | 8B36[5616]                | 	mov	si, word [YKAvailSEMList]
  2554 | 0000110E | 8B4604                    | 	mov	ax, word [bp+4]
  2555 | 00001111 | 8904                      | 	mov	word [si], ax
  2556 |          |                           | 	; >>>>> Line:	304
  2557 |          |                           | 	; >>>>> return_val = YKAvailSEMList; 
  2558 | 00001113 | A1[5616]                  | 	mov	ax, word [YKAvailSEMList]
  2559 | 00001116 | 8946FE                    | 	mov	word [bp-2], ax
  2560 |          |                           | 	; >>>>> Line:	305
  2561 |          |                           | 	; >>>>> ++YKAvailSEMList; 
  2562 | 00001119 | 8306[5616]02              | 	add	word [YKAvailSEMList], 2
  2563 |          |                           | 	; >>>>> Line:	306
  2564 |          |                           | 	; >>>>> return return_val; 
  2565 | 0000111E | 8B46FE                    | 	mov	ax, word [bp-2]
  2566 |          |                           | L_yakc_98:
  2567 | 00001121 | 89EC                      | 	mov	sp, bp
  2568 | 00001123 | 5D                        | 	pop	bp
  2569 | 00001124 | C3                        | 	ret
  2570 |          |                           | L_yakc_96:
  2571 | 00001125 | 55                        | 	push	bp
  2572 | 00001126 | 89E5                      | 	mov	bp, sp
  2573 | 00001128 | 51                        | 	push	cx
  2574 | 00001129 | EBDF                      | 	jmp	L_yakc_97
  2575 | 0000112B | 90                        | 	ALIGN	2
  2576 |          |                           | YKSemPend:
  2577 |          |                           | 	; >>>>> Line:	309
  2578 |          |                           | 	; >>>>> void YKSemPend(YKSEM *semaphore) { 
  2579 | 0000112C | EB4C                      | 	jmp	L_yakc_100
  2580 |          |                           | L_yakc_101:
  2581 |          |                           | 	; >>>>> Line:	311
  2582 |          |                           | 	; >>>>> YKEnterMutex(); 
  2583 | 0000112E | E823FA                    | 	call	YKEnterMutex
  2584 |          |                           | 	; >>>>> Line:	314
  2585 |          |                           | 	; >>>>> available = semaphore->value > 0 ? 1 : 0; 
  2586 | 00001131 | 8B7604                    | 	mov	si, word [bp+4]
  2587 | 00001134 | 833C00                    | 	cmp	word [si], 0
  2588 | 00001137 | 7E05                      | 	jle	L_yakc_102
  2589 | 00001139 | B80100                    | 	mov	ax, 1
  2590 | 0000113C | EB02                      | 	jmp	L_yakc_103
  2591 |          |                           | L_yakc_102:
  2592 | 0000113E | 31C0                      | 	xor	ax, ax
  2593 |          |                           | L_yakc_103:
  2594 | 00001140 | 8946FE                    | 	mov	word [bp-2], ax
  2595 |          |                           | 	; >>>>> Line:	315
  2596 |          |                           | 	; >>>>> --(semaphore->value); 
  2597 | 00001143 | 8B7604                    | 	mov	si, word [bp+4]
  2598 | 00001146 | FF0C                      | 	dec	word [si]
  2599 |          |                           | 	; >>>>> Line:	318
  2600 |          |                           | 	; >>>>> if (!available) { 
  2601 | 00001148 | 8B46FE                    | 	mov	ax, word [bp-2]
  2602 | 0000114B | 85C0                      | 	test	ax, ax
  2603 | 0000114D | 7521                      | 	jne	L_yakc_104
  2604 |          |                           | 	; >>>>> Line:	319
  2605 |          |                           | 	; >>>>> YKCurrTask->state = SEMAPHORE; 
  2606 | 0000114F | 8B36[4C14]                | 	mov	si, word [YKCurrTask]
  2607 | 00001153 | 83C61E                    | 	add	si, 30
  2608 | 00001156 | C7040200                  | 	mov	word [si], 2
  2609 |          |                           | 	; >>>>> Line:	320
  2610 |          |                           | 	; >>>>>  
  2611 | 0000115A | 8B36[4C14]                | 	mov	si, word [YKCurrTask]
  2612 | 0000115E | 83C622                    | 	add	si, 34
  2613 | 00001161 | 8B4604                    | 	mov	ax, word [bp+4]
  2614 | 00001164 | 8904                      | 	mov	word [si], ax
  2615 |          |                           | 	; >>>>> Line:	321
  2616 |          |                           | 	; >>>>> YKBlockTask(YKCurrTask); 
  2617 | 00001166 | FF36[4C14]                | 	push	word [YKCurrTask]
  2618 | 0000116A | E829FD                    | 	call	YKBlockTask
  2619 | 0000116D | 83C402                    | 	add	sp, 2
  2620 |          |                           | L_yakc_104:
  2621 |          |                           | 	; >>>>> Line:	324
  2622 |          |                           | 	; >>>>> YKExitMutex(); 
  2623 | 00001170 | E8E3F9                    | 	call	YKExitMutex
  2624 |          |                           | 	; >>>>> Line:	328
  2625 |          |                           | 	; >>>>> YKScheduler(); 
  2626 | 00001173 | E86AFC                    | 	call	YKScheduler
  2627 | 00001176 | 89EC                      | 	mov	sp, bp
  2628 | 00001178 | 5D                        | 	pop	bp
  2629 | 00001179 | C3                        | 	ret
  2630 |          |                           | L_yakc_100:
  2631 | 0000117A | 55                        | 	push	bp
  2632 | 0000117B | 89E5                      | 	mov	bp, sp
  2633 | 0000117D | 51                        | 	push	cx
  2634 | 0000117E | EBAE                      | 	jmp	L_yakc_101
  2635 |          |                           | 	ALIGN	2
  2636 |          |                           | YKSemPost:
  2637 |          |                           | 	; >>>>> Line:	331
  2638 |          |                           | 	; >>>>> void YKSemPost(YKSEM *semaphore) { 
  2639 | 00001180 | EB36                      | 	jmp	L_yakc_106
  2640 |          |                           | L_yakc_107:
  2641 |          |                           | 	; >>>>> Line:	332
  2642 |          |                           | 	; >>>>> YKEnterMutex(); 
  2643 | 00001182 | E8CFF9                    | 	call	YKEnterMutex
  2644 |          |                           | 	; >>>>> Line:	333
  2645 |          |                           | 	; >>>>> ++(semaphore->value); 
  2646 | 00001185 | 8B7604                    | 	mov	si, word [bp+4]
  2647 | 00001188 | FF04                      | 	inc	word [si]
  2648 |          |                           | 	; >>>>> Line:	334
  2649 |          |                           | 	; >>>>> if (semaphore->value > 1) 
  2650 | 0000118A | 8B7604                    | 	mov	si, word [bp+4]
  2651 | 0000118D | 833C01                    | 	cmp	word [si], 1
  2652 | 00001190 | 7E04                      | 	jle	L_yakc_108
  2653 |          |                           | 	; >>>>> Line:	335
  2654 |          |                           | 	; >>>>> semaphore->value = 1; 
  2655 | 00001192 | C7040100                  | 	mov	word [si], 1
  2656 |          |                           | L_yakc_108:
  2657 |          |                           | 	; >>>>> Line:	337
  2658 |          |                           | 	; >>>>> if (semaphore->value < 1) { 
  2659 | 00001196 | 8B7604                    | 	mov	si, word [bp+4]
  2660 | 00001199 | 833C01                    | 	cmp	word [si], 1
  2661 | 0000119C | 7D09                      | 	jge	L_yakc_109
  2662 |          |                           | 	; >>>>> Line:	338
  2663 |          |                           | 	; >>>>> YKBlockSEM2Ready(semaphore); 
  2664 | 0000119E | FF7604                    | 	push	word [bp+4]
  2665 | 000011A1 | E874FE                    | 	call	YKBlockSEM2Ready
  2666 | 000011A4 | 83C402                    | 	add	sp, 2
  2667 |          |                           | L_yakc_109:
  2668 |          |                           | 	; >>>>> Line:	342
  2669 |          |                           | 	; >>>>> if (YKISRDepth == 0) 
  2670 | 000011A7 | A1[4613]                  | 	mov	ax, word [YKISRDepth]
  2671 | 000011AA | 85C0                      | 	test	ax, ax
  2672 | 000011AC | 7503                      | 	jne	L_yakc_110
  2673 |          |                           | 	; >>>>> Line:	343
  2674 |          |                           | 	; >>>>> YKScheduler(); 
  2675 | 000011AE | E82FFC                    | 	call	YKScheduler
  2676 |          |                           | L_yakc_110:
  2677 |          |                           | 	; >>>>> Line:	344
  2678 |          |                           | 	; >>>>> YKExitMutex(); 
  2679 | 000011B1 | E8A2F9                    | 	call	YKExitMutex
  2680 | 000011B4 | 89EC                      | 	mov	sp, bp
  2681 | 000011B6 | 5D                        | 	pop	bp
  2682 | 000011B7 | C3                        | 	ret
  2683 |          |                           | L_yakc_106:
  2684 | 000011B8 | 55                        | 	push	bp
  2685 | 000011B9 | 89E5                      | 	mov	bp, sp
  2686 | 000011BB | EBC5                      | 	jmp	L_yakc_107
  2687 | 000011BD | 90                        | 	ALIGN	2
  2688 |          |                           | YKQCreate:
  2689 |          |                           | 	; >>>>> Line:	347
  2690 |          |                           | 	; >>>>> YKQ *YKQCreate(void **start, unsigned size) { 
  2691 | 000011BE | EB48                      | 	jmp	L_yakc_112
  2692 |          |                           | L_yakc_113:
  2693 |          |                           | 	; >>>>> Line:	350
  2694 |          |                           | 	; >>>>> return_val = YKQAvailQList 
  2695 | 000011C0 | A1[6216]                  | 	mov	ax, word [YKQAvailQList]
  2696 | 000011C3 | 8946FE                    | 	mov	word [bp-2], ax
  2697 |          |                           | 	; >>>>> Line:	353
  2698 |          |                           | 	; >>>>> YKQAvailQList->base_addr = start; 
  2699 | 000011C6 | 8B36[6216]                | 	mov	si, word [YKQAvailQList]
  2700 | 000011CA | 8B4604                    | 	mov	ax, word [bp+4]
  2701 | 000011CD | 8904                      | 	mov	word [si], ax
  2702 |          |                           | 	; >>>>> Line:	354
  2703 |          |                           | 	; >>>>> YKQAvailQList->max_length = size; 
  2704 | 000011CF | 8B36[6216]                | 	mov	si, word [YKQAvailQList]
  2705 | 000011D3 | 83C602                    | 	add	si, 2
  2706 | 000011D6 | 8B4606                    | 	mov	ax, word [bp+6]
  2707 | 000011D9 | 8904                      | 	mov	word [si], ax
  2708 |          |                           | 	; >>>>> Line:	355
  2709 |          |                           | 	; >>>>> YKQAvailQList->head = 0; 
  2710 | 000011DB | 8B36[6216]                | 	mov	si, word [YKQAvailQList]
  2711 | 000011DF | 83C604                    | 	add	si, 4
  2712 | 000011E2 | C7040000                  | 	mov	word [si], 0
  2713 |          |                           | 	; >>>>> Line:	356
  2714 |          |                           | 	; >>>>> YKQAvailQList->tail = 0; 
  2715 | 000011E6 | 8B36[6216]                | 	mov	si, word [YKQAvailQList]
  2716 | 000011EA | 83C606                    | 	add	si, 6
  2717 | 000011ED | C7040000                  | 	mov	word [si], 0
  2718 |          |                           | 	; >>>>> Line:	357
  2719 |          |                           | 	; >>>>> YKQAvailQList->size = 0; 
  2720 | 000011F1 | 8B36[6216]                | 	mov	si, word [YKQAvailQList]
  2721 | 000011F5 | 83C608                    | 	add	si, 8
  2722 | 000011F8 | C7040000                  | 	mov	word [si], 0
  2723 |          |                           | 	; >>>>> Line:	358
  2724 |          |                           | 	; >>>>> ++YKQAvailQList; 
  2725 | 000011FC | 8306[6216]0A              | 	add	word [YKQAvailQList], 10
  2726 |          |                           | 	; >>>>> Line:	359
  2727 |          |                           | 	; >>>>> return return_val; 
  2728 | 00001201 | 8B46FE                    | 	mov	ax, word [bp-2]
  2729 |          |                           | L_yakc_114:
  2730 | 00001204 | 89EC                      | 	mov	sp, bp
  2731 | 00001206 | 5D                        | 	pop	bp
  2732 | 00001207 | C3                        | 	ret
  2733 |          |                           | L_yakc_112:
  2734 | 00001208 | 55                        | 	push	bp
  2735 | 00001209 | 89E5                      | 	mov	bp, sp
  2736 | 0000120B | 51                        | 	push	cx
  2737 | 0000120C | EBB2                      | 	jmp	L_yakc_113
  2738 |          |                           | 	ALIGN	2
  2739 |          |                           | YKQPend:
  2740 |          |                           | 	; >>>>> Line:	362
  2741 |          |                           | 	; >>>>> void *YKQPend(YKQ *queue) { 
  2742 | 0000120E | E98A00                    | 	jmp	L_yakc_116
  2743 |          |                           | L_yakc_117:
  2744 |          |                           | 	; >>>>> Line:	364
  2745 |          |                           | 	; >>>>> YKEnterMutex(); 
  2746 | 00001211 | E840F9                    | 	call	YKEnterMutex
  2747 |          |                           | 	; >>>>> Line:	366
  2748 |          |                           | 	; >>>>> if (queue->size == 0) { 
  2749 | 00001214 | 8B7604                    | 	mov	si, word [bp+4]
  2750 | 00001217 | 83C608                    | 	add	si, 8
  2751 | 0000121A | 8B04                      | 	mov	ax, word [si]
  2752 | 0000121C | 85C0                      | 	test	ax, ax
  2753 | 0000121E | 7527                      | 	jne	L_yakc_118
  2754 |          |                           | 	; >>>>> Line:	367
  2755 |          |                           | 	; >>>>> YKCurrTask->state = QUEUE; 
  2756 | 00001220 | 8B36[4C14]                | 	mov	si, word [YKCurrTask]
  2757 | 00001224 | 83C61E                    | 	add	si, 30
  2758 | 00001227 | C7040300                  | 	mov	word [si], 3
  2759 |          |                           | 	; >>>>> Line:	368
  2760 |          |                           | 	; >>>>> YKCurrTask->queue = queue; 
  2761 | 0000122B | 8B36[4C14]                | 	mov	si, word [YKCurrTask]
  2762 | 0000122F | 83C624                    | 	add	si, 36
  2763 | 00001232 | 8B4604                    | 	mov	ax, word [bp+4]
  2764 | 00001235 | 8904                      | 	mov	word [si], ax
  2765 |          |                           | 	; >>>>> Line:	369
  2766 |          |                           | 	; >>>>> YKBlockTask(YKCurrTask); 
  2767 | 00001237 | FF36[4C14]                | 	push	word [YKCurrTask]
  2768 | 0000123B | E858FC                    | 	call	YKBlockTask
  2769 | 0000123E | 83C402                    | 	add	sp, 2
  2770 |          |                           | 	; >>>>> Line:	370
  2771 |          |                           | 	; >>>>> YKExitMutex(); 
  2772 | 00001241 | E812F9                    | 	call	YKExitMutex
  2773 |          |                           | 	; >>>>> Line:	371
  2774 |          |                           | 	; >>>>> YKScheduler(); 
  2775 | 00001244 | E899FB                    | 	call	YKScheduler
  2776 |          |                           | L_yakc_118:
  2777 |          |                           | 	; >>>>> Line:	374
  2778 |          |                           | 	; >>>>> YKEnterMutex(); 
  2779 | 00001247 | E80AF9                    | 	call	YKEnterMutex
  2780 |          |                           | 	; >>>>> Line:	375
  2781 |          |                           | 	; >>>>> --(queue->size); 
  2782 | 0000124A | 8B7604                    | 	mov	si, word [bp+4]
  2783 | 0000124D | 83C608                    | 	add	si, 8
  2784 | 00001250 | FF0C                      | 	dec	word [si]
  2785 |          |                           | 	; >>>>> Line:	376
  2786 |          |                           | 	; >>>>>  
  2787 | 00001252 | 8B7604                    | 	mov	si, word [bp+4]
  2788 | 00001255 | 83C604                    | 	add	si, 4
  2789 | 00001258 | 8B04                      | 	mov	ax, word [si]
  2790 | 0000125A | D1E0                      | 	shl	ax, 1
  2791 | 0000125C | 89C6                      | 	mov	si, ax
  2792 | 0000125E | 8B7E04                    | 	mov	di, word [bp+4]
  2793 | 00001261 | 0335                      | 	add	si, word [di]
  2794 | 00001263 | 8B04                      | 	mov	ax, word [si]
  2795 | 00001265 | 8946FE                    | 	mov	word [bp-2], ax
  2796 |          |                           | 	; >>>>> Line:	377
  2797 |          |                           | 	; >>>>> if ( queue->head == (queue->max_length - 1) ) 
  2798 | 00001268 | 8B7604                    | 	mov	si, word [bp+4]
  2799 | 0000126B | 83C602                    | 	add	si, 2
  2800 | 0000126E | 8B04                      | 	mov	ax, word [si]
  2801 | 00001270 | 48                        | 	dec	ax
  2802 | 00001271 | 8B7604                    | 	mov	si, word [bp+4]
  2803 | 00001274 | 83C604                    | 	add	si, 4
  2804 | 00001277 | 8B14                      | 	mov	dx, word [si]
  2805 | 00001279 | 39C2                      | 	cmp	dx, ax
  2806 | 0000127B | 750C                      | 	jne	L_yakc_119
  2807 |          |                           | 	; >>>>> Line:	378
  2808 |          |                           | 	; >>>>> queue->head = 0; 
  2809 | 0000127D | 8B7604                    | 	mov	si, word [bp+4]
  2810 | 00001280 | 83C604                    | 	add	si, 4
  2811 | 00001283 | C7040000                  | 	mov	word [si], 0
  2812 | 00001287 | EB08                      | 	jmp	L_yakc_120
  2813 |          |                           | L_yakc_119:
  2814 |          |                           | 	; >>>>> Line:	380
  2815 |          |                           | 	; >>>>> ++(queue->head); 
  2816 | 00001289 | 8B7604                    | 	mov	si, word [bp+4]
  2817 | 0000128C | 83C604                    | 	add	si, 4
  2818 | 0000128F | FF04                      | 	inc	word [si]
  2819 |          |                           | L_yakc_120:
  2820 |          |                           | 	; >>>>> Line:	381
  2821 |          |                           | 	; >>>>> YKExitMutex(); 
  2822 | 00001291 | E8C2F8                    | 	call	YKExitMutex
  2823 |          |                           | 	; >>>>> Line:	382
  2824 |          |                           | 	; >>>>> return return_data; 
  2825 | 00001294 | 8B46FE                    | 	mov	ax, word [bp-2]
  2826 |          |                           | L_yakc_121:
  2827 | 00001297 | 89EC                      | 	mov	sp, bp
  2828 | 00001299 | 5D                        | 	pop	bp
  2829 | 0000129A | C3                        | 	ret
  2830 |          |                           | L_yakc_116:
  2831 | 0000129B | 55                        | 	push	bp
  2832 | 0000129C | 89E5                      | 	mov	bp, sp
  2833 | 0000129E | 51                        | 	push	cx
  2834 | 0000129F | E96FFF                    | 	jmp	L_yakc_117
  2835 |          |                           | 	ALIGN	2
  2836 |          |                           | YKQPost:
  2837 |          |                           | 	; >>>>> Line:	385
  2838 |          |                           | 	; >>>>> int YKQPost(YKQ *queue, void *msg) { 
  2839 | 000012A2 | E99300                    | 	jmp	L_yakc_123
  2840 |          |                           | L_yakc_124:
  2841 |          |                           | 	; >>>>> Line:	388
  2842 |          |                           | 	; >>>>> YKEnterMutex(); 
  2843 | 000012A5 | E8ACF8                    | 	call	YKEnterMutex
  2844 |          |                           | 	; >>>>> Line:	389
  2845 |          |                           | 	; >>>>> if (queue->size != queue->max_length ) { 
  2846 | 000012A8 | 8B7604                    | 	mov	si, word [bp+4]
  2847 | 000012AB | 83C608                    | 	add	si, 8
  2848 | 000012AE | 8B7E04                    | 	mov	di, word [bp+4]
  2849 | 000012B1 | 83C702                    | 	add	di, 2
  2850 | 000012B4 | 8B05                      | 	mov	ax, word [di]
  2851 | 000012B6 | 3B04                      | 	cmp	ax, word [si]
  2852 | 000012B8 | 746F                      | 	je	L_yakc_125
  2853 |          |                           | 	; >>>>> Line:	390
  2854 |          |                           | 	; >>>>> ++(queue->size); 
  2855 | 000012BA | 8B7604                    | 	mov	si, word [bp+4]
  2856 | 000012BD | 83C608                    | 	add	si, 8
  2857 | 000012C0 | FF04                      | 	inc	word [si]
  2858 |          |                           | 	; >>>>> Line:	391
  2859 |          |                           | 	; >>>>> queue->base_addr[queue->tail] = msg; 
  2860 | 000012C2 | 8B7604                    | 	mov	si, word [bp+4]
  2861 | 000012C5 | 83C606                    | 	add	si, 6
  2862 | 000012C8 | 8B04                      | 	mov	ax, word [si]
  2863 | 000012CA | D1E0                      | 	shl	ax, 1
  2864 | 000012CC | 89C6                      | 	mov	si, ax
  2865 | 000012CE | 8B7E04                    | 	mov	di, word [bp+4]
  2866 | 000012D1 | 0335                      | 	add	si, word [di]
  2867 | 000012D3 | 8B4606                    | 	mov	ax, word [bp+6]
  2868 | 000012D6 | 8904                      | 	mov	word [si], ax
  2869 |          |                           | 	; >>>>> Line:	393
  2870 |          |                           | 	; >>>>> if ( queue->tail == (queue->max_length - 1) ) 
  2871 | 000012D8 | 8B7604                    | 	mov	si, word [bp+4]
  2872 | 000012DB | 83C602                    | 	add	si, 2
  2873 | 000012DE | 8B04                      | 	mov	ax, word [si]
  2874 | 000012E0 | 48                        | 	dec	ax
  2875 | 000012E1 | 8B7604                    | 	mov	si, word [bp+4]
  2876 | 000012E4 | 83C606                    | 	add	si, 6
  2877 | 000012E7 | 8B14                      | 	mov	dx, word [si]
  2878 | 000012E9 | 39C2                      | 	cmp	dx, ax
  2879 | 000012EB | 750C                      | 	jne	L_yakc_126
  2880 |          |                           | 	; >>>>> Line:	394
  2881 |          |                           | 	; >>>>> queue->tail = 0; 
  2882 | 000012ED | 8B7604                    | 	mov	si, word [bp+4]
  2883 | 000012F0 | 83C606                    | 	add	si, 6
  2884 | 000012F3 | C7040000                  | 	mov	word [si], 0
  2885 | 000012F7 | EB08                      | 	jmp	L_yakc_127
  2886 |          |                           | L_yakc_126:
  2887 |          |                           | 	; >>>>> Line:	396
  2888 |          |                           | 	; >>>>> ++(qu 
  2889 | 000012F9 | 8B7604                    | 	mov	si, word [bp+4]
  2890 | 000012FC | 83C606                    | 	add	si, 6
  2891 | 000012FF | FF04                      | 	inc	word [si]
  2892 |          |                           | L_yakc_127:
  2893 |          |                           | 	; >>>>> Line:	398
  2894 |          |                           | 	; >>>>> if (queue->size == 1) { 
  2895 | 00001301 | 8B7604                    | 	mov	si, word [bp+4]
  2896 | 00001304 | 83C608                    | 	add	si, 8
  2897 | 00001307 | 833C01                    | 	cmp	word [si], 1
  2898 | 0000130A | 7516                      | 	jne	L_yakc_128
  2899 |          |                           | 	; >>>>> Line:	399
  2900 |          |                           | 	; >>>>> YKBlockQ2Ready(queue); 
  2901 | 0000130C | FF7604                    | 	push	word [bp+4]
  2902 | 0000130F | E852FD                    | 	call	YKBlockQ2Ready
  2903 | 00001312 | 83C402                    | 	add	sp, 2
  2904 |          |                           | 	; >>>>> Line:	400
  2905 |          |                           | 	; >>>>> if (YKISRDepth == 0) { 
  2906 | 00001315 | A1[4613]                  | 	mov	ax, word [YKISRDepth]
  2907 | 00001318 | 85C0                      | 	test	ax, ax
  2908 | 0000131A | 7506                      | 	jne	L_yakc_129
  2909 |          |                           | 	; >>>>> Line:	401
  2910 |          |                           | 	; >>>>> YKExitMutex(); 
  2911 | 0000131C | E837F8                    | 	call	YKExitMutex
  2912 |          |                           | 	; >>>>> Line:	402
  2913 |          |                           | 	; >>>>> YKScheduler(); 
  2914 | 0000131F | E8BEFA                    | 	call	YKScheduler
  2915 |          |                           | L_yakc_129:
  2916 |          |                           | L_yakc_128:
  2917 |          |                           | 	; >>>>> Line:	405
  2918 |          |                           | 	; >>>>> return_value = 1; 
  2919 | 00001322 | C746FE0100                | 	mov	word [bp-2], 1
  2920 | 00001327 | EB05                      | 	jmp	L_yakc_130
  2921 |          |                           | L_yakc_125:
  2922 |          |                           | 	; >>>>> Line:	408
  2923 |          |                           | 	; >>>>> return_value = 0; 
  2924 | 00001329 | C746FE0000                | 	mov	word [bp-2], 0
  2925 |          |                           | L_yakc_130:
  2926 |          |                           | 	; >>>>> Line:	410
  2927 |          |                           | 	; >>>>> YKExitMutex(); 
  2928 | 0000132E | E825F8                    | 	call	YKExitMutex
  2929 |          |                           | 	; >>>>> Line:	411
  2930 |          |                           | 	; >>>>> return return_value; 
  2931 | 00001331 | 8B46FE                    | 	mov	ax, word [bp-2]
  2932 |          |                           | L_yakc_131:
  2933 | 00001334 | 89EC                      | 	mov	sp, bp
  2934 | 00001336 | 5D                        | 	pop	bp
  2935 | 00001337 | C3                        | 	ret
  2936 |          |                           | L_yakc_123:
  2937 | 00001338 | 55                        | 	push	bp
  2938 | 00001339 | 89E5                      | 	mov	bp, sp
  2939 | 0000133B | 51                        | 	push	cx
  2940 | 0000133C | E966FF                    | 	jmp	L_yakc_124
  2941 | 0000133F | 90                        | 	ALIGN	2
  2942 |          |                           | YKCtxSwCount:
  2943 | 00001340 | 00<rept>                  | 	TIMES	2 db 0
  2944 |          |                           | YKIdleCount:
  2945 | 00001342 | 00<rept>                  | 	TIMES	2 db 0
  2946 |          |                           | YKTickNum:
  2947 | 00001344 | 00<rept>                  | 	TIMES	2 db 0
  2948 |          |                           | YKISRDepth:
  2949 | 00001346 | 00<rept>                  | 	TIMES	2 db 0
  2950 |          |                           | YKRunFlag:
  2951 | 00001348 | 00<rept>                  | 	TIMES	2 db 0
  2952 |          |                           | YKRdyList:
  2953 | 0000134A | 00<rept>                  | 	TIMES	2 db 0
  2954 |          |                           | YKBlockList:
  2955 | 0000134C | 00<rept>                  | 	TIMES	2 db 0
  2956 |          |                           | YKAvailTCBList:
  2957 | 0000134E | 00<rept>                  | 	TIMES	2 db 0
  2958 |          |                           | YKTCBArray:
  2959 | 00001350 | 00<rept>                  | 	TIMES	252 db 0
  2960 |          |                           | YKCurrTask:
  2961 | 0000144C | 00<rept>                  | 	TIMES	2 db 0
  2962 |          |                           | YKIdleTaskStack:
  2963 | 0000144E | 00<rept>                  | 	TIMES	512 db 0
  2964 |          |                           | YKSEMArray:
  2965 | 0000164E | 00<rept>                  | 	TIMES	8 db 0
  2966 |          |                           | YKAvailSEMList:
  2967 | 00001656 | 00<rept>                  | 	TIMES	2 db 0
  2968 |          |                           | YKQArray:
  2969 | 00001658 | 00<rept>                  | 	TIMES	10 db 0
  2970 |          |                           | YKQAvailQList:
  2971 | 00001662 | 00<rept>                  | 	TIMES	2 db 0
  2972 |          |                           | YKErrorFlag:
  2973 | 00001664 | 00<rept>                  | 	TIMES	2 db 0
  2974 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from lab6app.i
  2975 |          |                           | 	CPU	8086
  2976 |          |                           | 	ALIGN	2
  2977 | 00001666 | E97703                    | 	jmp	main	; Jump to program start
  2978 |          |                           | L_lab6app_5:
  2979 | 00001669 | 4D61783A2000              | 	DB	"Max: ",0
  2980 |          |                           | L_lab6app_4:
  2981 | 0000166F | 4D696E3A2000              | 	DB	"Min: ",0
  2982 |          |                           | L_lab6app_3:
  2983 | 00001675 | 0900                      | 	DB	0x9,0
  2984 |          |                           | L_lab6app_2:
  2985 | 00001677 | 5469636B733A2000          | 	DB	"Ticks: ",0
  2986 |          |                           | L_lab6app_1:
  2987 | 0000167F | 212044726F70706564-       | 	DB	"! Dropped msgs: tick ",0
  2988 | 00001688 | 206D7367733A207469-       | ...
  2989 | 00001691 | 636B2000                  | ...
  2990 | 00001695 | 90                        | 	ALIGN	2
  2991 |          |                           | ATask:
  2992 |          |                           | 	; >>>>> Line:	26
  2993 |          |                           | 	; >>>>> { 
  2994 | 00001696 | E92101                    | 	jmp	L_lab6app_6
  2995 |          |                           | L_lab6app_7:
  2996 |          |                           | 	; >>>>> Line:	30
  2997 |          |                           | 	; >>>>> min = 100; 
  2998 | 00001699 | C746FC6400                | 	mov	word [bp-4], 100
  2999 |          |                           | 	; >>>>> Line:	31
  3000 |          |                           | 	; >>>>> max = 0; 
  3001 | 0000169E | C746FA0000                | 	mov	word [bp-6], 0
  3002 |          |                           | 	; >>>>> Line:	32
  3003 |          |                           | 	; >>>>> count = 0; 
  3004 | 000016A3 | C746F80000                | 	mov	word [bp-8], 0
  3005 |          |                           | 	; >>>>> Line:	34
  3006 |          |                           | 	; >>>>> while (1) 
  3007 | 000016A8 | E90801                    | 	jmp	L_lab6app_9
  3008 |          |                           | L_lab6app_8:
  3009 |          |                           | 	; >>>>> Line:	36
  3010 |          |                           | 	; >>>>> tmp = (struct msg *) YKQPend(MsgQPtr); 
  3011 | 000016AB | FF36[8026]                | 	push	word [MsgQPtr]
  3012 | 000016AF | E85CFB                    | 	call	YKQPend
  3013 | 000016B2 | 83C402                    | 	add	sp, 2
  3014 | 000016B5 | 8946FE                    | 	mov	word [bp-2], ax
  3015 |          |                           | 	; >>>>> Line:	39
  3016 |          |                           | 	; >>>>> if (tmp->tick != count+1) 
  3017 | 000016B8 | 8B46F8                    | 	mov	ax, word [bp-8]
  3018 | 000016BB | 40                        | 	inc	ax
  3019 | 000016BC | 8B76FE                    | 	mov	si, word [bp-2]
  3020 | 000016BF | 8B14                      | 	mov	dx, word [si]
  3021 | 000016C1 | 39C2                      | 	cmp	dx, ax
  3022 | 000016C3 | 7452                      | 	je	L_lab6app_11
  3023 |          |                           | 	; >>>>> Line:	41
  3024 |          |                           | 	; >>>>> print("! Dropped msgs: tick ", 21); 
  3025 | 000016C5 | B81500                    | 	mov	ax, 21
  3026 | 000016C8 | 50                        | 	push	ax
  3027 | 000016C9 | B8[7F16]                  | 	mov	ax, L_lab6app_1
  3028 | 000016CC | 50                        | 	push	ax
  3029 | 000016CD | E81CED                    | 	call	print
  3030 | 000016D0 | 83C404                    | 	add	sp, 4
  3031 |          |                           | 	; >>>>> Line:	42
  3032 |          |                           | 	; >>>>> if (tmp->tick - (count+1) > 1) { 
  3033 | 000016D3 | 8B76FE                    | 	mov	si, word [bp-2]
  3034 | 000016D6 | 8B04                      | 	mov	ax, word [si]
  3035 | 000016D8 | 2B46F8                    | 	sub	ax, word [bp-8]
  3036 | 000016DB | 48                        | 	dec	ax
  3037 | 000016DC | 83F801                    | 	cmp	ax, 1
  3038 | 000016DF | 7E26                      | 	jle	L_lab6app_12
  3039 |          |                           | 	; >>>>> Line:	43
  3040 |          |                           | 	; >>>>> printInt(count+1); 
  3041 | 000016E1 | 8B46F8                    | 	mov	ax, word [bp-8]
  3042 | 000016E4 | 40                        | 	inc	ax
  3043 | 000016E5 | 50                        | 	push	ax
  3044 | 000016E6 | E863ED                    | 	call	printInt
  3045 | 000016E9 | 83C402                    | 	add	sp, 2
  3046 |          |                           | 	; >>>>> Line:	44
  3047 |          |                           | 	; >>>>> printChar('-'); 
  3048 | 000016EC | B02D                      | 	mov	al, 45
  3049 | 000016EE | 50                        | 	push	ax
  3050 | 000016EF | E812ED                    | 	call	printChar
  3051 | 000016F2 | 83C402                    | 	add	sp, 2
  3052 |          |                           | 	; >>>>> Line:	45
  3053 |          |                           | 	; >>>>> printInt(tmp->tick-1); 
  3054 | 000016F5 | 8B76FE                    | 	mov	si, word [bp-2]
  3055 | 000016F8 | 8B04                      | 	mov	ax, word [si]
  3056 | 000016FA | 48                        | 	dec	ax
  3057 | 000016FB | 50                        | 	push	ax
  3058 | 000016FC | E84DED                    | 	call	printInt
  3059 | 000016FF | 83C402                    | 	add	sp, 2
  3060 |          |                           | 	; >>>>> Line:	46
  3061 |          |                           | 	; >>>>> printNewLine(); 
  3062 | 00001702 | E811ED                    | 	call	printNewLine
  3063 | 00001705 | EB10                      | 	jmp	L_lab6app_13
  3064 |          |                           | L_lab6app_12:
  3065 |          |                           | 	; >>>>> Line:	49
  3066 |          |                           | 	; >>>>> printInt(tmp->tick-1); 
  3067 | 00001707 | 8B76FE                    | 	mov	si, word [bp-2]
  3068 | 0000170A | 8B04                      | 	mov	ax, word [si]
  3069 | 0000170C | 48                        | 	dec	ax
  3070 | 0000170D | 50                        | 	push	ax
  3071 | 0000170E | E83BED                    | 	call	printInt
  3072 | 00001711 | 83C402                    | 	add	sp, 2
  3073 |          |                           | 	; >>>>> Line:	50
  3074 |          |                           | 	; >>>>> printNewLine(); 
  3075 | 00001714 | E8FFEC                    | 	call	printNewLine
  3076 |          |                           | L_lab6app_13:
  3077 |          |                           | L_lab6app_11:
  3078 |          |                           | 	; >>>>> Line:	55
  3079 |          |                           | 	; >>>>> count = tmp->tick; 
  3080 | 00001717 | 8B76FE                    | 	mov	si, word [bp-2]
  3081 | 0000171A | 8B04                      | 	mov	ax, word [si]
  3082 | 0000171C | 8946F8                    | 	mov	word [bp-8], ax
  3083 |          |                           | 	; >>>>> Line:	58
  3084 |          |                           | 	; >>>>> ask(2); 
  3085 | 0000171F | 8B76FE                    | 	mov	si, word [bp-2]
  3086 | 00001722 | 83C602                    | 	add	si, 2
  3087 | 00001725 | 8B46FC                    | 	mov	ax, word [bp-4]
  3088 | 00001728 | 3B04                      | 	cmp	ax, word [si]
  3089 | 0000172A | 7E0B                      | 	jle	L_lab6app_14
  3090 |          |                           | 	; >>>>> Line:	59
  3091 |          |                           | 	; >>>>> min = tmp->data; 
  3092 | 0000172C | 8B76FE                    | 	mov	si, word [bp-2]
  3093 | 0000172F | 83C602                    | 	add	si, 2
  3094 | 00001732 | 8B04                      | 	mov	ax, word [si]
  3095 | 00001734 | 8946FC                    | 	mov	word [bp-4], ax
  3096 |          |                           | L_lab6app_14:
  3097 |          |                           | 	; >>>>> Line:	60
  3098 |          |                           | 	; >>>>> if (tmp->data > max) 
  3099 | 00001737 | 8B76FE                    | 	mov	si, word [bp-2]
  3100 | 0000173A | 83C602                    | 	add	si, 2
  3101 | 0000173D | 8B46FA                    | 	mov	ax, word [bp-6]
  3102 | 00001740 | 3B04                      | 	cmp	ax, word [si]
  3103 | 00001742 | 7D0B                      | 	jge	L_lab6app_15
  3104 |          |                           | 	; >>>>> Line:	61
  3105 |          |                           | 	; >>>>> max = tmp->data; 
  3106 | 00001744 | 8B76FE                    | 	mov	si, word [bp-2]
  3107 | 00001747 | 83C602                    | 	add	si, 2
  3108 | 0000174A | 8B04                      | 	mov	ax, word [si]
  3109 | 0000174C | 8946FA                    | 	mov	word [bp-6], ax
  3110 |          |                           | L_lab6app_15:
  3111 |          |                           | 	; >>>>> Line:	64
  3112 |          |                           | 	; >>>>> print("Ticks: ", 7); 
  3113 | 0000174F | B80700                    | 	mov	ax, 7
  3114 | 00001752 | 50                        | 	push	ax
  3115 | 00001753 | B8[7716]                  | 	mov	ax, L_lab6app_2
  3116 | 00001756 | 50                        | 	push	ax
  3117 | 00001757 | E892EC                    | 	call	print
  3118 | 0000175A | 83C404                    | 	add	sp, 4
  3119 |          |                           | 	; >>>>> Line:	65
  3120 |          |                           | 	; >>>>> printInt(count); 
  3121 | 0000175D | FF76F8                    | 	push	word [bp-8]
  3122 | 00001760 | E8E9EC                    | 	call	printInt
  3123 | 00001763 | 83C402                    | 	add	sp, 2
  3124 |          |                           | 	; >>>>> Line:	66
  3125 |          |                           | 	; >>>>> print("\t", 1); 
  3126 | 00001766 | B80100                    | 	mov	ax, 1
  3127 | 00001769 | 50                        | 	push	ax
  3128 | 0000176A | B8[7516]                  | 	mov	ax, L_lab6app_3
  3129 | 0000176D | 50                        | 	push	ax
  3130 | 0000176E | E87BEC                    | 	call	print
  3131 | 00001771 | 83C404                    | 	add	sp, 4
  3132 |          |                           | 	; >>>>> Line:	67
  3133 |          |                           | 	; >>>>> print("Min: ", 5); 
  3134 | 00001774 | B80500                    | 	mov	ax, 5
  3135 | 00001777 | 50                        | 	push	ax
  3136 | 00001778 | B8[6F16]                  | 	mov	ax, L_lab6app_4
  3137 | 0000177B | 50                        | 	push	ax
  3138 | 0000177C | E86DEC                    | 	call	print
  3139 | 0000177F | 83C404                    | 	add	sp, 4
  3140 |          |                           | 	; >>>>> Line:	68
  3141 |          |                           | 	; >>>>> printInt(min); 
  3142 | 00001782 | FF76FC                    | 	push	word [bp-4]
  3143 | 00001785 | E8C4EC                    | 	call	printInt
  3144 | 00001788 | 83C402                    | 	add	sp, 2
  3145 |          |                           | 	; >>>>> Line:	69
  3146 |          |                           | 	; >>>>> print("\t", 1); 
  3147 | 0000178B | B80100                    | 	mov	ax, 1
  3148 | 0000178E | 50                        | 	push	ax
  3149 | 0000178F | B8[7516]                  | 	mov	ax, L_lab6app_3
  3150 | 00001792 | 50                        | 	push	ax
  3151 | 00001793 | E856EC                    | 	call	print
  3152 | 00001796 | 83C404                    | 	add	sp, 4
  3153 |          |                           | 	; >>>>> Line:	70
  3154 |          |                           | 	; >>>>> print("Max: ", 5); 
  3155 | 00001799 | B80500                    | 	mov	ax, 5
  3156 | 0000179C | 50                        | 	push	ax
  3157 | 0000179D | B8[6916]                  | 	mov	ax, L_lab6app_5
  3158 | 000017A0 | 50                        | 	push	ax
  3159 | 000017A1 | E848EC                    | 	call	print
  3160 | 000017A4 | 83C404                    | 	add	sp, 4
  3161 |          |                           | 	; >>>>> Line:	71
  3162 |          |                           | 	; >>>>> printInt(max); 
  3163 | 000017A7 | FF76FA                    | 	push	word [bp-6]
  3164 | 000017AA | E89FEC                    | 	call	printInt
  3165 | 000017AD | 83C402                    | 	add	sp, 2
  3166 |          |                           | 	; >>>>> Line:	72
  3167 |          |                           | 	; >>>>> printNewLine(); 
  3168 | 000017B0 | E863EC                    | 	call	printNewLine
  3169 |          |                           | L_lab6app_9:
  3170 | 000017B3 | E9F5FE                    | 	jmp	L_lab6app_8
  3171 |          |                           | L_lab6app_10:
  3172 | 000017B6 | 89EC                      | 	mov	sp, bp
  3173 | 000017B8 | 5D                        | 	pop	bp
  3174 | 000017B9 | C3                        | 	ret
  3175 |          |                           | L_lab6app_6:
  3176 | 000017BA | 55                        | 	push	bp
  3177 | 000017BB | 89E5                      | 	mov	bp, sp
  3178 | 000017BD | 83EC08                    | 	sub	sp, 8
  3179 | 000017C0 | E9D6FE                    | 	jmp	L_lab6app_7
  3180 | 000017C3 | 90                        | 	ALIGN	2
  3181 |          |                           | BTask:
  3182 |          |                           | 	; >>>>> Line:	77
  3183 |          |                           | 	; >>>>> { 
  3184 | 000017C4 | E9BA00                    | 	jmp	L_lab6app_17
  3185 |          |                           | L_lab6app_18:
  3186 |          |                           | 	; >>>>> Line:	81
  3187 |          |                           | 	; >>>>> curval = 1001; 
  3188 | 000017C7 | C746FCE903                | 	mov	word [bp-4], 1001
  3189 |          |                           | 	; >>>>> Line:	82
  3190 |          |                           | 	; >>>>> chcount = 0; 
  3191 | 000017CC | C746F60000                | 	mov	word [bp-10], 0
  3192 |          |                           | 	; >>>>> Line:	84
  3193 |          |                           | 	; >>>>> while (1) 
  3194 | 000017D1 | E9A600                    | 	jmp	L_lab6app_20
  3195 |          |                           | L_lab6app_19:
  3196 |          |                           | 	; >>>>> Line:	86
  3197 |          |                           | 	; >>>>> YKDelayTask(2); 
  3198 | 000017D4 | B80200                    | 	mov	ax, 2
  3199 | 000017D7 | 50                        | 	push	ax
  3200 | 000017D8 | E8D5F8                    | 	call	YKDelayTask
  3201 | 000017DB | 83C402                    | 	add	sp, 2
  3202 |          |                           | 	; >>>>> Line:	88
  3203 |          |                           | 	; >>>>> if (GlobalFlag == 1) 
  3204 | 000017DE | 833E[6A26]01              | 	cmp	word [GlobalFlag], 1
  3205 | 000017E3 | 7403E99200                | 	jne	L_lab6app_22
  3206 |          |                           | 	; >>>>> Line:	90
  3207 |          |                           | 	; >>>>> YKEnterMutex(); 
  3208 | 000017E8 | E869F3                    | 	call	YKEnterMutex
  3209 |          |                           | 	; >>>>> Line:	91
  3210 |          |                           | 	; >>>>> busycount = YKTickNum; 
  3211 | 000017EB | A1[4413]                  | 	mov	ax, word [YKTickNum]
  3212 | 000017EE | 8946FE                    | 	mov	word [bp-2], ax
  3213 |          |                           | 	; >>>>> Line:	92
  3214 |          |                           | 	; >>>>> YKExitMutex(); 
  3215 | 000017F1 | E862F3                    | 	call	YKExitMutex
  3216 |          |                           | 	; >>>>> Line:	94
  3217 |          |                           | 	; >>>>> while (1) 
  3218 | 000017F4 | EB74                      | 	jmp	L_lab6app_24
  3219 |          |                           | L_lab6app_23:
  3220 |          |                           | 	; >>>>> Line:	96
  3221 |          |                           | 	; >>>>> YKEnterMutex(); 
  3222 | 000017F6 | E85BF3                    | 	call	YKEnterMutex
  3223 |          |                           | 	; >>>>> Line:	97
  3224 |          |                           | 	; >>>>> tickNum = YKTickNum; 
  3225 | 000017F9 | A1[4413]                  | 	mov	ax, word [YKTickNum]
  3226 | 000017FC | 8946F4                    | 	mov	word [bp-12], ax
  3227 |          |                           | 	; >>>>> Line:	98
  3228 |          |                           | 	; >>>>> YKExitMutex(); 
  3229 | 000017FF | E854F3                    | 	call	YKExitMutex
  3230 |          |                           | 	; >>>>> Line:	99
  3231 |          |                           | 	; >>>>> if(tickNum >= busycount + 5) break; 
  3232 | 00001802 | 8B46FE                    | 	mov	ax, word [bp-2]
  3233 | 00001805 | 83C005                    | 	add	ax, 5
  3234 | 00001808 | 8B56F4                    | 	mov	dx, word [bp-12]
  3235 | 0000180B | 39C2                      | 	cmp	dx, ax
  3236 | 0000180D | 7202                      | 	jb	L_lab6app_26
  3237 |          |                           | 	; >>>>> Line:	99
  3238 |          |                           | 	; >>>>> if(tickNum >= busycount + 5) break; 
  3239 | 0000180F | EB5B                      | 	jmp	L_lab6app_25
  3240 |          |                           | L_lab6app_26:
  3241 |          |                           | 	; >>>>> Line:	101
  3242 |          |                           | 	; >>>>> curval += 2; 
  3243 | 00001811 | 8346FC02                  | 	add	word [bp-4], 2
  3244 |          |                           | 	; >>>>> Line:	102
  3245 |          |                           | 	; >>>>> flag = 0; 
  3246 | 00001815 | C746F80000                | 	mov	word [bp-8], 0
  3247 |          |                           | 	; >>>>> Line:	103
  3248 |          |                           | 	; >>>>> for (j = 3; (j*j) < curval; j += 2) 
  3249 | 0000181A | C746FA0300                | 	mov	word [bp-6], 3
  3250 | 0000181F | EB18                      | 	jmp	L_lab6app_28
  3251 |          |                           | L_lab6app_27:
  3252 |          |                           | 	; >>>>> Line:	105
  3253 |          |                           | 	; >>>>> if (curval % j == 0) 
  3254 | 00001821 | 8B46FC                    | 	mov	ax, word [bp-4]
  3255 | 00001824 | 99                        | 	cwd
  3256 | 00001825 | F77EFA                    | 	idiv	word [bp-6]
  3257 | 00001828 | 89D0                      | 	mov	ax, dx
  3258 | 0000182A | 85C0                      | 	test	ax, ax
  3259 | 0000182C | 7507                      | 	jne	L_lab6app_31
  3260 |          |                           | 	; >>>>> Line:	107
  3261 |          |                           | 	; >>>>> x, 
  3262 | 0000182E | C746F80100                | 	mov	word [bp-8], 1
  3263 |          |                           | 	; >>>>> Line:	108
  3264 |          |                           | 	; >>>>> break; 
  3265 | 00001833 | EB11                      | 	jmp	L_lab6app_29
  3266 |          |                           | L_lab6app_31:
  3267 |          |                           | L_lab6app_30:
  3268 | 00001835 | 8346FA02                  | 	add	word [bp-6], 2
  3269 |          |                           | L_lab6app_28:
  3270 | 00001839 | 8B46FA                    | 	mov	ax, word [bp-6]
  3271 | 0000183C | F76EFA                    | 	imul	word [bp-6]
  3272 | 0000183F | 8B56FC                    | 	mov	dx, word [bp-4]
  3273 | 00001842 | 39C2                      | 	cmp	dx, ax
  3274 | 00001844 | 7FDB                      | 	jg	L_lab6app_27
  3275 |          |                           | L_lab6app_29:
  3276 |          |                           | 	; >>>>> Line:	111
  3277 |          |                           | 	; >>>>> if (!flag) 
  3278 | 00001846 | 8B46F8                    | 	mov	ax, word [bp-8]
  3279 | 00001849 | 85C0                      | 	test	ax, ax
  3280 | 0000184B | 751D                      | 	jne	L_lab6app_32
  3281 |          |                           | 	; >>>>> Line:	113
  3282 |          |                           | 	; >>>>> printChar('.'); 
  3283 | 0000184D | B02E                      | 	mov	al, 46
  3284 | 0000184F | 50                        | 	push	ax
  3285 | 00001850 | E8B1EB                    | 	call	printChar
  3286 | 00001853 | 83C402                    | 	add	sp, 2
  3287 |          |                           | 	; >>>>> Line:	114
  3288 |          |                           | 	; >>>>> if (++chcount > 75) 
  3289 | 00001856 | 8B46F6                    | 	mov	ax, word [bp-10]
  3290 | 00001859 | 40                        | 	inc	ax
  3291 | 0000185A | 8946F6                    | 	mov	word [bp-10], ax
  3292 | 0000185D | 83F84B                    | 	cmp	ax, 75
  3293 | 00001860 | 7E08                      | 	jle	L_lab6app_33
  3294 |          |                           | 	; >>>>> Line:	116
  3295 |          |                           | 	; >>>>> printNewLine(); 
  3296 | 00001862 | E8B1EB                    | 	call	printNewLine
  3297 |          |                           | 	; >>>>> Line:	117
  3298 |          |                           | 	; >>>>> chcount = 0; 
  3299 | 00001865 | C746F60000                | 	mov	word [bp-10], 0
  3300 |          |                           | L_lab6app_33:
  3301 |          |                           | L_lab6app_32:
  3302 |          |                           | L_lab6app_24:
  3303 | 0000186A | EB8A                      | 	jmp	L_lab6app_23
  3304 |          |                           | L_lab6app_25:
  3305 |          |                           | 	; >>>>> Line:	121
  3306 |          |                           | 	; >>>>> printNewLine(); 
  3307 | 0000186C | E8A7EB                    | 	call	printNewLine
  3308 |          |                           | 	; >>>>> Line:	122
  3309 |          |                           | 	; >>>>> chcount = 0; 
  3310 | 0000186F | C746F60000                | 	mov	word [bp-10], 0
  3311 |          |                           | 	; >>>>> Line:	123
  3312 |          |                           | 	; >>>>> GlobalFlag = 0; 
  3313 | 00001874 | C706[6A26]0000            | 	mov	word [GlobalFlag], 0
  3314 |          |                           | L_lab6app_22:
  3315 |          |                           | L_lab6app_20:
  3316 | 0000187A | E957FF                    | 	jmp	L_lab6app_19
  3317 |          |                           | L_lab6app_21:
  3318 | 0000187D | 89EC                      | 	mov	sp, bp
  3319 | 0000187F | 5D                        | 	pop	bp
  3320 | 00001880 | C3                        | 	ret
  3321 |          |                           | L_lab6app_17:
  3322 | 00001881 | 55                        | 	push	bp
  3323 | 00001882 | 89E5                      | 	mov	bp, sp
  3324 | 00001884 | 83EC0C                    | 	sub	sp, 12
  3325 | 00001887 | E93DFF                    | 	jmp	L_lab6app_18
  3326 |          |                           | L_lab6app_39:
  3327 | 0000188A | 25203E3E3E3E3E0D0A-       | 	DB	"% >>>>>",0xD,0xA,0
  3328 | 00001893 | 00                        | ...
  3329 |          |                           | L_lab6app_38:
  3330 | 00001894 | 2C2043505520757361-       | 	DB	", CPU usage: ",0
  3331 | 0000189D | 67653A2000                | ...
  3332 |          |                           | L_lab6app_37:
  3333 | 000018A2 | 3C3C3C3C3C20436F6E-       | 	DB	"<<<<< Context switches: ",0
  3334 | 000018AB | 746578742073776974-       | ...
  3335 | 000018B4 | 636865733A2000            | ...
  3336 |          |                           | L_lab6app_36:
  3337 | 000018BB | 44657465726D696E69-       | 	DB	"Determining CPU capacity",0xD,0xA,0
  3338 | 000018C4 | 6E6720435055206361-       | ...
  3339 | 000018CD | 7061636974790D0A00        | ...
  3340 |          |                           | L_lab6app_35:
  3341 | 000018D6 | 57656C636F6D652074-       | 	DB	"Welcome to the YAK kernel",0xD,0xA,0
  3342 | 000018DF | 6F207468652059414B-       | ...
  3343 | 000018E8 | 206B65726E656C0D0A-       | ...
  3344 | 000018F1 | 00                        | ...
  3345 |          |                           | 	ALIGN	2
  3346 |          |                           | STask:
  3347 |          |                           | 	; >>>>> Line:	129
  3348 |          |                           | 	; >>>>> { 
  3349 | 000018F2 | E9E200                    | 	jmp	L_lab6app_40
  3350 |          |                           | L_lab6app_41:
  3351 |          |                           | 	; >>>>> Line:	133
  3352 |          |                           | 	; >>>>> YKDelayTask(1); 
  3353 | 000018F5 | B80100                    | 	mov	ax, 1
  3354 | 000018F8 | 50                        | 	push	ax
  3355 | 000018F9 | E8B4F7                    | 	call	YKDelayTask
  3356 | 000018FC | 83C402                    | 	add	sp, 2
  3357 |          |                           | 	; >>>>> Line:	134
  3358 |          |                           | 	; >>>>> printString("Welcome to the YAK kernel\r\n"); 
  3359 | 000018FF | B8[D618]                  | 	mov	ax, L_lab6app_35
  3360 | 00001902 | 50                        | 	push	ax
  3361 | 00001903 | E822EB                    | 	call	printString
  3362 | 00001906 | 83C402                    | 	add	sp, 2
  3363 |          |                           | 	; >>>>> Line:	135
  3364 |          |                           | 	; >>>>> printString("Determining CPU capacity\r\n"); 
  3365 | 00001909 | B8[BB18]                  | 	mov	ax, L_lab6app_36
  3366 | 0000190C | 50                        | 	push	ax
  3367 | 0000190D | E818EB                    | 	call	printString
  3368 | 00001910 | 83C402                    | 	add	sp, 2
  3369 |          |                           | 	; >>>>> Line:	136
  3370 |          |                           | 	; >>>>> YKDelayTask(1); 
  3371 | 00001913 | B80100                    | 	mov	ax, 1
  3372 | 00001916 | 50                        | 	push	ax
  3373 | 00001917 | E896F7                    | 	call	YKDelayTask
  3374 | 0000191A | 83C402                    | 	add	sp, 2
  3375 |          |                           | 	; >>>>> Line:	137
  3376 |          |                           | 	; >>>>> YKIdleCount = 0; 
  3377 | 0000191D | C706[4213]0000            | 	mov	word [YKIdleCount], 0
  3378 |          |                           | 	; >>>>> Line:	138
  3379 |          |                           | 	; >>>>> YKDelayTask(5); 
  3380 | 00001923 | B80500                    | 	mov	ax, 5
  3381 | 00001926 | 50                        | 	push	ax
  3382 | 00001927 | E886F7                    | 	call	YKDelayTask
  3383 | 0000192A | 83C402                    | 	add	sp, 2
  3384 |          |                           | 	; >>>>> Line:	139
  3385 |          |                           | 	; >>>>> max = YKIdleCount / 25; 
  3386 | 0000192D | A1[4213]                  | 	mov	ax, word [YKIdleCount]
  3387 | 00001930 | 31D2                      | 	xor	dx, dx
  3388 | 00001932 | B91900                    | 	mov	cx, 25
  3389 | 00001935 | F7F1                      | 	div	cx
  3390 | 00001937 | 8946FE                    | 	mov	word [bp-2], ax
  3391 |          |                           | 	; >>>>> Line:	140
  3392 |          |                           | 	; >>>>> YKIdleCount = 0; 
  3393 | 0000193A | C706[4213]0000            | 	mov	word [YKIdleCount], 0
  3394 |          |                           | 	; >>>>> Line:	142
  3395 |          |                           | 	; >>>>> YKNewTask(BTask, (void *) &BTaskStk[512], 10); 
  3396 | 00001940 | B00A                      | 	mov	al, 10
  3397 | 00001942 | 50                        | 	push	ax
  3398 | 00001943 | B8[6A22]                  | 	mov	ax, (BTaskStk+1024)
  3399 | 00001946 | 50                        | 	push	ax
  3400 | 00001947 | B8[C417]                  | 	mov	ax, BTask
  3401 | 0000194A | 50                        | 	push	ax
  3402 | 0000194B | E8A6F2                    | 	call	YKNewTask
  3403 | 0000194E | 83C406                    | 	add	sp, 6
  3404 |          |                           | 	; >>>>> Line:	143
  3405 |          |                           | 	; >>>>> YKNewTask(ATask, (void *) &ATaskStk[512], 20); 
  3406 | 00001951 | B014                      | 	mov	al, 20
  3407 | 00001953 | 50                        | 	push	ax
  3408 | 00001954 | B8[6A1E]                  | 	mov	ax, (ATaskStk+1024)
  3409 | 00001957 | 50                        | 	push	ax
  3410 | 00001958 | B8[9616]                  | 	mov	ax, ATask
  3411 | 0000195B | 50                        | 	push	ax
  3412 | 0000195C | E895F2                    | 	call	YKNewTask
  3413 | 0000195F | 83C406                    | 	add	sp, 6
  3414 |          |                           | 	; >>>>> Line:	145
  3415 |          |                           | 	; >>>>> while (1) 
  3416 | 00001962 | EB6D                      | 	jmp	L_lab6app_43
  3417 |          |                           | L_lab6app_42:
  3418 |          |                           | 	; >>>>> Line:	147
  3419 |          |                           | 	; >>>>> YKDelayTask(20); 
  3420 | 00001964 | B81400                    | 	mov	ax, 20
  3421 | 00001967 | 50                        | 	push	ax
  3422 | 00001968 | E845F7                    | 	call	YKDelayTask
  3423 | 0000196B | 83C402                    | 	add	sp, 2
  3424 |          |                           | 	; >>>>> Line:	149
  3425 |          |                           | 	; >>>>> YKEnterMutex(); 
  3426 | 0000196E | E8E3F1                    | 	call	YKEnterMutex
  3427 |          |                           | 	; >>>>> Line:	150
  3428 |          |                           | 	; >>>>> switchCount = YKCtxSwCount; 
  3429 | 00001971 | A1[4013]                  | 	mov	ax, word [YKCtxSwCount]
  3430 | 00001974 | 8946FC                    | 	mov	word [bp-4], ax
  3431 |          |                           | 	; >>>>> Line:	151
  3432 |          |                           | 	; >>>>> idleCount = YKIdleCount; 
  3433 | 00001977 | A1[4213]                  | 	mov	ax, word [YKIdleCount]
  3434 | 0000197A | 8946FA                    | 	mov	word [bp-6], ax
  3435 |          |                           | 	; >>>>> Line:	152
  3436 |          |                           | 	; >>>>>  
  3437 | 0000197D | E8D6F1                    | 	call	YKExitMutex
  3438 |          |                           | 	; >>>>> Line:	154
  3439 |          |                           | 	; >>>>> printString("<<<<< Context switches: "); 
  3440 | 00001980 | B8[A218]                  | 	mov	ax, L_lab6app_37
  3441 | 00001983 | 50                        | 	push	ax
  3442 | 00001984 | E8A1EA                    | 	call	printString
  3443 | 00001987 | 83C402                    | 	add	sp, 2
  3444 |          |                           | 	; >>>>> Line:	155
  3445 |          |                           | 	; >>>>> printInt((int)switchCount); 
  3446 | 0000198A | FF76FC                    | 	push	word [bp-4]
  3447 | 0000198D | E8BCEA                    | 	call	printInt
  3448 | 00001990 | 83C402                    | 	add	sp, 2
  3449 |          |                           | 	; >>>>> Line:	156
  3450 |          |                           | 	; >>>>> printString(", CPU usage: "); 
  3451 | 00001993 | B8[9418]                  | 	mov	ax, L_lab6app_38
  3452 | 00001996 | 50                        | 	push	ax
  3453 | 00001997 | E88EEA                    | 	call	printString
  3454 | 0000199A | 83C402                    | 	add	sp, 2
  3455 |          |                           | 	; >>>>> Line:	157
  3456 |          |                           | 	; >>>>> tmp = (int) (idleCount/max); 
  3457 | 0000199D | 8B46FA                    | 	mov	ax, word [bp-6]
  3458 | 000019A0 | 31D2                      | 	xor	dx, dx
  3459 | 000019A2 | F776FE                    | 	div	word [bp-2]
  3460 | 000019A5 | 8946F8                    | 	mov	word [bp-8], ax
  3461 |          |                           | 	; >>>>> Line:	158
  3462 |          |                           | 	; >>>>> printInt(100-tmp); 
  3463 | 000019A8 | B86400                    | 	mov	ax, 100
  3464 | 000019AB | 2B46F8                    | 	sub	ax, word [bp-8]
  3465 | 000019AE | 50                        | 	push	ax
  3466 | 000019AF | E89AEA                    | 	call	printInt
  3467 | 000019B2 | 83C402                    | 	add	sp, 2
  3468 |          |                           | 	; >>>>> Line:	159
  3469 |          |                           | 	; >>>>> printString("% >>>>>\r\n"); 
  3470 | 000019B5 | B8[8A18]                  | 	mov	ax, L_lab6app_39
  3471 | 000019B8 | 50                        | 	push	ax
  3472 | 000019B9 | E86CEA                    | 	call	printString
  3473 | 000019BC | 83C402                    | 	add	sp, 2
  3474 |          |                           | 	; >>>>> Line:	161
  3475 |          |                           | 	; >>>>> YKEnterMutex(); 
  3476 | 000019BF | E892F1                    | 	call	YKEnterMutex
  3477 |          |                           | 	; >>>>> Line:	162
  3478 |          |                           | 	; >>>>> YKCtxSwCount = 0; 
  3479 | 000019C2 | C706[4013]0000            | 	mov	word [YKCtxSwCount], 0
  3480 |          |                           | 	; >>>>> Line:	163
  3481 |          |                           | 	; >>>>> YKIdleCount = 0; 
  3482 | 000019C8 | C706[4213]0000            | 	mov	word [YKIdleCount], 0
  3483 |          |                           | 	; >>>>> Line:	164
  3484 |          |                           | 	; >>>>> YKExitMutex(); 
  3485 | 000019CE | E885F1                    | 	call	YKExitMutex
  3486 |          |                           | L_lab6app_43:
  3487 | 000019D1 | EB91                      | 	jmp	L_lab6app_42
  3488 |          |                           | L_lab6app_44:
  3489 | 000019D3 | 89EC                      | 	mov	sp, bp
  3490 | 000019D5 | 5D                        | 	pop	bp
  3491 | 000019D6 | C3                        | 	ret
  3492 |          |                           | L_lab6app_40:
  3493 | 000019D7 | 55                        | 	push	bp
  3494 | 000019D8 | 89E5                      | 	mov	bp, sp
  3495 | 000019DA | 83EC08                    | 	sub	sp, 8
  3496 | 000019DD | E915FF                    | 	jmp	L_lab6app_41
  3497 |          |                           | 	ALIGN	2
  3498 |          |                           | main:
  3499 |          |                           | 	; >>>>> Line:	169
  3500 |          |                           | 	; >>>>> { 
  3501 | 000019E0 | EB32                      | 	jmp	L_lab6app_46
  3502 |          |                           | L_lab6app_47:
  3503 |          |                           | 	; >>>>> Line:	170
  3504 |          |                           | 	; >>>>> YKInitialize(); 
  3505 | 000019E2 | E895F1                    | 	call	YKInitialize
  3506 |          |                           | 	; >>>>> Line:	173
  3507 |          |                           | 	; >>>>> GlobalFlag = 0; 
  3508 | 000019E5 | C706[6A26]0000            | 	mov	word [GlobalFlag], 0
  3509 |          |                           | 	; >>>>> Line:	174
  3510 |          |                           | 	; >>>>> MsgQPtr = YKQCreate(MsgQ, 10); 
  3511 | 000019EB | B80A00                    | 	mov	ax, 10
  3512 | 000019EE | 50                        | 	push	ax
  3513 | 000019EF | B8[6C26]                  | 	mov	ax, MsgQ
  3514 | 000019F2 | 50                        | 	push	ax
  3515 | 000019F3 | E8C8F7                    | 	call	YKQCreate
  3516 | 000019F6 | 83C404                    | 	add	sp, 4
  3517 | 000019F9 | A3[8026]                  | 	mov	word [MsgQPtr], ax
  3518 |          |                           | 	; >>>>> Line:	175
  3519 |          |                           | 	; >>>>> YKNewTask(STask, (void *) &STaskStk[512], 30); 
  3520 | 000019FC | B01E                      | 	mov	al, 30
  3521 | 000019FE | 50                        | 	push	ax
  3522 | 000019FF | B8[6A26]                  | 	mov	ax, (STaskStk+1024)
  3523 | 00001A02 | 50                        | 	push	ax
  3524 | 00001A03 | B8[F218]                  | 	mov	ax, STask
  3525 | 00001A06 | 50                        | 	push	ax
  3526 | 00001A07 | E8EAF1                    | 	call	YKNewTask
  3527 | 00001A0A | 83C406                    | 	add	sp, 6
  3528 |          |                           | 	; >>>>> Line:	177
  3529 |          |                           | 	; >>>>> YKRun() 
  3530 | 00001A0D | E8D2F2                    | 	call	YKRun
  3531 | 00001A10 | 89EC                      | 	mov	sp, bp
  3532 | 00001A12 | 5D                        | 	pop	bp
  3533 | 00001A13 | C3                        | 	ret
  3534 |          |                           | L_lab6app_46:
  3535 | 00001A14 | 55                        | 	push	bp
  3536 | 00001A15 | 89E5                      | 	mov	bp, sp
  3537 | 00001A17 | EBC9                      | 	jmp	L_lab6app_47
  3538 | 00001A19 | 90                        | 	ALIGN	2
  3539 |          |                           | MsgArray:
  3540 | 00001A1A | 00<rept>                  | 	TIMES	80 db 0
  3541 |          |                           | ATaskStk:
  3542 | 00001A6A | 00<rept>                  | 	TIMES	1024 db 0
  3543 |          |                           | BTaskStk:
  3544 | 00001E6A | 00<rept>                  | 	TIMES	1024 db 0
  3545 |          |                           | STaskStk:
  3546 | 0000226A | 00<rept>                  | 	TIMES	1024 db 0
  3547 |          |                           | GlobalFlag:
  3548 | 0000266A | 00<rept>                  | 	TIMES	2 db 0
  3549 |          |                           | MsgQ:
  3550 | 0000266C | 00<rept>                  | 	TIMES	20 db 0
  3551 |          |                           | MsgQPtr:
  3552 | 00002680 | 00<rept>                  | 	TIMES	2 db 0
